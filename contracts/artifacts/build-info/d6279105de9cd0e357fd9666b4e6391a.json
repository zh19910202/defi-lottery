{
	"id": "d6279105de9cd0e357fd9666b4e6391a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/YieldAggregator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./interfaces/IComet.sol\";\nimport \"./interfaces/IVault.sol\";\nimport \"./interfaces/IPrizePool.sol\";\n\n/// @title Yield Aggregator Contract\n/// @notice Manages deposits and withdrawals to Compound protocol for yield generation\n/// @dev Implements ReentrancyGuard for security\ncontract YieldAggregator is Ownable {\n    using SafeERC20 for IERC20;\n\n    IComet public immutable comet;\n\n    IERC20 public immutable weth;\n    IVault public vault;\n    IPrizePool public prizePool;\n\n    /// @notice Events for tracking deposits and withdrawals\n    event Deposited(address indexed user, uint256 amount, uint256 timestamp);\n    event Withdrawn(address indexed user, uint256 amount, uint256 timestamp);\n\n    constructor(address _weth, address _vault, address _prizePool, address _comet) {\n        require(_weth != address(0), \"Invalid WETH address\");\n        require(_vault != address(0), \"Invalid Vault address\");\n        require(_prizePool != address(0), \"Invalid PrizePool address\");\n\n        weth = IERC20(_weth);\n        vault = IVault(_vault);\n        prizePool = IPrizePool(_prizePool);\n        comet = IComet(_comet);\n    }\n\n    /// @notice Restricts function access to Vault or PrizePool contract only\n    /// @dev Modifier to ensure only Vault contract can call certain functions\n\n    modifier onlyPrizePoolOrVault() {\n        require(\n            msg.sender == address(prizePool) || msg.sender == address(vault),\n            \"Caller is not the PrizePool or Vault contract\"\n        );\n        _;\n    }\n\n    modifier onlyVault() {\n        require(msg.sender == address(vault), \"Caller is not the Vault contract\");\n        _;\n    }\n\n    /// @notice Deposits WETH into Compound to earn interest\n    /// @dev Uses SafeERC20 for transferFrom and requires Vault authorization\n    /// @param amount Amount of WETH to deposit\n    /// @return success True if deposit was successful\n    function deposit(uint256 amount) external onlyVault returns (bool) {\n        require(amount > 0, \"Amount must be greater than zero\");\n\n        // Transfer WETH from Vault to this contract\n        weth.safeTransferFrom(msg.sender, address(this), amount);\n\n        // Approve WETH to Compound\n        weth.safeApprove(address(comet), amount);\n\n        // Supply WETH to Compound V3\n        comet.supply(address(weth), amount);\n\n        // Emit deposit event\n        emit Deposited(msg.sender, amount, block.timestamp);\n        return true;\n    }\n\n    /// @notice Withdraws WETH from Compound\n    /// @dev Can only be called by authorized contracts (PrizePool or Vault)\n    /// @param amount Amount of WETH to withdraw\n    /// @return success True if withdrawal was successful\n    function withdraw(uint256 amount) external onlyPrizePoolOrVault returns (bool) {\n        require(amount > 0, \"Amount must be greater than zero\");\n\n        // Withdraw WETH directly from Compound V3\n        comet.withdraw(address(weth), amount);\n\n        // Transfer WETH to caller\n        weth.safeTransfer(msg.sender, amount);\n\n        // Emit withdrawal event\n        emit Withdrawn(msg.sender, amount, block.timestamp);\n        return true;\n    }\n\n    /// @notice Gets the current balance of WETH in Compound\n    /// @return The current balance in Compound\n    function balanceOf() external view returns (uint256) {\n        return comet.balanceOf(address(this));\n    }\n}\n"
			},
			"contracts/interfaces/IPrizePool.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface IPrizePool {\n    struct LotteryInfo {\n        address winner;\n        uint256 prizeValue;\n        uint256 timestamp;\n        uint256 randomNumber;\n        bool isClaimed;\n    }\n\n    event PrizeClaimed(address indexed winner, uint256 indexed lotteryId, uint256 amount);\n    event FeeRateUpdated(uint256 oldFeeRate, uint256 newFeeRate);\n    event FeeCollected(uint256 amount);\n    event YieldAggregatorSet(\n        address indexed oldYieldAggregator,\n        address indexed newYieldAggregator\n    );\n    event VaultSet(address indexed vault);\n\n    /// @notice Allows a winner to claim their ETH prize\n    /// @param lotteryId The ID of the lottery round to claim prize for\n    function claimPrize(uint256 lotteryId) external;\n\n    /// @notice Gets the current prize pool amount in ETH\n    /// @return The current amount of ETH in the prize pool (in wei)\n    function getPrizePoolAmount() external view returns (uint256);\n\n    /// @notice Adds ETH to the prize pool\n    function addToPrizePool() external payable;\n\n    /// @notice Sets the fee rate for prize claims\n    /// @param _feeRate The new fee rate in basis points (1% = 100)\n    function setFeeRate(uint256 _feeRate) external;\n\n    /// @notice Gets the current fee rate\n    /// @return The fee rate in basis points\n    function feeRate() external view returns (uint256);\n\n    /// @notice Sets the yield aggregator address\n    /// @param _yieldAggregator The address of the yield aggregator\n    function setYieldAggregator(address _yieldAggregator) external;\n\n    /// @notice Sets the vault address\n    /// @param _vault The address of the vault\n    function setVault(address _vault) external;\n\n    /// @notice Sets the WETH token address\n    /// @param _weth The address of the WETH token\n    function setWETH(address _weth) external;\n}\n"
			},
			"contracts/interfaces/IVault.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/// @title IVault Interface\n/// @notice Interface for the Vault contract that manages user deposits and withdrawals\ninterface IVault {\n    /// @notice Struct to store user deposit information\n    struct Deposit {\n        uint128 amount;\n        uint32 timestamp;\n        uint96 weight;\n    }\n\n    /// @notice Emitted when a user makes a deposit\n    /// @param user The address of the user who made the deposit\n    /// @param amount The amount deposited\n    /// @param timestamp The time of the deposit\n    /// @param roundId The ID of the lottery round\n    event Deposited(address indexed user, uint256 amount, uint256 timestamp, uint256 roundId);\n\n    /// @notice Emitted when a user withdraws their deposit\n    /// @param user The address of the user who made the withdrawal\n    /// @param amount The amount withdrawn\n    /// @param timestamp The time of the withdrawal\n    /// @param roundId The ID of the lottery round\n    event Withdrawn(address indexed user, uint256 amount, uint256 timestamp, uint256 roundId);\n\n    /// @notice Emitted when a shortfall is covered by withdrawing from yield aggregator\n    /// @param user The address of the user who triggered the shortfall\n    /// @param amount The amount of the shortfall that was covered\n    /// @param roundId The ID of the lottery round\n    event ShortfallCovered(address indexed user, uint256 amount, uint256 roundId);\n\n    /// @notice Emitted when a fee is deposited to the yield aggregator\n    /// @param amount The amount of the fee deposited\n    /// @param timestamp The time of the deposit\n    event FeeDeposited(uint256 amount, uint256 timestamp);\n\n    /// @notice Emitted when a new round is started\n    /// @param roundId The ID of the new round\n    /// @param timestamp The timestamp when the round was started\n    /// @param drawTimestamp The expected timestamp for the draw\n    event NewRoundStarted(uint256 indexed roundId, uint256 timestamp, uint256 drawTimestamp);\n\n    /// @notice Emitted when share tokens are minted\n    /// @param user The address of the user who received the minted tokens\n    /// @param amount The amount of tokens minted\n    /// @param timestamp The timestamp when the tokens were minted\n    event ShareTokenMinted(address indexed user, uint256 amount, uint256 timestamp);\n\n    /// @notice Emitted when share tokens are burned\n    /// @param amount The amount of tokens burned\n    /// @param timestamp The timestamp when the tokens were burned\n    event ShareTokenBurned(uint256 amount, uint256 timestamp);\n\n    /// @notice Emitted when yield aggregator is set\n    /// @param oldYieldAggregator The address of the old yield aggregator\n    /// @param newYieldAggregator The address of the new yield aggregator\n    event YieldAggregatorSet(\n        address indexed oldYieldAggregator,\n        address indexed newYieldAggregator\n    );\n\n    /// @notice Sets the lottery contract address\n    /// @param _lottery The address of the lottery contract\n    function setLottery(address _lottery) external;\n\n    /// @notice Sets the router contract address\n    /// @param _router The address of the router contract\n    function setRouter(address _router) external;\n\n    /// @notice Sets the prize pool contract address\n    /// @param _prizePool The address of the prize pool contract\n    function setPrizePool(address _prizePool) external;\n\n    /// @notice Sets the WETH token address\n    /// @param _weth The address of the WETH token\n    function setWETH(address _weth) external;\n\n    /// @notice Sets the share token address\n    /// @param _shareToken The address of the share token\n    function setShareToken(address _shareToken) external;\n\n    /// @notice Sets the yield aggregator address\n    /// @param _yieldAggregator The address of the yield aggregator\n    function setYieldAggregator(address _yieldAggregator) external;\n\n    /// @notice Initialize the contract\n    function initialize() external;\n\n    /// @notice Returns the deposit information for a specific user in the current round\n    /// @param user The address of the user\n    /// @return The user's deposit information\n    function userDeposits(address user) external view returns (Deposit memory);\n\n    /// @notice Returns the deposit information for a specific user in a specific round\n    /// @param user The address of the user\n    /// @param roundId The ID of the round\n    /// @return The user's deposit information\n    function userDeposits(address user, uint256 roundId) external view returns (Deposit memory);\n\n    /// @notice Starts a new lottery round\n    /// @dev Can only be called by the lottery contract\n    /// @param newRoundId The ID of the new lottery round\n    function startNewRound(uint256 newRoundId) external;\n\n    /// @notice Allows users to deposit WETH tokens into the vault for the current round\n    /// @param amount WETH代币数量\n    function deposit(uint256 amount) external;\n\n    /// @notice 允许任何地址代表用户进行WETH代币存款\n    /// @dev 用户需要预先授权调用者使用其WETH代币\n    /// @param user 实际用户地址\n    /// @param amount WETH代币数量\n    function depositFor(address user, uint256 amount) external;\n\n    /// @notice 将WETH代币费用存入收益聚合器\n    /// @dev 只能由奖池合约调用，发送者必须预先批准本合约使用其WETH\n    /// @param amount 费用金额\n    /// @return 操作是否成功\n    function depositFeeToYieldAggregator(uint256 amount) external returns (bool);\n\n    /// @notice Allows users to withdraw all their deposited ETH from the current round\n    /// @dev Will withdraw the full amount of user's deposit and reset their weight to zero\n    function withdraw() external;\n\n    /// @notice Allows users to withdraw all their deposited ETH from a specific round\n    /// @param roundId The ID of the lottery round\n    /// @dev Will withdraw the full amount of user's deposit and reset their weight to zero\n    function withdraw(uint256 roundId) external;\n\n    /// @notice Returns the total number of participants in the current round\n    /// @return The number of users in the current lottery round\n    function getUserCount() external view returns (uint256);\n\n    /// @notice Returns the total number of participants in a specific round\n    /// @param roundId The ID of the lottery round\n    /// @return The number of users in the specified lottery round\n    function getUserCount(uint256 roundId) external view returns (uint256);\n\n    /// @notice Returns the user address at the given index in the current round\n    /// @param index The index of the user in the participants array\n    /// @return The address of the user\n    function getUser(uint256 index) external view returns (address);\n\n    /// @notice Returns the user address at the given index in a specific round\n    /// @param index The index of the user in the participants array\n    /// @param roundId The ID of the lottery round\n    /// @return The address of the user\n    function getUser(uint256 index, uint256 roundId) external view returns (address);\n\n    /// @notice Returns the total amount of ETH deposited in the current round\n    /// @return The total amount of ETH in the vault for the current round\n    function getDepositTotal() external view returns (uint256);\n\n    /// @notice Returns the total amount of ETH deposited in a specific round\n    /// @param roundId The ID of the lottery round\n    /// @return The total amount of ETH in the vault for the specified round\n    function getDepositTotal(uint256 roundId) external view returns (uint256);\n\n    /// @notice Returns the total amount of ETH deposited across all rounds\n    /// @return The total amount of ETH in the vault across all rounds\n    function getAllDepositsTotal() external view returns (uint256);\n\n    /// @notice Returns the total weight of all participants in the current round\n    /// @return The sum of all users' weights in the current lottery round\n    function getTotalWeight() external view returns (uint256);\n\n    /// @notice Returns the total weight of all participants in a specific round\n    /// @param roundId The ID of the lottery round\n    /// @return The sum of all users' weights in the specified lottery round\n    function getTotalWeight(uint256 roundId) external view returns (uint256);\n\n    /// @notice Returns the current active round ID\n    /// @return The ID of the current active lottery round\n    function getCurrentRoundId() external view returns (uint256);\n\n    /// @notice Returns the WETH token address\n    /// @return The address of the WETH token\n    function weth() external view returns (address);\n\n    /// @notice 返回权益代币地址\n    /// @return 权益代币地址\n    function getShareToken() external view returns (address);\n}\n"
			},
			"contracts/interfaces/IComet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface IComet {\n    struct UserBasic {\n        uint104 principal;\n        uint64 baseTrackingIndex;\n        uint64 baseTrackingAccrued;\n        uint16 assetsIn;\n        uint8 _reserved;\n    }\n    \n\n    function balanceOf(address account) external view returns (uint256);\n    \n    function userBasic(address account) external view returns (UserBasic memory);\n\n    // function accrueAccount(address account) external;\n\n    function withdraw(address asset, uint256 amount) external;\n\n    /// @notice Supply an amount of asset to the protocol\n    /// @param asset The address of the asset to supply\n    /// @param amount The amount to supply\n    function supply(address asset, uint256 amount) external;\n\n    \n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220e9ef56ac2194c6530a9f563201935d5e668fecfba341833652841d650817863e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220e9ef56ac2194c6530a9f563201935d5e668fecfba341833652841d650817863e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xEF JUMP 0xAC 0x21 SWAP5 0xC6 MSTORE8 EXP SWAP16 JUMP ORIGIN ADD SWAP4 TSTORE MCOPY PUSH7 0x8FECFBA3418336 MSTORE DUP5 SAR PUSH6 0x817863E6473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "645:3270:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;645:3270:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220e9ef56ac2194c6530a9f563201935d5e668fecfba341833652841d650817863e64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xEF JUMP 0xAC 0x21 SWAP5 0xC6 MSTORE8 EXP SWAP16 JUMP ORIGIN ADD SWAP4 TSTORE MCOPY PUSH7 0x8FECFBA3418336 MSTORE DUP5 SAR PUSH6 0x817863E6473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "645:3270:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e9ef56ac2194c6530a9f563201935d5e668fecfba341833652841d650817863e64736f6c634300081e0033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/YieldAggregator.sol",
								"contracts/interfaces/IComet.sol",
								"contracts/interfaces/IPrizePool.sol",
								"contracts/interfaces/IVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212203565bf5a658e73cf61ccc20232dde8290ea615b848857d2b2bb8e96e705d4b2564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203565bf5a658e73cf61ccc20232dde8290ea615b848857d2b2bb8e96e705d4b2564736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD PUSH6 0xBF5A658E73CF PUSH2 0xCCC2 MUL ORIGIN 0xDD 0xE8 0x29 0xE 0xA6 ISZERO 0xB8 BASEFEE DUP6 PUSH30 0x2B2BB8E96E705D4B2564736F6C634300081E003300000000000000000000 ",
							"sourceMap": "194:8061:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203565bf5a658e73cf61ccc20232dde8290ea615b848857d2b2bb8e96e705d4b2564736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD PUSH6 0xBF5A658E73CF PUSH2 0xCCC2 MUL ORIGIN 0xDD 0xE8 0x29 0xE 0xA6 ISZERO 0xB8 BASEFEE DUP6 PUSH30 0x2B2BB8E96E705D4B2564736F6C634300081E003300000000000000000000 ",
							"sourceMap": "194:8061:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203565bf5a658e73cf61ccc20232dde8290ea615b848857d2b2bb8e96e705d4b2564736f6c634300081e0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/YieldAggregator.sol",
								"contracts/interfaces/IComet.sol",
								"contracts/interfaces/IPrizePool.sol",
								"contracts/interfaces/IVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/YieldAggregator.sol": {
				"YieldAggregator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_weth",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_vault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_prizePool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_comet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "comet",
							"outputs": [
								{
									"internalType": "contract IComet",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "prizePool",
							"outputs": [
								{
									"internalType": "contract IPrizePool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "contract IVault",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weth",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implements ReentrancyGuard for security",
						"kind": "dev",
						"methods": {
							"balanceOf()": {
								"returns": {
									"_0": "The current balance in Compound"
								}
							},
							"deposit(uint256)": {
								"details": "Uses SafeERC20 for transferFrom and requires Vault authorization",
								"params": {
									"amount": "Amount of WETH to deposit"
								},
								"returns": {
									"_0": "success True if deposit was successful"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(uint256)": {
								"details": "Can only be called by authorized contracts (PrizePool or Vault)",
								"params": {
									"amount": "Amount of WETH to withdraw"
								},
								"returns": {
									"_0": "success True if withdrawal was successful"
								}
							}
						},
						"title": "Yield Aggregator Contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/YieldAggregator.sol\":458:3510  contract YieldAggregator is Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/YieldAggregator.sol\":880:1303  constructor(address _weth, address _vault, address _prizePool, address _comet) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/YieldAggregator.sol\":977:996  _weth != address(0) */\n  dup5\n  and\n    /* \"contracts/YieldAggregator.sol\":969:1021  require(_weth != address(0), \"Invalid WETH address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":867:869   */\n  0x20\n    /* \"contracts/YieldAggregator.sol\":969:1021  require(_weth != address(0), \"Invalid WETH address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":849:870   */\n  mstore\n    /* \"#utility.yul\":906:908   */\n  0x14\n    /* \"#utility.yul\":886:904   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":879:909   */\n  mstore\n    /* \"#utility.yul\":945:967   */\n  0x496e76616c696420574554482061646472657373000000000000000000000000\n    /* \"#utility.yul\":925:943   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":918:968   */\n  mstore\n    /* \"#utility.yul\":985:1003   */\n  0x64\n  add\n    /* \"contracts/YieldAggregator.sol\":969:1021  require(_weth != address(0), \"Invalid WETH address\") */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/YieldAggregator.sol\":1039:1059  _vault != address(0) */\n  dup4\n  and\n    /* \"contracts/YieldAggregator.sol\":1031:1085  require(_vault != address(0), \"Invalid Vault address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1216:1218   */\n  0x20\n    /* \"contracts/YieldAggregator.sol\":1031:1085  require(_vault != address(0), \"Invalid Vault address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1198:1219   */\n  mstore\n    /* \"#utility.yul\":1255:1257   */\n  0x15\n    /* \"#utility.yul\":1235:1253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1228:1258   */\n  mstore\n    /* \"#utility.yul\":1294:1317   */\n  0x496e76616c6964205661756c7420616464726573730000000000000000000000\n    /* \"#utility.yul\":1274:1292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1267:1318   */\n  mstore\n    /* \"#utility.yul\":1335:1353   */\n  0x64\n  add\n    /* \"contracts/YieldAggregator.sol\":1031:1085  require(_vault != address(0), \"Invalid Vault address\") */\n  tag_13\n    /* \"#utility.yul\":1014:1359   */\n  jump\n    /* \"contracts/YieldAggregator.sol\":1031:1085  require(_vault != address(0), \"Invalid Vault address\") */\ntag_15:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/YieldAggregator.sol\":1103:1127  _prizePool != address(0) */\n  dup3\n  and\n    /* \"contracts/YieldAggregator.sol\":1095:1157  require(_prizePool != address(0), \"Invalid PrizePool address\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1566:1568   */\n  0x20\n    /* \"contracts/YieldAggregator.sol\":1095:1157  require(_prizePool != address(0), \"Invalid PrizePool address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1548:1569   */\n  mstore\n    /* \"#utility.yul\":1605:1607   */\n  0x19\n    /* \"#utility.yul\":1585:1603   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1578:1608   */\n  mstore\n    /* \"#utility.yul\":1644:1671   */\n  0x496e76616c6964205072697a65506f6f6c206164647265737300000000000000\n    /* \"#utility.yul\":1624:1642   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1617:1672   */\n  mstore\n    /* \"#utility.yul\":1689:1707   */\n  0x64\n  add\n    /* \"contracts/YieldAggregator.sol\":1095:1157  require(_prizePool != address(0), \"Invalid PrizePool address\") */\n  tag_13\n    /* \"#utility.yul\":1364:1713   */\n  jump\n    /* \"contracts/YieldAggregator.sol\":1095:1157  require(_prizePool != address(0), \"Invalid PrizePool address\") */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/YieldAggregator.sol\":1168:1188  weth = IERC20(_weth) */\n  swap4\n  dup5\n  and\n  0xa0\n  mstore\n    /* \"contracts/YieldAggregator.sol\":1198:1203  vault */\n  0x01\n    /* \"contracts/YieldAggregator.sol\":1198:1220  vault = IVault(_vault) */\n  dup1\n  sload\n  swap4\n  dup6\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap5\n  dup6\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/YieldAggregator.sol\":1230:1239  prizePool */\n  0x02\n    /* \"contracts/YieldAggregator.sol\":1230:1264  prizePool = IPrizePool(_prizePool) */\n  dup1\n  sload\n  swap3\n  dup6\n  and\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/YieldAggregator.sol\":1274:1296  comet = IComet(_comet) */\n  and\n  0x80\n  mstore\n    /* \"contracts/YieldAggregator.sol\":458:3510  contract YieldAggregator is Ownable {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_24:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_27:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:660   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  0x00\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  0x00\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  0x00\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_29:\n    /* \"#utility.yul\":410:450   */\n  tag_30\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_24\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":400:450   */\n  swap4\n  pop\n    /* \"#utility.yul\":469:518   */\n  tag_31\n    /* \"#utility.yul\":514:516   */\n  0x20\n    /* \"#utility.yul\":503:512   */\n  dup7\n    /* \"#utility.yul\":499:517   */\n  add\n    /* \"#utility.yul\":469:518   */\n  tag_24\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":459:518   */\n  swap3\n  pop\n    /* \"#utility.yul\":537:586   */\n  tag_32\n    /* \"#utility.yul\":582:584   */\n  0x40\n    /* \"#utility.yul\":571:580   */\n  dup7\n    /* \"#utility.yul\":567:585   */\n  add\n    /* \"#utility.yul\":537:586   */\n  tag_24\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":527:586   */\n  swap2\n  pop\n    /* \"#utility.yul\":605:654   */\n  tag_33\n    /* \"#utility.yul\":650:652   */\n  0x60\n    /* \"#utility.yul\":639:648   */\n  dup7\n    /* \"#utility.yul\":635:653   */\n  add\n    /* \"#utility.yul\":605:654   */\n  tag_24\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":595:654   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:660   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1364:1713   */\ntag_25:\n    /* \"contracts/YieldAggregator.sol\":458:3510  contract YieldAggregator is Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n  0x00\n  assignImmutable(\"0x6899d1fa68cf48634632762f4cd0ec59d591ccbdd349962c4ae5d93ddad42969\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/YieldAggregator.sol\":458:3510  contract YieldAggregator is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xba3e9c12\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfbfa77cf\n      eq\n      tag_12\n      jumpi\n      revert(0x00, 0x00)\n    tag_13:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3fc8cef3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x719ce73e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x722713f7\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/YieldAggregator.sol\":2837:3286  function withdraw(uint256 amount) external onlyPrizePoolOrVault returns (bool) {... */\n    tag_3:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n        /* \"#utility.yul\":364:378   */\n      swap1\n      iszero\n        /* \"#utility.yul\":357:379   */\n      iszero\n        /* \"#utility.yul\":339:380   */\n      dup2\n      mstore\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":312:330   */\n      add\n        /* \"contracts/YieldAggregator.sol\":2837:3286  function withdraw(uint256 amount) external onlyPrizePoolOrVault returns (bool) {... */\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/YieldAggregator.sol\":569:597  IERC20 public immutable weth */\n    tag_4:\n      tag_20\n      immutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n      dup2\n      jump\n    tag_20:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":569:601   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":551:602   */\n      dup2\n      mstore\n        /* \"#utility.yul\":539:541   */\n      0x20\n        /* \"#utility.yul\":524:542   */\n      add\n        /* \"contracts/YieldAggregator.sol\":569:597  IERC20 public immutable weth */\n      tag_18\n        /* \"#utility.yul\":391:608   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/YieldAggregator.sol\":628:655  IPrizePool public prizePool */\n    tag_6:\n      sload(0x02)\n      tag_20\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/YieldAggregator.sol\":3401:3508  function balanceOf() external view returns (uint256) {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":986:1011   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":974:976   */\n      0x20\n        /* \"#utility.yul\":959:977   */\n      add\n        /* \"contracts/YieldAggregator.sol\":3401:3508  function balanceOf() external view returns (uint256) {... */\n      tag_18\n        /* \"#utility.yul\":840:1017   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_20)\n        /* \"contracts/YieldAggregator.sol\":2059:2602  function deposit(uint256 amount) external onlyVault returns (bool) {... */\n    tag_9:\n      tag_14\n      tag_39\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts/YieldAggregator.sol\":533:562  IComet public immutable comet */\n    tag_10:\n      tag_20\n      immutable(\"0x6899d1fa68cf48634632762f4cd0ec59d591ccbdd349962c4ae5d93ddad42969\")\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_24\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"contracts/YieldAggregator.sol\":603:622  IVault public vault */\n    tag_12:\n      sload(0x01)\n      tag_20\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/YieldAggregator.sol\":2837:3286  function withdraw(uint256 amount) external onlyPrizePoolOrVault returns (bool) {... */\n    tag_17:\n        /* \"contracts/YieldAggregator.sol\":1552:1561  prizePool */\n      sload(0x02)\n        /* \"contracts/YieldAggregator.sol\":2910:2914  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YieldAggregator.sol\":1552:1561  prizePool */\n      and\n        /* \"contracts/YieldAggregator.sol\":1530:1540  msg.sender */\n      caller\n        /* \"contracts/YieldAggregator.sol\":1530:1562  msg.sender == address(prizePool) */\n      eq\n      dup1\n        /* \"contracts/YieldAggregator.sol\":1530:1594  msg.sender == address(prizePool) || msg.sender == address(vault) */\n      tag_55\n      jumpi\n      pop\n        /* \"contracts/YieldAggregator.sol\":1588:1593  vault */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/YieldAggregator.sol\":1566:1576  msg.sender */\n      caller\n        /* \"contracts/YieldAggregator.sol\":1566:1594  msg.sender == address(vault) */\n      eq\n        /* \"contracts/YieldAggregator.sol\":1530:1594  msg.sender == address(prizePool) || msg.sender == address(vault) */\n    tag_55:\n        /* \"contracts/YieldAggregator.sol\":1509:1665  require(... */\n      tag_56\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2169:2171   */\n      0x20\n        /* \"contracts/YieldAggregator.sol\":1509:1665  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2151:2172   */\n      mstore\n        /* \"#utility.yul\":2208:2210   */\n      0x2d\n        /* \"#utility.yul\":2188:2206   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2181:2211   */\n      mstore\n        /* \"#utility.yul\":2247:2281   */\n      0x43616c6c6572206973206e6f7420746865205072697a65506f6f6c206f722056\n        /* \"#utility.yul\":2227:2245   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2220:2282   */\n      mstore\n      shl(0x9a, 0x185d5b1d0818dbdb9d1c9858dd)\n        /* \"#utility.yul\":2298:2316   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2291:2334   */\n      mstore\n        /* \"#utility.yul\":2351:2370   */\n      0x84\n      add\n        /* \"contracts/YieldAggregator.sol\":1509:1665  require(... */\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"contracts/YieldAggregator.sol\":2943:2944  0 */\n      0x00\n        /* \"contracts/YieldAggregator.sol\":2934:2940  amount */\n      dup3\n        /* \"contracts/YieldAggregator.sol\":2934:2944  amount > 0 */\n      gt\n        /* \"contracts/YieldAggregator.sol\":2926:2981  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2583:2585   */\n      0x20\n        /* \"contracts/YieldAggregator.sol\":2926:2981  require(amount > 0, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2565:2586   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2602:2620   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2595:2625   */\n      mstore\n        /* \"#utility.yul\":2661:2695   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":2641:2659   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2634:2696   */\n      mstore\n        /* \"#utility.yul\":2713:2731   */\n      0x64\n      add\n        /* \"contracts/YieldAggregator.sol\":2926:2981  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_57\n        /* \"#utility.yul\":2381:2737   */\n      jump\n        /* \"contracts/YieldAggregator.sol\":2926:2981  require(amount > 0, \"Amount must be greater than zero\") */\n    tag_60:\n        /* \"contracts/YieldAggregator.sol\":3043:3080  comet.withdraw(address(weth), amount) */\n      mload(0x40)\n      shl(0xe0, 0xf3fef3a3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YieldAggregator.sol\":3066:3070  weth */\n      immutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n        /* \"#utility.yul\":2934:2966   */\n      dup2\n      and\n        /* \"contracts/YieldAggregator.sol\":3043:3080  comet.withdraw(address(weth), amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2916:2967   */\n      mstore\n        /* \"#utility.yul\":2983:3001   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2976:3010   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/YieldAggregator.sol\":3043:3048  comet */\n      immutable(\"0x6899d1fa68cf48634632762f4cd0ec59d591ccbdd349962c4ae5d93ddad42969\")\n        /* \"contracts/YieldAggregator.sol\":3043:3057  comet.withdraw */\n      and\n      swap1\n      0xf3fef3a3\n      swap1\n        /* \"#utility.yul\":2889:2907   */\n      0x44\n      add\n        /* \"contracts/YieldAggregator.sol\":3043:3080  comet.withdraw(address(weth), amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      revert(0x00, 0x00)\n    tag_65:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n        /* \"contracts/YieldAggregator.sol\":3126:3163  weth.safeTransfer(msg.sender, amount) */\n      tag_68\n      swap3\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YieldAggregator.sol\":3126:3130  weth */\n      immutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n        /* \"contracts/YieldAggregator.sol\":3126:3143  weth.safeTransfer */\n      and\n      swap1\n      pop\n        /* \"contracts/YieldAggregator.sol\":3144:3154  msg.sender */\n      caller\n        /* \"contracts/YieldAggregator.sol\":3156:3162  amount */\n      dup5\n        /* \"contracts/YieldAggregator.sol\":3126:3143  weth.safeTransfer */\n      tag_69\n        /* \"contracts/YieldAggregator.sol\":3126:3163  weth.safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_68:\n        /* \"contracts/YieldAggregator.sol\":3212:3258  Withdrawn(msg.sender, amount, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3195:3220   */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/YieldAggregator.sol\":3242:3257  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":3251:3253   */\n      0x20\n        /* \"#utility.yul\":3236:3254   */\n      dup3\n      add\n        /* \"#utility.yul\":3229:3263   */\n      mstore\n        /* \"contracts/YieldAggregator.sol\":3222:3232  msg.sender */\n      caller\n      swap2\n        /* \"contracts/YieldAggregator.sol\":3212:3258  Withdrawn(msg.sender, amount, block.timestamp) */\n      0x92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6\n      swap2\n        /* \"#utility.yul\":3168:3186   */\n      add\n        /* \"contracts/YieldAggregator.sol\":3212:3258  Withdrawn(msg.sender, amount, block.timestamp) */\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n        /* \"contracts/YieldAggregator.sol\":3275:3279  true */\n      0x01\n        /* \"contracts/YieldAggregator.sol\":2837:3286  function withdraw(uint256 amount) external onlyPrizePoolOrVault returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3476:3478   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3458:3479   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3495:3513   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3488:3518   */\n      mstore\n        /* \"#utility.yul\":3554:3588   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3534:3552   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3527:3589   */\n      mstore\n        /* \"#utility.yul\":3606:3624   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_57\n        /* \"#utility.yul\":3274:3630   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/YieldAggregator.sol\":3401:3508  function balanceOf() external view returns (uint256) {... */\n    tag_31:\n        /* \"contracts/YieldAggregator.sol\":3471:3501  comet.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/YieldAggregator.sol\":3495:3499  this */\n      address\n        /* \"contracts/YieldAggregator.sol\":3471:3501  comet.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":551:602   */\n      mstore\n        /* \"contracts/YieldAggregator.sol\":3445:3452  uint256 */\n      0x00\n      swap1\n        /* \"contracts/YieldAggregator.sol\":3471:3476  comet */\n      immutable(\"0x6899d1fa68cf48634632762f4cd0ec59d591ccbdd349962c4ae5d93ddad42969\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YieldAggregator.sol\":3471:3486  comet.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":524:542   */\n      0x24\n      add\n        /* \"contracts/YieldAggregator.sol\":3471:3501  comet.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"contracts/YieldAggregator.sol\":3464:3501  return comet.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/YieldAggregator.sol\":3401:3508  function balanceOf() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/YieldAggregator.sol\":2059:2602  function deposit(uint256 amount) external onlyVault returns (bool) {... */\n    tag_40:\n        /* \"contracts/YieldAggregator.sol\":1750:1755  vault */\n      sload(0x01)\n        /* \"contracts/YieldAggregator.sol\":2120:2124  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YieldAggregator.sol\":1750:1755  vault */\n      and\n        /* \"contracts/YieldAggregator.sol\":1728:1738  msg.sender */\n      caller\n        /* \"contracts/YieldAggregator.sol\":1728:1756  msg.sender == address(vault) */\n      eq\n        /* \"contracts/YieldAggregator.sol\":1720:1793  require(msg.sender == address(vault), \"Caller is not the Vault contract\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4026:4028   */\n      0x20\n        /* \"contracts/YieldAggregator.sol\":1720:1793  require(msg.sender == address(vault), \"Caller is not the Vault contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4008:4029   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4045:4063   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4038:4068   */\n      mstore\n        /* \"#utility.yul\":4104:4138   */\n      0x43616c6c6572206973206e6f7420746865205661756c7420636f6e7472616374\n        /* \"#utility.yul\":4084:4102   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4077:4139   */\n      mstore\n        /* \"#utility.yul\":4156:4174   */\n      0x64\n      add\n        /* \"contracts/YieldAggregator.sol\":1720:1793  require(msg.sender == address(vault), \"Caller is not the Vault contract\") */\n      tag_57\n        /* \"#utility.yul\":3824:4180   */\n      jump\n        /* \"contracts/YieldAggregator.sol\":1720:1793  require(msg.sender == address(vault), \"Caller is not the Vault contract\") */\n    tag_90:\n        /* \"contracts/YieldAggregator.sol\":2153:2154  0 */\n      0x00\n        /* \"contracts/YieldAggregator.sol\":2144:2150  amount */\n      dup3\n        /* \"contracts/YieldAggregator.sol\":2144:2154  amount > 0 */\n      gt\n        /* \"contracts/YieldAggregator.sol\":2136:2191  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2583:2585   */\n      0x20\n        /* \"contracts/YieldAggregator.sol\":2136:2191  require(amount > 0, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2565:2586   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2602:2620   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2595:2625   */\n      mstore\n        /* \"#utility.yul\":2661:2695   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":2641:2659   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2634:2696   */\n      mstore\n        /* \"#utility.yul\":2713:2731   */\n      0x64\n      add\n        /* \"contracts/YieldAggregator.sol\":2136:2191  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_57\n        /* \"#utility.yul\":2381:2737   */\n      jump\n        /* \"contracts/YieldAggregator.sol\":2136:2191  require(amount > 0, \"Amount must be greater than zero\") */\n    tag_94:\n        /* \"contracts/YieldAggregator.sol\":2255:2311  weth.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_96\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YieldAggregator.sol\":2255:2259  weth */\n      immutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n        /* \"contracts/YieldAggregator.sol\":2255:2276  weth.safeTransferFrom */\n      and\n        /* \"contracts/YieldAggregator.sol\":2277:2287  msg.sender */\n      caller\n        /* \"contracts/YieldAggregator.sol\":2297:2301  this */\n      address\n        /* \"contracts/YieldAggregator.sol\":2304:2310  amount */\n      dup6\n        /* \"contracts/YieldAggregator.sol\":2255:2276  weth.safeTransferFrom */\n      tag_97\n        /* \"contracts/YieldAggregator.sol\":2255:2311  weth.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/YieldAggregator.sol\":2358:2398  weth.safeApprove(address(comet), amount) */\n      tag_98\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YieldAggregator.sol\":2358:2362  weth */\n      immutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n        /* \"contracts/YieldAggregator.sol\":2358:2374  weth.safeApprove */\n      and\n        /* \"contracts/YieldAggregator.sol\":2383:2388  comet */\n      immutable(\"0x6899d1fa68cf48634632762f4cd0ec59d591ccbdd349962c4ae5d93ddad42969\")\n        /* \"contracts/YieldAggregator.sol\":2391:2397  amount */\n      dup5\n        /* \"contracts/YieldAggregator.sol\":2358:2374  weth.safeApprove */\n      tag_99\n        /* \"contracts/YieldAggregator.sol\":2358:2398  weth.safeApprove(address(comet), amount) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/YieldAggregator.sol\":2447:2482  comet.supply(address(weth), amount) */\n      mload(0x40)\n      shl(0xe3, 0x1e573fb7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/YieldAggregator.sol\":2468:2472  weth */\n      immutable(\"0xc54c5452b104751fde6e79369f1e7835722fc73c62bb7947ed8a0846a81f48b5\")\n        /* \"#utility.yul\":2934:2966   */\n      dup2\n      and\n        /* \"contracts/YieldAggregator.sol\":2447:2482  comet.supply(address(weth), amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2916:2967   */\n      mstore\n        /* \"#utility.yul\":2983:3001   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2976:3010   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/YieldAggregator.sol\":2447:2452  comet */\n      immutable(\"0x6899d1fa68cf48634632762f4cd0ec59d591ccbdd349962c4ae5d93ddad42969\")\n        /* \"contracts/YieldAggregator.sol\":2447:2459  comet.supply */\n      and\n      swap1\n      0xf2b9fdb8\n      swap1\n        /* \"#utility.yul\":2889:2907   */\n      0x44\n      add\n        /* \"contracts/YieldAggregator.sol\":2447:2482  comet.supply(address(weth), amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      revert(0x00, 0x00)\n    tag_101:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n        /* \"contracts/YieldAggregator.sol\":2528:2574  Deposited(msg.sender, amount, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3195:3220   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/YieldAggregator.sol\":2558:2573  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":3251:3253   */\n      0x20\n        /* \"#utility.yul\":3236:3254   */\n      dup3\n      add\n        /* \"#utility.yul\":3229:3263   */\n      mstore\n        /* \"contracts/YieldAggregator.sol\":2538:2548  msg.sender */\n      caller\n      swap4\n      pop\n        /* \"contracts/YieldAggregator.sol\":2528:2574  Deposited(msg.sender, amount, block.timestamp) */\n      0x73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca\n      swap3\n      pop\n        /* \"#utility.yul\":3168:3186   */\n      add\n        /* \"contracts/YieldAggregator.sol\":2528:2574  Deposited(msg.sender, amount, block.timestamp) */\n      tag_70\n        /* \"#utility.yul\":3021:3269   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3476:3478   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3458:3479   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3495:3513   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3488:3518   */\n      mstore\n        /* \"#utility.yul\":3554:3588   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3534:3552   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3527:3589   */\n      mstore\n        /* \"#utility.yul\":3606:3624   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_57\n        /* \"#utility.yul\":3274:3630   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4387:4389   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4369:4390   */\n      mstore\n        /* \"#utility.yul\":4426:4428   */\n      0x26\n        /* \"#utility.yul\":4406:4424   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4399:4429   */\n      mstore\n        /* \"#utility.yul\":4465:4499   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4445:4463   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4438:4500   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4516:4534   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4509:4545   */\n      mstore\n        /* \"#utility.yul\":4562:4581   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_57\n        /* \"#utility.yul\":4185:4587   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2934:2966   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2916:2967   */\n      mstore\n        /* \"#utility.yul\":2983:3001   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2976:3010   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_116\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":833:838  token */\n      dup5\n      swap1\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":863:886  token.transfer.selector */\n      swap1\n        /* \"#utility.yul\":2889:2907   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":840:898  abi.encodeWithSelector(token.transfer.selector, to, value) */\n    tag_117:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:832  _callOptionalReturn */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":813:899  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:906  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4812:4844   */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4794:4845   */\n      mstore\n        /* \"#utility.yul\":4881:4913   */\n      dup4\n      and\n        /* \"#utility.yul\":4861:4879   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4854:4914   */\n      mstore\n        /* \"#utility.yul\":4930:4948   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":4923:4957   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_122\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1070:1075  token */\n      dup6\n      swap1\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1100:1127  token.transferFrom.selector */\n      swap1\n        /* \"#utility.yul\":4767:4785   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      tag_117\n        /* \"#utility.yul\":4592:4963   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1413:2016  function safeApprove(... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1768:1778  value == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1767:1829  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      tag_126\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1784:1823  token.allowance(address(this), spender) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1808:1812  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1784:1823  token.allowance(address(this), spender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5142:5193   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5229:5261   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":5209:5227   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5202:5262   */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1784:1799  token.allowance */\n      dup5\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":5115:5133   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1784:1823  token.allowance(address(this), spender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1784:1828  token.allowance(address(this), spender) == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1767:1829  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1746:1909  require(... */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5475:5477   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1746:1909  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5457:5478   */\n      mstore\n        /* \"#utility.yul\":5514:5516   */\n      0x36\n        /* \"#utility.yul\":5494:5512   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5487:5517   */\n      mstore\n        /* \"#utility.yul\":5553:5587   */\n      0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n        /* \"#utility.yul\":5533:5551   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5526:5588   */\n      mstore\n      shl(0x50, 0x20746f206e6f6e2d7a65726f20616c6c6f77616e6365)\n        /* \"#utility.yul\":5604:5622   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5597:5649   */\n      mstore\n        /* \"#utility.yul\":5666:5685   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1746:1909  require(... */\n      tag_57\n        /* \"#utility.yul\":5273:5691   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1746:1909  require(... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1946:2008  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2934:2966   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1946:2008  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2916:2967   */\n      mstore\n        /* \"#utility.yul\":2983:3001   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":2976:3010   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1919:2009  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_116\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1939:1944  token */\n      dup5\n      swap1\n      shl(0xe0, 0x095ea7b3)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1969:1991  token.approve.selector */\n      swap1\n        /* \"#utility.yul\":2889:2907   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1946:2008  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      tag_117\n        /* \"#utility.yul\":2742:3016   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      and\n      tag_139\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6180:6182   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6162:6183   */\n      mstore\n        /* \"#utility.yul\":6219:6221   */\n      0x2a\n        /* \"#utility.yul\":6199:6217   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6192:6222   */\n      mstore\n        /* \"#utility.yul\":6258:6292   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":6238:6256   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6231:6293   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":6309:6327   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6302:6342   */\n      mstore\n        /* \"#utility.yul\":6359:6378   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_57\n        /* \"#utility.yul\":5978:6384   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_147\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_148\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_146:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6591:6593   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6573:6594   */\n      mstore\n        /* \"#utility.yul\":6630:6632   */\n      0x26\n        /* \"#utility.yul\":6610:6628   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6603:6633   */\n      mstore\n        /* \"#utility.yul\":6669:6703   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":6649:6667   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6642:6704   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":6720:6738   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6713:6749   */\n      mstore\n        /* \"#utility.yul\":6766:6785   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_57\n        /* \"#utility.yul\":6389:6791   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6998:7000   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6980:7001   */\n      mstore\n        /* \"#utility.yul\":7037:7039   */\n      0x1d\n        /* \"#utility.yul\":7017:7035   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7010:7040   */\n      mstore\n        /* \"#utility.yul\":7076:7107   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":7056:7074   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7049:7108   */\n      mstore\n        /* \"#utility.yul\":7125:7143   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_57\n        /* \"#utility.yul\":6796:7149   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_162\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_161)\n    tag_162:\n      0x60\n      swap2\n      pop\n    tag_161:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_163\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_164\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_167\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      jump(tag_146)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_16:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_175:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1453:1739   */\n    tag_48:\n        /* \"#utility.yul\":1512:1518   */\n      0x00\n        /* \"#utility.yul\":1565:1567   */\n      0x20\n        /* \"#utility.yul\":1553:1562   */\n      dup3\n        /* \"#utility.yul\":1544:1551   */\n      dup5\n        /* \"#utility.yul\":1540:1563   */\n      sub\n        /* \"#utility.yul\":1536:1568   */\n      slt\n        /* \"#utility.yul\":1533:1585   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1578:1579   */\n      0x00\n        /* \"#utility.yul\":1571:1583   */\n      revert\n        /* \"#utility.yul\":1533:1585   */\n    tag_183:\n        /* \"#utility.yul\":1607:1630   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1659:1690   */\n      dup2\n      and\n        /* \"#utility.yul\":1649:1691   */\n      dup2\n      eq\n        /* \"#utility.yul\":1639:1709   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":1705:1706   */\n      0x00\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1695:1707   */\n      revert\n        /* \"#utility.yul\":3635:3819   */\n    tag_87:\n        /* \"#utility.yul\":3705:3711   */\n      0x00\n        /* \"#utility.yul\":3758:3760   */\n      0x20\n        /* \"#utility.yul\":3746:3755   */\n      dup3\n        /* \"#utility.yul\":3737:3744   */\n      dup5\n        /* \"#utility.yul\":3733:3756   */\n      sub\n        /* \"#utility.yul\":3729:3761   */\n      slt\n        /* \"#utility.yul\":3726:3778   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":3774:3775   */\n      0x00\n        /* \"#utility.yul\":3771:3772   */\n      0x00\n        /* \"#utility.yul\":3764:3776   */\n      revert\n        /* \"#utility.yul\":3726:3778   */\n    tag_192:\n      pop\n        /* \"#utility.yul\":3797:3813   */\n      mload\n      swap2\n        /* \"#utility.yul\":3635:3819   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5696:5973   */\n    tag_142:\n        /* \"#utility.yul\":5763:5769   */\n      0x00\n        /* \"#utility.yul\":5816:5818   */\n      0x20\n        /* \"#utility.yul\":5804:5813   */\n      dup3\n        /* \"#utility.yul\":5795:5802   */\n      dup5\n        /* \"#utility.yul\":5791:5814   */\n      sub\n        /* \"#utility.yul\":5787:5819   */\n      slt\n        /* \"#utility.yul\":5784:5836   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":5832:5833   */\n      0x00\n        /* \"#utility.yul\":5829:5830   */\n      0x00\n        /* \"#utility.yul\":5822:5834   */\n      revert\n        /* \"#utility.yul\":5784:5836   */\n    tag_199:\n        /* \"#utility.yul\":5864:5873   */\n      dup2\n        /* \"#utility.yul\":5858:5874   */\n      mload\n        /* \"#utility.yul\":5917:5922   */\n      dup1\n        /* \"#utility.yul\":5910:5923   */\n      iszero\n        /* \"#utility.yul\":5903:5924   */\n      iszero\n        /* \"#utility.yul\":5896:5901   */\n      dup2\n        /* \"#utility.yul\":5893:5925   */\n      eq\n        /* \"#utility.yul\":5883:5943   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":5939:5940   */\n      0x00\n        /* \"#utility.yul\":5936:5937   */\n      0x00\n        /* \"#utility.yul\":5929:5941   */\n      revert\n        /* \"#utility.yul\":7154:7455   */\n    tag_159:\n        /* \"#utility.yul\":7283:7286   */\n      0x00\n        /* \"#utility.yul\":7321:7327   */\n      dup3\n        /* \"#utility.yul\":7315:7328   */\n      mload\n        /* \"#utility.yul\":7367:7373   */\n      dup1\n        /* \"#utility.yul\":7360:7364   */\n      0x20\n        /* \"#utility.yul\":7352:7358   */\n      dup6\n        /* \"#utility.yul\":7348:7365   */\n      add\n        /* \"#utility.yul\":7343:7346   */\n      dup5\n        /* \"#utility.yul\":7337:7374   */\n      mcopy\n        /* \"#utility.yul\":7429:7430   */\n      0x00\n        /* \"#utility.yul\":7393:7409   */\n      swap3\n      add\n        /* \"#utility.yul\":7418:7431   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":7393:7409   */\n      swap2\n        /* \"#utility.yul\":7154:7455   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7460:7878   */\n    tag_172:\n        /* \"#utility.yul\":7609:7611   */\n      0x20\n        /* \"#utility.yul\":7598:7607   */\n      dup2\n        /* \"#utility.yul\":7591:7612   */\n      mstore\n        /* \"#utility.yul\":7572:7576   */\n      0x00\n        /* \"#utility.yul\":7641:7647   */\n      dup3\n        /* \"#utility.yul\":7635:7648   */\n      mload\n        /* \"#utility.yul\":7684:7690   */\n      dup1\n        /* \"#utility.yul\":7679:7681   */\n      0x20\n        /* \"#utility.yul\":7668:7677   */\n      dup5\n        /* \"#utility.yul\":7664:7682   */\n      add\n        /* \"#utility.yul\":7657:7691   */\n      mstore\n        /* \"#utility.yul\":7743:7749   */\n      dup1\n        /* \"#utility.yul\":7738:7740   */\n      0x20\n        /* \"#utility.yul\":7730:7736   */\n      dup6\n        /* \"#utility.yul\":7726:7741   */\n      add\n        /* \"#utility.yul\":7721:7723   */\n      0x40\n        /* \"#utility.yul\":7710:7719   */\n      dup6\n        /* \"#utility.yul\":7706:7724   */\n      add\n        /* \"#utility.yul\":7700:7750   */\n      mcopy\n        /* \"#utility.yul\":7799:7800   */\n      0x00\n        /* \"#utility.yul\":7794:7796   */\n      0x40\n        /* \"#utility.yul\":7785:7791   */\n      dup3\n        /* \"#utility.yul\":7774:7783   */\n      dup6\n        /* \"#utility.yul\":7770:7792   */\n      add\n        /* \"#utility.yul\":7766:7797   */\n      add\n        /* \"#utility.yul\":7759:7801   */\n      mstore\n        /* \"#utility.yul\":7869:7871   */\n      0x40\n        /* \"#utility.yul\":7862:7864   */\n      0x1f\n        /* \"#utility.yul\":7858:7865   */\n      not\n        /* \"#utility.yul\":7853:7855   */\n      0x1f\n        /* \"#utility.yul\":7845:7851   */\n      dup4\n        /* \"#utility.yul\":7841:7856   */\n      add\n        /* \"#utility.yul\":7837:7866   */\n      and\n        /* \"#utility.yul\":7826:7835   */\n      dup5\n        /* \"#utility.yul\":7822:7867   */\n      add\n        /* \"#utility.yul\":7818:7872   */\n      add\n        /* \"#utility.yul\":7810:7872   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7460:7878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220734905556dc60f0ec2eef996fa6c99c0c6c1d272fc8deaf82632cba51dab9ecd64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_832": {
									"entryPoint": null,
									"id": 832,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_713": {
									"entryPoint": null,
									"id": 713,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 381,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_stringliteral_0ee4a6a82d9278f95be513daf11d69bad25e4ed692a006dbaab59533918f05b7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_684835832018501d879b02b23ad999bd10db49254839d17ce4d507d3fcb380fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0f7af5ec39e4ba0915c75caea49a4fa955be0c55f1159b344ecc614aa809565__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1715:9",
										"nodeType": "YulBlock",
										"src": "0:1715:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:9",
													"nodeType": "YulBlock",
													"src": "74:117:9",
													"statements": [
														{
															"nativeSrc": "84:22:9",
															"nodeType": "YulAssignment",
															"src": "84:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:9"
																},
																"nativeSrc": "93:13:9",
																"nodeType": "YulFunctionCall",
																"src": "93:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:9",
																"nodeType": "YulBlock",
																"src": "169:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:9",
																					"nodeType": "YulLiteral",
																					"src": "178:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:9",
																					"nodeType": "YulLiteral",
																					"src": "181:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:9"
																			},
																			"nativeSrc": "171:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:9"
																		},
																		"nativeSrc": "171:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:9",
																										"nodeType": "YulLiteral",
																										"src": "154:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:9",
																										"nodeType": "YulLiteral",
																										"src": "159:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:9"
																								},
																								"nativeSrc": "150:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:9",
																								"nodeType": "YulLiteral",
																								"src": "163:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:9"
																						},
																						"nativeSrc": "146:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:9"
																				},
																				"nativeSrc": "135:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:9"
																		},
																		"nativeSrc": "125:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:9"
																},
																"nativeSrc": "118:50:9",
																"nodeType": "YulFunctionCall",
																"src": "118:50:9"
															},
															"nativeSrc": "115:70:9",
															"nodeType": "YulIf",
															"src": "115:70:9"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:9",
														"nodeType": "YulTypedName",
														"src": "53:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:9",
														"nodeType": "YulTypedName",
														"src": "64:5:9",
														"type": ""
													}
												],
												"src": "14:177:9"
											},
											{
												"body": {
													"nativeSrc": "328:332:9",
													"nodeType": "YulBlock",
													"src": "328:332:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "375:16:9",
																"nodeType": "YulBlock",
																"src": "375:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "384:1:9",
																					"nodeType": "YulLiteral",
																					"src": "384:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "387:1:9",
																					"nodeType": "YulLiteral",
																					"src": "387:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "377:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:9"
																			},
																			"nativeSrc": "377:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:9"
																		},
																		"nativeSrc": "377:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "349:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "358:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "345:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:9"
																		},
																		"nativeSrc": "345:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:3:9",
																		"nodeType": "YulLiteral",
																		"src": "370:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "341:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:9"
																},
																"nativeSrc": "341:33:9",
																"nodeType": "YulFunctionCall",
																"src": "341:33:9"
															},
															"nativeSrc": "338:53:9",
															"nodeType": "YulIf",
															"src": "338:53:9"
														},
														{
															"nativeSrc": "400:50:9",
															"nodeType": "YulAssignment",
															"src": "400:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "440:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "410:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:9"
																},
																"nativeSrc": "410:40:9",
																"nodeType": "YulFunctionCall",
																"src": "410:40:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "400:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:9"
																}
															]
														},
														{
															"nativeSrc": "459:59:9",
															"nodeType": "YulAssignment",
															"src": "459:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "503:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "503:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "514:2:9",
																				"nodeType": "YulLiteral",
																				"src": "514:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "499:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:9"
																		},
																		"nativeSrc": "499:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "499:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "469:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "469:29:9"
																},
																"nativeSrc": "469:49:9",
																"nodeType": "YulFunctionCall",
																"src": "469:49:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "459:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:9"
																}
															]
														},
														{
															"nativeSrc": "527:59:9",
															"nodeType": "YulAssignment",
															"src": "527:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "571:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "571:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "582:2:9",
																				"nodeType": "YulLiteral",
																				"src": "582:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "567:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:9"
																		},
																		"nativeSrc": "567:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "567:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "537:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "537:29:9"
																},
																"nativeSrc": "537:49:9",
																"nodeType": "YulFunctionCall",
																"src": "537:49:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "527:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:9"
																}
															]
														},
														{
															"nativeSrc": "595:59:9",
															"nodeType": "YulAssignment",
															"src": "595:59:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "639:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "639:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "650:2:9",
																				"nodeType": "YulLiteral",
																				"src": "650:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "635:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "635:3:9"
																		},
																		"nativeSrc": "635:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "635:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "605:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "605:29:9"
																},
																"nativeSrc": "605:49:9",
																"nodeType": "YulFunctionCall",
																"src": "605:49:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "595:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "595:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "196:464:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "270:9:9",
														"nodeType": "YulTypedName",
														"src": "270:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "281:7:9",
														"nodeType": "YulTypedName",
														"src": "281:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "293:6:9",
														"nodeType": "YulTypedName",
														"src": "293:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "301:6:9",
														"nodeType": "YulTypedName",
														"src": "301:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "309:6:9",
														"nodeType": "YulTypedName",
														"src": "309:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "317:6:9",
														"nodeType": "YulTypedName",
														"src": "317:6:9",
														"type": ""
													}
												],
												"src": "196:464:9"
											},
											{
												"body": {
													"nativeSrc": "839:170:9",
													"nodeType": "YulBlock",
													"src": "839:170:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "856:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "856:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "867:2:9",
																		"nodeType": "YulLiteral",
																		"src": "867:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "849:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "849:6:9"
																},
																"nativeSrc": "849:21:9",
																"nodeType": "YulFunctionCall",
																"src": "849:21:9"
															},
															"nativeSrc": "849:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "849:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "890:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "890:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "901:2:9",
																				"nodeType": "YulLiteral",
																				"src": "901:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "886:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "886:3:9"
																		},
																		"nativeSrc": "886:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "886:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:2:9",
																		"nodeType": "YulLiteral",
																		"src": "906:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "879:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "879:6:9"
																},
																"nativeSrc": "879:30:9",
																"nodeType": "YulFunctionCall",
																"src": "879:30:9"
															},
															"nativeSrc": "879:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "879:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "929:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "929:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "940:2:9",
																				"nodeType": "YulLiteral",
																				"src": "940:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "925:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "925:3:9"
																		},
																		"nativeSrc": "925:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "925:18:9"
																	},
																	{
																		"hexValue": "496e76616c696420574554482061646472657373",
																		"kind": "string",
																		"nativeSrc": "945:22:9",
																		"nodeType": "YulLiteral",
																		"src": "945:22:9",
																		"type": "",
																		"value": "Invalid WETH address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "918:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "918:6:9"
																},
																"nativeSrc": "918:50:9",
																"nodeType": "YulFunctionCall",
																"src": "918:50:9"
															},
															"nativeSrc": "918:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "918:50:9"
														},
														{
															"nativeSrc": "977:26:9",
															"nodeType": "YulAssignment",
															"src": "977:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "989:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "989:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1000:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1000:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "985:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "985:3:9"
																},
																"nativeSrc": "985:18:9",
																"nodeType": "YulFunctionCall",
																"src": "985:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "977:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "977:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ee4a6a82d9278f95be513daf11d69bad25e4ed692a006dbaab59533918f05b7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "665:344:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "816:9:9",
														"nodeType": "YulTypedName",
														"src": "816:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "830:4:9",
														"nodeType": "YulTypedName",
														"src": "830:4:9",
														"type": ""
													}
												],
												"src": "665:344:9"
											},
											{
												"body": {
													"nativeSrc": "1188:171:9",
													"nodeType": "YulBlock",
													"src": "1188:171:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1205:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1205:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1216:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1216:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1198:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1198:6:9"
																},
																"nativeSrc": "1198:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1198:21:9"
															},
															"nativeSrc": "1198:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1198:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1239:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1239:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1250:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1250:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1235:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1235:3:9"
																		},
																		"nativeSrc": "1235:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1235:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1255:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1255:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1228:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1228:6:9"
																},
																"nativeSrc": "1228:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1228:30:9"
															},
															"nativeSrc": "1228:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "1228:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1278:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1278:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1289:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1289:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1274:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1274:3:9"
																		},
																		"nativeSrc": "1274:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1274:18:9"
																	},
																	{
																		"hexValue": "496e76616c6964205661756c742061646472657373",
																		"kind": "string",
																		"nativeSrc": "1294:23:9",
																		"nodeType": "YulLiteral",
																		"src": "1294:23:9",
																		"type": "",
																		"value": "Invalid Vault address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1267:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1267:6:9"
																},
																"nativeSrc": "1267:51:9",
																"nodeType": "YulFunctionCall",
																"src": "1267:51:9"
															},
															"nativeSrc": "1267:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "1267:51:9"
														},
														{
															"nativeSrc": "1327:26:9",
															"nodeType": "YulAssignment",
															"src": "1327:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1339:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1339:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1350:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1350:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1335:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1335:3:9"
																},
																"nativeSrc": "1335:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1335:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1327:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1327:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0f7af5ec39e4ba0915c75caea49a4fa955be0c55f1159b344ecc614aa809565__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1014:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1165:9:9",
														"nodeType": "YulTypedName",
														"src": "1165:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1179:4:9",
														"nodeType": "YulTypedName",
														"src": "1179:4:9",
														"type": ""
													}
												],
												"src": "1014:345:9"
											},
											{
												"body": {
													"nativeSrc": "1538:175:9",
													"nodeType": "YulBlock",
													"src": "1538:175:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1555:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1555:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1566:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1566:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1548:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1548:6:9"
																},
																"nativeSrc": "1548:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1548:21:9"
															},
															"nativeSrc": "1548:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1548:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1589:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1589:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1600:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1600:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1585:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1585:3:9"
																		},
																		"nativeSrc": "1585:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1585:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1605:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1578:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1578:6:9"
																},
																"nativeSrc": "1578:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1578:30:9"
															},
															"nativeSrc": "1578:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "1578:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1628:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1639:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1639:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1624:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1624:3:9"
																		},
																		"nativeSrc": "1624:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1624:18:9"
																	},
																	{
																		"hexValue": "496e76616c6964205072697a65506f6f6c2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1644:27:9",
																		"nodeType": "YulLiteral",
																		"src": "1644:27:9",
																		"type": "",
																		"value": "Invalid PrizePool address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1617:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:9"
																},
																"nativeSrc": "1617:55:9",
																"nodeType": "YulFunctionCall",
																"src": "1617:55:9"
															},
															"nativeSrc": "1617:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "1617:55:9"
														},
														{
															"nativeSrc": "1681:26:9",
															"nodeType": "YulAssignment",
															"src": "1681:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1693:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1693:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1704:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1704:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1689:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1689:3:9"
																},
																"nativeSrc": "1689:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1689:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1681:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1681:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_684835832018501d879b02b23ad999bd10db49254839d17ce4d507d3fcb380fb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1364:349:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1515:9:9",
														"nodeType": "YulTypedName",
														"src": "1515:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1529:4:9",
														"nodeType": "YulTypedName",
														"src": "1529:4:9",
														"type": ""
													}
												],
												"src": "1364:349:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_0ee4a6a82d9278f95be513daf11d69bad25e4ed692a006dbaab59533918f05b7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid WETH address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e0f7af5ec39e4ba0915c75caea49a4fa955be0c55f1159b344ecc614aa809565__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid Vault address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_684835832018501d879b02b23ad999bd10db49254839d17ce4d507d3fcb380fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid PrizePool address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50604051610f3f380380610f3f83398101604081905261002e916101e7565b6100373361017d565b6001600160a01b0384166100925760405162461bcd60e51b815260206004820152601460248201527f496e76616c69642057455448206164647265737300000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0383166100e85760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964205661756c74206164647265737300000000000000000000006044820152606401610089565b6001600160a01b03821661013e5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964205072697a65506f6f6c2061646472657373000000000000006044820152606401610089565b6001600160a01b0393841660a052600180549385166001600160a01b031994851617905560028054928516929093169190911790915516608052610238565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146101e2575f5ffd5b919050565b5f5f5f5f608085870312156101fa575f5ffd5b610203856101cc565b9350610211602086016101cc565b925061021f604086016101cc565b915061022d606086016101cc565b905092959194509250565b60805160a051610ca86102975f395f818160cc0152818161029b0152818161032e015281816105430152818161057801526105d601525f8181610161015281816102ca015281816104150152818161059a01526106050152610ca85ff3fe608060405234801561000f575f5ffd5b506004361061009b575f3560e01c80638da5cb5b116100635780638da5cb5b14610139578063b6b55f2514610149578063ba3e9c121461015c578063f2fde38b14610183578063fbfa77cf14610196575f5ffd5b80632e1a7d4d1461009f5780633fc8cef3146100c7578063715018a614610106578063719ce73e14610110578063722713f714610123575b5f5ffd5b6100b26100ad366004610bb4565b6101a9565b60405190151581526020015b60405180910390f35b6100ee7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100be565b61010e61039a565b005b6002546100ee906001600160a01b031681565b61012b6103fe565b6040519081526020016100be565b5f546001600160a01b03166100ee565b6100b2610157366004610bb4565b61048b565b6100ee7f000000000000000000000000000000000000000000000000000000000000000081565b61010e610191366004610bcb565b610693565b6001546100ee906001600160a01b031681565b6002545f906001600160a01b03163314806101ce57506001546001600160a01b031633145b6102355760405162461bcd60e51b815260206004820152602d60248201527f43616c6c6572206973206e6f7420746865205072697a65506f6f6c206f72205660448201526c185d5b1d0818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b5f82116102845760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161022c565b60405163f3fef3a360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063f3fef3a3906044015f604051808303815f87803b15801561030b575f5ffd5b505af115801561031d573d5f5f3e3d5ffd5b506103579250506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169050338461075d565b6040805183815242602082015233917f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc691015b60405180910390a2506001919050565b5f546001600160a01b031633146103f35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022c565b6103fc5f6107c5565b565b6040516370a0823160e01b81523060048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610462573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104869190610bf1565b905090565b6001545f906001600160a01b031633146104e75760405162461bcd60e51b815260206004820181905260248201527f43616c6c6572206973206e6f7420746865205661756c7420636f6e7472616374604482015260640161022c565b5f82116105365760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161022c565b61056b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610814565b6105bf6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000084610852565b604051631e573fb760e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063f2b9fdb8906044015f604051808303815f87803b158015610646575f5ffd5b505af1158015610658573d5f5f3e3d5ffd5b5050604080518581524260208201523393507f73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca92500161038a565b5f546001600160a01b031633146106ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022c565b6001600160a01b0381166107515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161022c565b61075a816107c5565b50565b6040516001600160a01b0383166024820152604481018290526107c090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610965565b505050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038085166024830152831660448201526064810182905261084c9085906323b872dd60e01b90608401610789565b50505050565b8015806108ca5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156108a4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108c89190610bf1565b155b6109355760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161022c565b6040516001600160a01b0383166024820152604481018290526107c090849063095ea7b360e01b90606401610789565b5f6109b9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a369092919063ffffffff16565b8051909150156107c057808060200190518101906109d79190610c08565b6107c05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161022c565b6060610a4484845f85610a4e565b90505b9392505050565b606082471015610aaf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161022c565b6001600160a01b0385163b610b065760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161022c565b5f5f866001600160a01b03168587604051610b219190610c27565b5f6040518083038185875af1925050503d805f8114610b5b576040519150601f19603f3d011682016040523d82523d5f602084013e610b60565b606091505b5091509150610b70828286610b7b565b979650505050505050565b60608315610b8a575081610a47565b825115610b9a5782518084602001fd5b8160405162461bcd60e51b815260040161022c9190610c3d565b5f60208284031215610bc4575f5ffd5b5035919050565b5f60208284031215610bdb575f5ffd5b81356001600160a01b0381168114610a47575f5ffd5b5f60208284031215610c01575f5ffd5b5051919050565b5f60208284031215610c18575f5ffd5b81518015158114610a47575f5ffd5b5f82518060208501845e5f920191825250919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f8301168401019150509291505056fea2646970667358221220734905556dc60f0ec2eef996fa6c99c0c6c1d272fc8deaf82632cba51dab9ecd64736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF3F CODESIZE SUB DUP1 PUSH2 0xF3F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0x37 CALLER PUSH2 0x17D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420574554482061646472657373000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964205661756C7420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964205072697A65506F6F6C206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0xA0 MSTORE PUSH1 0x1 DUP1 SLOAD SWAP4 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP5 DUP6 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE AND PUSH1 0x80 MSTORE PUSH2 0x238 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1FA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x203 DUP6 PUSH2 0x1CC JUMP JUMPDEST SWAP4 POP PUSH2 0x211 PUSH1 0x20 DUP7 ADD PUSH2 0x1CC JUMP JUMPDEST SWAP3 POP PUSH2 0x21F PUSH1 0x40 DUP7 ADD PUSH2 0x1CC JUMP JUMPDEST SWAP2 POP PUSH2 0x22D PUSH1 0x60 DUP7 ADD PUSH2 0x1CC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xCA8 PUSH2 0x297 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0xCC ADD MSTORE DUP2 DUP2 PUSH2 0x29B ADD MSTORE DUP2 DUP2 PUSH2 0x32E ADD MSTORE DUP2 DUP2 PUSH2 0x543 ADD MSTORE DUP2 DUP2 PUSH2 0x578 ADD MSTORE PUSH2 0x5D6 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x161 ADD MSTORE DUP2 DUP2 PUSH2 0x2CA ADD MSTORE DUP2 DUP2 PUSH2 0x415 ADD MSTORE DUP2 DUP2 PUSH2 0x59A ADD MSTORE PUSH2 0x605 ADD MSTORE PUSH2 0xCA8 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xBA3E9C12 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x196 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x719CE73E EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x123 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0x10E PUSH2 0x39A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xEE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEE JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH2 0xEE PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x10E PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xEE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1CE JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x235 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865205072697A65506F6F6C206F722056 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185D5B1D0818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF3FEF3A3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF3FEF3A3 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x357 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 POP CALLER DUP5 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST PUSH2 0x3FC PUSH0 PUSH2 0x7C5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x462 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x486 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865205661756C7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST PUSH2 0x56B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0x814 JUMP JUMPDEST PUSH2 0x5BF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP5 PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E573FB7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF2B9FDB8 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x646 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP PUSH32 0x73A19DD210F1A7F902193214C0EE91DD35EE5B4D920CBA8D519ECA65A7B488CA SWAP3 POP ADD PUSH2 0x38A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH2 0x75A DUP2 PUSH2 0x7C5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x7C0 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x965 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x84C SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x789 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x8CA JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x7C0 SWAP1 DUP5 SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x789 JUMP JUMPDEST PUSH0 PUSH2 0x9B9 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA36 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x7C0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x9D7 SWAP2 SWAP1 PUSH2 0xC08 JUMP JUMPDEST PUSH2 0x7C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA44 DUP5 DUP5 PUSH0 DUP6 PUSH2 0xA4E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST PUSH0 PUSH0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB21 SWAP2 SWAP1 PUSH2 0xC27 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xB70 DUP3 DUP3 DUP7 PUSH2 0xB7B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xB8A JUMPI POP DUP2 PUSH2 0xA47 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xB9A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA47 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC01 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC18 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA47 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x4905556DC60F0EC2EEF996FA6C99C0C6C1D272FC DUP14 0xEA EXTCALL 0x26 ORIGIN 0xCB 0xA5 SAR 0xAB SWAP15 0xCD PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "458:3052:5:-:0;;;880:423;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;-1:-1:-1;;;;;977:19:5;;969:52;;;;-1:-1:-1;;;969:52:5;;867:2:9;969:52:5;;;849:21:9;906:2;886:18;;;879:30;945:22;925:18;;;918:50;985:18;;969:52:5;;;;;;;;;-1:-1:-1;;;;;1039:20:5;;1031:54;;;;-1:-1:-1;;;1031:54:5;;1216:2:9;1031:54:5;;;1198:21:9;1255:2;1235:18;;;1228:30;1294:23;1274:18;;;1267:51;1335:18;;1031:54:5;1014:345:9;1031:54:5;-1:-1:-1;;;;;1103:24:5;;1095:62;;;;-1:-1:-1;;;1095:62:5;;1566:2:9;1095:62:5;;;1548:21:9;1605:2;1585:18;;;1578:30;1644:27;1624:18;;;1617:55;1689:18;;1095:62:5;1364:349:9;1095:62:5;-1:-1:-1;;;;;1168:20:5;;;;;1198:5;:22;;;;;-1:-1:-1;;;;;;1198:22:5;;;;;;1230:9;:34;;;;;;;;;;;;;;;;1274:22;;;458:3052;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:9:-;93:13;;-1:-1:-1;;;;;135:31:9;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:464::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;527:59;;605:49;650:2;639:9;635:18;605:49;:::i;:::-;595:59;;196:464;;;;;;;:::o;1364:349::-;458:3052:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_405": {
									"entryPoint": 2405,
									"id": 405,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_713": {
									"entryPoint": null,
									"id": 713,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 1989,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOf_992": {
									"entryPoint": 1022,
									"id": 992,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@comet_740": {
									"entryPoint": null,
									"id": 740,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_931": {
									"entryPoint": 1163,
									"id": 931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@functionCallWithValue_565": {
									"entryPoint": 2638,
									"id": 565,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_495": {
									"entryPoint": 2614,
									"id": 495,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_424": {
									"entryPoint": null,
									"id": 424,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@prizePool_749": {
									"entryPoint": null,
									"id": 749,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 922,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_283": {
									"entryPoint": 2130,
									"id": 283,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_239": {
									"entryPoint": 2068,
									"id": 239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_213": {
									"entryPoint": 1885,
									"id": 213,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 1683,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vault_746": {
									"entryPoint": null,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_700": {
									"entryPoint": 2939,
									"id": 700,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@weth_743": {
									"entryPoint": null,
									"id": 743,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_977": {
									"entryPoint": 425,
									"id": 977,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IComet_$1037__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$182__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IPrizePool_$1125__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IVault_$1389__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5200a6cd50ba177a26e933942f313ade4e78d9c2d95fbafb2307c1675897971d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_93e8fb2c8ae53eb4aaeac63b1be674c426bddab336579ae44324a8aa7712a04f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7880:9",
										"nodeType": "YulBlock",
										"src": "0:7880:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:9",
													"nodeType": "YulBlock",
													"src": "84:110:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:9",
																"nodeType": "YulBlock",
																"src": "130:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:9",
																					"nodeType": "YulLiteral",
																					"src": "139:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:9",
																					"nodeType": "YulLiteral",
																					"src": "142:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:9"
																			},
																			"nativeSrc": "132:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:9"
																		},
																		"nativeSrc": "132:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:9"
																		},
																		"nativeSrc": "101:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:9",
																		"nodeType": "YulLiteral",
																		"src": "126:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:9"
																},
																"nativeSrc": "97:32:9",
																"nodeType": "YulFunctionCall",
																"src": "97:32:9"
															},
															"nativeSrc": "94:52:9",
															"nodeType": "YulIf",
															"src": "94:52:9"
														},
														{
															"nativeSrc": "155:33:9",
															"nodeType": "YulAssignment",
															"src": "155:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:9"
																},
																"nativeSrc": "165:23:9",
																"nodeType": "YulFunctionCall",
																"src": "165:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:9",
														"nodeType": "YulTypedName",
														"src": "50:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:9",
														"nodeType": "YulTypedName",
														"src": "61:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:9",
														"nodeType": "YulTypedName",
														"src": "73:6:9",
														"type": ""
													}
												],
												"src": "14:180:9"
											},
											{
												"body": {
													"nativeSrc": "294:92:9",
													"nodeType": "YulBlock",
													"src": "294:92:9",
													"statements": [
														{
															"nativeSrc": "304:26:9",
															"nodeType": "YulAssignment",
															"src": "304:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "327:2:9",
																		"nodeType": "YulLiteral",
																		"src": "327:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "312:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "312:3:9"
																},
																"nativeSrc": "312:18:9",
																"nodeType": "YulFunctionCall",
																"src": "312:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "304:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "304:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "346:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "346:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "371:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "371:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "364:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "364:6:9"
																				},
																				"nativeSrc": "364:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "364:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "357:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "357:6:9"
																		},
																		"nativeSrc": "357:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "357:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "339:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "339:6:9"
																},
																"nativeSrc": "339:41:9",
																"nodeType": "YulFunctionCall",
																"src": "339:41:9"
															},
															"nativeSrc": "339:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "339:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "199:187:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "263:9:9",
														"nodeType": "YulTypedName",
														"src": "263:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "274:6:9",
														"nodeType": "YulTypedName",
														"src": "274:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "285:4:9",
														"nodeType": "YulTypedName",
														"src": "285:4:9",
														"type": ""
													}
												],
												"src": "199:187:9"
											},
											{
												"body": {
													"nativeSrc": "506:102:9",
													"nodeType": "YulBlock",
													"src": "506:102:9",
													"statements": [
														{
															"nativeSrc": "516:26:9",
															"nodeType": "YulAssignment",
															"src": "516:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "528:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "528:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "539:2:9",
																		"nodeType": "YulLiteral",
																		"src": "539:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "524:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "524:3:9"
																},
																"nativeSrc": "524:18:9",
																"nodeType": "YulFunctionCall",
																"src": "524:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "516:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "516:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "558:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "558:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "573:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "573:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "589:3:9",
																								"nodeType": "YulLiteral",
																								"src": "589:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "594:1:9",
																								"nodeType": "YulLiteral",
																								"src": "594:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "585:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "585:3:9"
																						},
																						"nativeSrc": "585:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "585:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "598:1:9",
																						"nodeType": "YulLiteral",
																						"src": "598:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "581:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "581:3:9"
																				},
																				"nativeSrc": "581:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "581:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "569:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "569:3:9"
																		},
																		"nativeSrc": "569:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "569:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "551:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "551:6:9"
																},
																"nativeSrc": "551:51:9",
																"nodeType": "YulFunctionCall",
																"src": "551:51:9"
															},
															"nativeSrc": "551:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "551:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$182__to_t_address__fromStack_reversed",
												"nativeSrc": "391:217:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "475:9:9",
														"nodeType": "YulTypedName",
														"src": "475:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "486:6:9",
														"nodeType": "YulTypedName",
														"src": "486:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "497:4:9",
														"nodeType": "YulTypedName",
														"src": "497:4:9",
														"type": ""
													}
												],
												"src": "391:217:9"
											},
											{
												"body": {
													"nativeSrc": "733:102:9",
													"nodeType": "YulBlock",
													"src": "733:102:9",
													"statements": [
														{
															"nativeSrc": "743:26:9",
															"nodeType": "YulAssignment",
															"src": "743:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "755:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "755:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "766:2:9",
																		"nodeType": "YulLiteral",
																		"src": "766:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "751:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "751:3:9"
																},
																"nativeSrc": "751:18:9",
																"nodeType": "YulFunctionCall",
																"src": "751:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "743:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "743:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "785:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "785:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "800:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "816:3:9",
																								"nodeType": "YulLiteral",
																								"src": "816:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "821:1:9",
																								"nodeType": "YulLiteral",
																								"src": "821:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "812:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "812:3:9"
																						},
																						"nativeSrc": "812:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "812:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "825:1:9",
																						"nodeType": "YulLiteral",
																						"src": "825:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "808:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "808:3:9"
																				},
																				"nativeSrc": "808:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "808:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "796:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "796:3:9"
																		},
																		"nativeSrc": "796:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "796:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "778:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:6:9"
																},
																"nativeSrc": "778:51:9",
																"nodeType": "YulFunctionCall",
																"src": "778:51:9"
															},
															"nativeSrc": "778:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "778:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IPrizePool_$1125__to_t_address__fromStack_reversed",
												"nativeSrc": "613:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "702:9:9",
														"nodeType": "YulTypedName",
														"src": "702:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "713:6:9",
														"nodeType": "YulTypedName",
														"src": "713:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "724:4:9",
														"nodeType": "YulTypedName",
														"src": "724:4:9",
														"type": ""
													}
												],
												"src": "613:222:9"
											},
											{
												"body": {
													"nativeSrc": "941:76:9",
													"nodeType": "YulBlock",
													"src": "941:76:9",
													"statements": [
														{
															"nativeSrc": "951:26:9",
															"nodeType": "YulAssignment",
															"src": "951:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "963:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "963:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "974:2:9",
																		"nodeType": "YulLiteral",
																		"src": "974:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "959:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "959:3:9"
																},
																"nativeSrc": "959:18:9",
																"nodeType": "YulFunctionCall",
																"src": "959:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "951:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "951:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "993:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "993:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1004:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1004:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "986:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "986:6:9"
																},
																"nativeSrc": "986:25:9",
																"nodeType": "YulFunctionCall",
																"src": "986:25:9"
															},
															"nativeSrc": "986:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "986:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "840:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:9",
														"nodeType": "YulTypedName",
														"src": "910:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "921:6:9",
														"nodeType": "YulTypedName",
														"src": "921:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "932:4:9",
														"nodeType": "YulTypedName",
														"src": "932:4:9",
														"type": ""
													}
												],
												"src": "840:177:9"
											},
											{
												"body": {
													"nativeSrc": "1123:102:9",
													"nodeType": "YulBlock",
													"src": "1123:102:9",
													"statements": [
														{
															"nativeSrc": "1133:26:9",
															"nodeType": "YulAssignment",
															"src": "1133:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1145:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1145:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1156:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1156:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1141:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1141:3:9"
																},
																"nativeSrc": "1141:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1141:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1133:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1133:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1175:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1175:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1190:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1190:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1206:3:9",
																								"nodeType": "YulLiteral",
																								"src": "1206:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1211:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1211:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1202:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1202:3:9"
																						},
																						"nativeSrc": "1202:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1202:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1215:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1215:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1198:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1198:3:9"
																				},
																				"nativeSrc": "1198:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1198:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1186:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1186:3:9"
																		},
																		"nativeSrc": "1186:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1186:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1168:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1168:6:9"
																},
																"nativeSrc": "1168:51:9",
																"nodeType": "YulFunctionCall",
																"src": "1168:51:9"
															},
															"nativeSrc": "1168:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "1168:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1022:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1092:9:9",
														"nodeType": "YulTypedName",
														"src": "1092:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1103:6:9",
														"nodeType": "YulTypedName",
														"src": "1103:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1114:4:9",
														"nodeType": "YulTypedName",
														"src": "1114:4:9",
														"type": ""
													}
												],
												"src": "1022:203:9"
											},
											{
												"body": {
													"nativeSrc": "1346:102:9",
													"nodeType": "YulBlock",
													"src": "1346:102:9",
													"statements": [
														{
															"nativeSrc": "1356:26:9",
															"nodeType": "YulAssignment",
															"src": "1356:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1368:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1379:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1364:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:9"
																},
																"nativeSrc": "1364:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1364:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1356:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1398:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1413:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1413:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1429:3:9",
																								"nodeType": "YulLiteral",
																								"src": "1429:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1434:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1434:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1425:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1425:3:9"
																						},
																						"nativeSrc": "1425:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1425:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1438:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1438:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1421:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1421:3:9"
																				},
																				"nativeSrc": "1421:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1421:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1409:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1409:3:9"
																		},
																		"nativeSrc": "1409:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1409:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1391:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:9"
																},
																"nativeSrc": "1391:51:9",
																"nodeType": "YulFunctionCall",
																"src": "1391:51:9"
															},
															"nativeSrc": "1391:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "1391:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IComet_$1037__to_t_address__fromStack_reversed",
												"nativeSrc": "1230:218:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1315:9:9",
														"nodeType": "YulTypedName",
														"src": "1315:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1326:6:9",
														"nodeType": "YulTypedName",
														"src": "1326:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1337:4:9",
														"nodeType": "YulTypedName",
														"src": "1337:4:9",
														"type": ""
													}
												],
												"src": "1230:218:9"
											},
											{
												"body": {
													"nativeSrc": "1523:216:9",
													"nodeType": "YulBlock",
													"src": "1523:216:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1569:16:9",
																"nodeType": "YulBlock",
																"src": "1569:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1578:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1578:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1581:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1581:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1571:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1571:6:9"
																			},
																			"nativeSrc": "1571:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1571:12:9"
																		},
																		"nativeSrc": "1571:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1571:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1544:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1544:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1553:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1553:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1540:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1540:3:9"
																		},
																		"nativeSrc": "1540:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1540:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1565:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1565:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1536:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1536:3:9"
																},
																"nativeSrc": "1536:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1536:32:9"
															},
															"nativeSrc": "1533:52:9",
															"nodeType": "YulIf",
															"src": "1533:52:9"
														},
														{
															"nativeSrc": "1594:36:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1594:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1620:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1620:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1607:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1607:12:9"
																},
																"nativeSrc": "1607:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1607:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1598:5:9",
																	"nodeType": "YulTypedName",
																	"src": "1598:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1693:16:9",
																"nodeType": "YulBlock",
																"src": "1693:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1702:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1702:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1705:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1705:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1695:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1695:6:9"
																			},
																			"nativeSrc": "1695:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1695:12:9"
																		},
																		"nativeSrc": "1695:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1695:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1652:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1652:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1663:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1663:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1678:3:9",
																										"nodeType": "YulLiteral",
																										"src": "1678:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1683:1:9",
																										"nodeType": "YulLiteral",
																										"src": "1683:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1674:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1674:3:9"
																								},
																								"nativeSrc": "1674:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1674:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1687:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1687:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1670:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1670:3:9"
																						},
																						"nativeSrc": "1670:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1670:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1659:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1659:3:9"
																				},
																				"nativeSrc": "1659:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1659:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1649:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1649:2:9"
																		},
																		"nativeSrc": "1649:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1649:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1642:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1642:6:9"
																},
																"nativeSrc": "1642:50:9",
																"nodeType": "YulFunctionCall",
																"src": "1642:50:9"
															},
															"nativeSrc": "1639:70:9",
															"nodeType": "YulIf",
															"src": "1639:70:9"
														},
														{
															"nativeSrc": "1718:15:9",
															"nodeType": "YulAssignment",
															"src": "1718:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "1728:5:9",
																"nodeType": "YulIdentifier",
																"src": "1728:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1718:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1718:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1453:286:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1489:9:9",
														"nodeType": "YulTypedName",
														"src": "1489:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1500:7:9",
														"nodeType": "YulTypedName",
														"src": "1500:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1512:6:9",
														"nodeType": "YulTypedName",
														"src": "1512:6:9",
														"type": ""
													}
												],
												"src": "1453:286:9"
											},
											{
												"body": {
													"nativeSrc": "1860:102:9",
													"nodeType": "YulBlock",
													"src": "1860:102:9",
													"statements": [
														{
															"nativeSrc": "1870:26:9",
															"nodeType": "YulAssignment",
															"src": "1870:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1882:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1882:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1893:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1893:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1878:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1878:3:9"
																},
																"nativeSrc": "1878:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1878:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1870:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1870:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1912:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1912:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1927:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1943:3:9",
																								"nodeType": "YulLiteral",
																								"src": "1943:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1948:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1948:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1939:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1939:3:9"
																						},
																						"nativeSrc": "1939:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1939:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1952:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1952:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1935:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1935:3:9"
																				},
																				"nativeSrc": "1935:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1935:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1923:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1923:3:9"
																		},
																		"nativeSrc": "1923:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1923:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:9"
																},
																"nativeSrc": "1905:51:9",
																"nodeType": "YulFunctionCall",
																"src": "1905:51:9"
															},
															"nativeSrc": "1905:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "1905:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IVault_$1389__to_t_address__fromStack_reversed",
												"nativeSrc": "1744:218:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1829:9:9",
														"nodeType": "YulTypedName",
														"src": "1829:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1840:6:9",
														"nodeType": "YulTypedName",
														"src": "1840:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1851:4:9",
														"nodeType": "YulTypedName",
														"src": "1851:4:9",
														"type": ""
													}
												],
												"src": "1744:218:9"
											},
											{
												"body": {
													"nativeSrc": "2141:235:9",
													"nodeType": "YulBlock",
													"src": "2141:235:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2158:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2158:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2169:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2151:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2151:6:9"
																},
																"nativeSrc": "2151:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2151:21:9"
															},
															"nativeSrc": "2151:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "2151:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2192:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2203:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2188:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:9"
																		},
																		"nativeSrc": "2188:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2188:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2208:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2208:2:9",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2181:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2181:6:9"
																},
																"nativeSrc": "2181:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2181:30:9"
															},
															"nativeSrc": "2181:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "2181:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2231:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2231:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2242:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2242:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2227:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:9"
																		},
																		"nativeSrc": "2227:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2227:18:9"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420746865205072697a65506f6f6c206f722056",
																		"kind": "string",
																		"nativeSrc": "2247:34:9",
																		"nodeType": "YulLiteral",
																		"src": "2247:34:9",
																		"type": "",
																		"value": "Caller is not the PrizePool or V"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2220:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2220:6:9"
																},
																"nativeSrc": "2220:62:9",
																"nodeType": "YulFunctionCall",
																"src": "2220:62:9"
															},
															"nativeSrc": "2220:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "2220:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2302:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2302:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2313:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2313:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2298:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2298:3:9"
																		},
																		"nativeSrc": "2298:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2298:18:9"
																	},
																	{
																		"hexValue": "61756c7420636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "2318:15:9",
																		"nodeType": "YulLiteral",
																		"src": "2318:15:9",
																		"type": "",
																		"value": "ault contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2291:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2291:6:9"
																},
																"nativeSrc": "2291:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2291:43:9"
															},
															"nativeSrc": "2291:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "2291:43:9"
														},
														{
															"nativeSrc": "2343:27:9",
															"nodeType": "YulAssignment",
															"src": "2343:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2355:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2355:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2366:3:9",
																		"nodeType": "YulLiteral",
																		"src": "2366:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2351:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2351:3:9"
																},
																"nativeSrc": "2351:19:9",
																"nodeType": "YulFunctionCall",
																"src": "2351:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2343:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2343:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5200a6cd50ba177a26e933942f313ade4e78d9c2d95fbafb2307c1675897971d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1967:409:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2118:9:9",
														"nodeType": "YulTypedName",
														"src": "2118:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2132:4:9",
														"nodeType": "YulTypedName",
														"src": "2132:4:9",
														"type": ""
													}
												],
												"src": "1967:409:9"
											},
											{
												"body": {
													"nativeSrc": "2555:182:9",
													"nodeType": "YulBlock",
													"src": "2555:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2572:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2572:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2583:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2583:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2565:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2565:6:9"
																},
																"nativeSrc": "2565:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2565:21:9"
															},
															"nativeSrc": "2565:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "2565:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2606:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2606:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2617:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2617:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2602:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2602:3:9"
																		},
																		"nativeSrc": "2602:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2602:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2622:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2622:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2595:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2595:6:9"
																},
																"nativeSrc": "2595:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2595:30:9"
															},
															"nativeSrc": "2595:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "2595:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2645:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2645:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2656:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2656:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2641:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:9"
																		},
																		"nativeSrc": "2641:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2641:18:9"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "2661:34:9",
																		"nodeType": "YulLiteral",
																		"src": "2661:34:9",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2634:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2634:6:9"
																},
																"nativeSrc": "2634:62:9",
																"nodeType": "YulFunctionCall",
																"src": "2634:62:9"
															},
															"nativeSrc": "2634:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "2634:62:9"
														},
														{
															"nativeSrc": "2705:26:9",
															"nodeType": "YulAssignment",
															"src": "2705:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2717:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2717:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2728:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2728:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2713:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2713:3:9"
																},
																"nativeSrc": "2713:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2713:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2705:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2705:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2381:356:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2532:9:9",
														"nodeType": "YulTypedName",
														"src": "2532:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2546:4:9",
														"nodeType": "YulTypedName",
														"src": "2546:4:9",
														"type": ""
													}
												],
												"src": "2381:356:9"
											},
											{
												"body": {
													"nativeSrc": "2871:145:9",
													"nodeType": "YulBlock",
													"src": "2871:145:9",
													"statements": [
														{
															"nativeSrc": "2881:26:9",
															"nodeType": "YulAssignment",
															"src": "2881:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2893:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2893:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2904:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2904:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2889:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2889:3:9"
																},
																"nativeSrc": "2889:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2889:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2881:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2881:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2923:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2923:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2938:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2954:3:9",
																								"nodeType": "YulLiteral",
																								"src": "2954:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2959:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2959:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2950:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2950:3:9"
																						},
																						"nativeSrc": "2950:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2950:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2963:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2963:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2946:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2946:3:9"
																				},
																				"nativeSrc": "2946:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2946:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2934:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2934:3:9"
																		},
																		"nativeSrc": "2934:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2934:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2916:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:9"
																},
																"nativeSrc": "2916:51:9",
																"nodeType": "YulFunctionCall",
																"src": "2916:51:9"
															},
															"nativeSrc": "2916:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "2916:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2987:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2987:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2998:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2998:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2983:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2983:3:9"
																		},
																		"nativeSrc": "2983:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2983:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3003:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3003:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2976:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2976:6:9"
																},
																"nativeSrc": "2976:34:9",
																"nodeType": "YulFunctionCall",
																"src": "2976:34:9"
															},
															"nativeSrc": "2976:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "2976:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2742:274:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2832:9:9",
														"nodeType": "YulTypedName",
														"src": "2832:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2843:6:9",
														"nodeType": "YulTypedName",
														"src": "2843:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2851:6:9",
														"nodeType": "YulTypedName",
														"src": "2851:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2862:4:9",
														"nodeType": "YulTypedName",
														"src": "2862:4:9",
														"type": ""
													}
												],
												"src": "2742:274:9"
											},
											{
												"body": {
													"nativeSrc": "3150:119:9",
													"nodeType": "YulBlock",
													"src": "3150:119:9",
													"statements": [
														{
															"nativeSrc": "3160:26:9",
															"nodeType": "YulAssignment",
															"src": "3160:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3172:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3172:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3183:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3183:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3168:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3168:3:9"
																},
																"nativeSrc": "3168:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3168:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3160:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3160:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3202:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3202:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3213:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3213:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3195:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3195:6:9"
																},
																"nativeSrc": "3195:25:9",
																"nodeType": "YulFunctionCall",
																"src": "3195:25:9"
															},
															"nativeSrc": "3195:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "3195:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3240:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3240:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3251:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3251:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3236:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3236:3:9"
																		},
																		"nativeSrc": "3236:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3236:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3256:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3256:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3229:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3229:6:9"
																},
																"nativeSrc": "3229:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3229:34:9"
															},
															"nativeSrc": "3229:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3229:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3021:248:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3111:9:9",
														"nodeType": "YulTypedName",
														"src": "3111:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3122:6:9",
														"nodeType": "YulTypedName",
														"src": "3122:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3130:6:9",
														"nodeType": "YulTypedName",
														"src": "3130:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3141:4:9",
														"nodeType": "YulTypedName",
														"src": "3141:4:9",
														"type": ""
													}
												],
												"src": "3021:248:9"
											},
											{
												"body": {
													"nativeSrc": "3448:182:9",
													"nodeType": "YulBlock",
													"src": "3448:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3465:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3465:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3476:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3476:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3458:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3458:6:9"
																},
																"nativeSrc": "3458:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3458:21:9"
															},
															"nativeSrc": "3458:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "3458:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3499:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3499:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3510:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3510:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3495:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3495:3:9"
																		},
																		"nativeSrc": "3495:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3495:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3515:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3515:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3488:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3488:6:9"
																},
																"nativeSrc": "3488:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3488:30:9"
															},
															"nativeSrc": "3488:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "3488:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3538:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3538:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3549:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3549:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3534:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3534:3:9"
																		},
																		"nativeSrc": "3534:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3534:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "3554:34:9",
																		"nodeType": "YulLiteral",
																		"src": "3554:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3527:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3527:6:9"
																},
																"nativeSrc": "3527:62:9",
																"nodeType": "YulFunctionCall",
																"src": "3527:62:9"
															},
															"nativeSrc": "3527:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "3527:62:9"
														},
														{
															"nativeSrc": "3598:26:9",
															"nodeType": "YulAssignment",
															"src": "3598:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3610:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3610:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3621:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3621:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3606:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3606:3:9"
																},
																"nativeSrc": "3606:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3606:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3598:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3598:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3274:356:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3425:9:9",
														"nodeType": "YulTypedName",
														"src": "3425:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3439:4:9",
														"nodeType": "YulTypedName",
														"src": "3439:4:9",
														"type": ""
													}
												],
												"src": "3274:356:9"
											},
											{
												"body": {
													"nativeSrc": "3716:103:9",
													"nodeType": "YulBlock",
													"src": "3716:103:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3762:16:9",
																"nodeType": "YulBlock",
																"src": "3762:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3771:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3771:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3774:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3774:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3764:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3764:6:9"
																			},
																			"nativeSrc": "3764:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3764:12:9"
																		},
																		"nativeSrc": "3764:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3764:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3737:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3737:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3746:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3746:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3733:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3733:3:9"
																		},
																		"nativeSrc": "3733:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3733:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3758:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3758:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3729:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3729:3:9"
																},
																"nativeSrc": "3729:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3729:32:9"
															},
															"nativeSrc": "3726:52:9",
															"nodeType": "YulIf",
															"src": "3726:52:9"
														},
														{
															"nativeSrc": "3787:26:9",
															"nodeType": "YulAssignment",
															"src": "3787:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3803:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3803:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3797:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3797:5:9"
																},
																"nativeSrc": "3797:16:9",
																"nodeType": "YulFunctionCall",
																"src": "3797:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3787:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3787:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3635:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3682:9:9",
														"nodeType": "YulTypedName",
														"src": "3682:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3693:7:9",
														"nodeType": "YulTypedName",
														"src": "3693:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3705:6:9",
														"nodeType": "YulTypedName",
														"src": "3705:6:9",
														"type": ""
													}
												],
												"src": "3635:184:9"
											},
											{
												"body": {
													"nativeSrc": "3998:182:9",
													"nodeType": "YulBlock",
													"src": "3998:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4015:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4015:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4026:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4026:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4008:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4008:6:9"
																},
																"nativeSrc": "4008:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4008:21:9"
															},
															"nativeSrc": "4008:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4008:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4049:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4049:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4060:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4060:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4045:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4045:3:9"
																		},
																		"nativeSrc": "4045:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4045:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4065:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4065:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4038:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4038:6:9"
																},
																"nativeSrc": "4038:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4038:30:9"
															},
															"nativeSrc": "4038:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4038:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4088:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4088:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4099:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4099:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4084:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4084:3:9"
																		},
																		"nativeSrc": "4084:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4084:18:9"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420746865205661756c7420636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "4104:34:9",
																		"nodeType": "YulLiteral",
																		"src": "4104:34:9",
																		"type": "",
																		"value": "Caller is not the Vault contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4077:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4077:6:9"
																},
																"nativeSrc": "4077:62:9",
																"nodeType": "YulFunctionCall",
																"src": "4077:62:9"
															},
															"nativeSrc": "4077:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "4077:62:9"
														},
														{
															"nativeSrc": "4148:26:9",
															"nodeType": "YulAssignment",
															"src": "4148:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4160:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4160:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4171:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4171:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4156:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4156:3:9"
																},
																"nativeSrc": "4156:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4156:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4148:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4148:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_93e8fb2c8ae53eb4aaeac63b1be674c426bddab336579ae44324a8aa7712a04f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3824:356:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3975:9:9",
														"nodeType": "YulTypedName",
														"src": "3975:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3989:4:9",
														"nodeType": "YulTypedName",
														"src": "3989:4:9",
														"type": ""
													}
												],
												"src": "3824:356:9"
											},
											{
												"body": {
													"nativeSrc": "4359:228:9",
													"nodeType": "YulBlock",
													"src": "4359:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4376:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4376:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4387:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4387:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4369:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4369:6:9"
																},
																"nativeSrc": "4369:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4369:21:9"
															},
															"nativeSrc": "4369:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "4369:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4410:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4410:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4421:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4421:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4406:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4406:3:9"
																		},
																		"nativeSrc": "4406:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4406:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4426:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4426:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4399:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4399:6:9"
																},
																"nativeSrc": "4399:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4399:30:9"
															},
															"nativeSrc": "4399:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "4399:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4449:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4449:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4460:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4460:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4445:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4445:3:9"
																		},
																		"nativeSrc": "4445:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4445:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "4465:34:9",
																		"nodeType": "YulLiteral",
																		"src": "4465:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4438:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4438:6:9"
																},
																"nativeSrc": "4438:62:9",
																"nodeType": "YulFunctionCall",
																"src": "4438:62:9"
															},
															"nativeSrc": "4438:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "4438:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4520:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4520:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4531:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4531:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4516:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4516:3:9"
																		},
																		"nativeSrc": "4516:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4516:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "4536:8:9",
																		"nodeType": "YulLiteral",
																		"src": "4536:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4509:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4509:6:9"
																},
																"nativeSrc": "4509:36:9",
																"nodeType": "YulFunctionCall",
																"src": "4509:36:9"
															},
															"nativeSrc": "4509:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "4509:36:9"
														},
														{
															"nativeSrc": "4554:27:9",
															"nodeType": "YulAssignment",
															"src": "4554:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4566:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:3:9",
																		"nodeType": "YulLiteral",
																		"src": "4577:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4562:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4562:3:9"
																},
																"nativeSrc": "4562:19:9",
																"nodeType": "YulFunctionCall",
																"src": "4562:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4554:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4554:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4185:402:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4336:9:9",
														"nodeType": "YulTypedName",
														"src": "4336:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4350:4:9",
														"nodeType": "YulTypedName",
														"src": "4350:4:9",
														"type": ""
													}
												],
												"src": "4185:402:9"
											},
											{
												"body": {
													"nativeSrc": "4749:214:9",
													"nodeType": "YulBlock",
													"src": "4749:214:9",
													"statements": [
														{
															"nativeSrc": "4759:26:9",
															"nodeType": "YulAssignment",
															"src": "4759:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4771:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4771:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4782:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4782:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4767:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4767:3:9"
																},
																"nativeSrc": "4767:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4767:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4759:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4759:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4801:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4801:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4816:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4816:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4832:3:9",
																								"nodeType": "YulLiteral",
																								"src": "4832:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4837:1:9",
																								"nodeType": "YulLiteral",
																								"src": "4837:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4828:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4828:3:9"
																						},
																						"nativeSrc": "4828:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4828:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4841:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4841:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4824:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4824:3:9"
																				},
																				"nativeSrc": "4824:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4824:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4812:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4812:3:9"
																		},
																		"nativeSrc": "4812:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4812:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4794:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:9"
																},
																"nativeSrc": "4794:51:9",
																"nodeType": "YulFunctionCall",
																"src": "4794:51:9"
															},
															"nativeSrc": "4794:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "4794:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4865:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4865:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4876:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4876:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4861:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4861:3:9"
																		},
																		"nativeSrc": "4861:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4861:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4885:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4885:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4901:3:9",
																								"nodeType": "YulLiteral",
																								"src": "4901:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4906:1:9",
																								"nodeType": "YulLiteral",
																								"src": "4906:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4897:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4897:3:9"
																						},
																						"nativeSrc": "4897:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4897:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4910:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4910:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4893:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4893:3:9"
																				},
																				"nativeSrc": "4893:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4893:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4881:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4881:3:9"
																		},
																		"nativeSrc": "4881:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4881:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4854:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4854:6:9"
																},
																"nativeSrc": "4854:60:9",
																"nodeType": "YulFunctionCall",
																"src": "4854:60:9"
															},
															"nativeSrc": "4854:60:9",
															"nodeType": "YulExpressionStatement",
															"src": "4854:60:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4934:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4934:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4945:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4945:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4930:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4930:3:9"
																		},
																		"nativeSrc": "4930:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4930:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4950:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4950:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4923:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4923:6:9"
																},
																"nativeSrc": "4923:34:9",
																"nodeType": "YulFunctionCall",
																"src": "4923:34:9"
															},
															"nativeSrc": "4923:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "4923:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4592:371:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4702:9:9",
														"nodeType": "YulTypedName",
														"src": "4702:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4713:6:9",
														"nodeType": "YulTypedName",
														"src": "4713:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4721:6:9",
														"nodeType": "YulTypedName",
														"src": "4721:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4729:6:9",
														"nodeType": "YulTypedName",
														"src": "4729:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4740:4:9",
														"nodeType": "YulTypedName",
														"src": "4740:4:9",
														"type": ""
													}
												],
												"src": "4592:371:9"
											},
											{
												"body": {
													"nativeSrc": "5097:171:9",
													"nodeType": "YulBlock",
													"src": "5097:171:9",
													"statements": [
														{
															"nativeSrc": "5107:26:9",
															"nodeType": "YulAssignment",
															"src": "5107:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5119:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5119:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5130:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5130:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5115:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5115:3:9"
																},
																"nativeSrc": "5115:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5115:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5107:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5107:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5149:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5149:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5164:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5164:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5180:3:9",
																								"nodeType": "YulLiteral",
																								"src": "5180:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5185:1:9",
																								"nodeType": "YulLiteral",
																								"src": "5185:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5176:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "5176:3:9"
																						},
																						"nativeSrc": "5176:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "5176:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5189:1:9",
																						"nodeType": "YulLiteral",
																						"src": "5189:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5172:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5172:3:9"
																				},
																				"nativeSrc": "5172:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5172:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5160:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5160:3:9"
																		},
																		"nativeSrc": "5160:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5160:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5142:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5142:6:9"
																},
																"nativeSrc": "5142:51:9",
																"nodeType": "YulFunctionCall",
																"src": "5142:51:9"
															},
															"nativeSrc": "5142:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "5142:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5213:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5213:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5224:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5224:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5209:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5209:3:9"
																		},
																		"nativeSrc": "5209:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5209:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5233:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5233:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5249:3:9",
																								"nodeType": "YulLiteral",
																								"src": "5249:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5254:1:9",
																								"nodeType": "YulLiteral",
																								"src": "5254:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5245:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "5245:3:9"
																						},
																						"nativeSrc": "5245:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "5245:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5258:1:9",
																						"nodeType": "YulLiteral",
																						"src": "5258:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5241:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5241:3:9"
																				},
																				"nativeSrc": "5241:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5241:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5229:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5229:3:9"
																		},
																		"nativeSrc": "5229:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5229:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5202:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5202:6:9"
																},
																"nativeSrc": "5202:60:9",
																"nodeType": "YulFunctionCall",
																"src": "5202:60:9"
															},
															"nativeSrc": "5202:60:9",
															"nodeType": "YulExpressionStatement",
															"src": "5202:60:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "4968:300:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5058:9:9",
														"nodeType": "YulTypedName",
														"src": "5058:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5069:6:9",
														"nodeType": "YulTypedName",
														"src": "5069:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5077:6:9",
														"nodeType": "YulTypedName",
														"src": "5077:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5088:4:9",
														"nodeType": "YulTypedName",
														"src": "5088:4:9",
														"type": ""
													}
												],
												"src": "4968:300:9"
											},
											{
												"body": {
													"nativeSrc": "5447:244:9",
													"nodeType": "YulBlock",
													"src": "5447:244:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5464:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5464:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5475:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5475:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5457:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5457:6:9"
																},
																"nativeSrc": "5457:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5457:21:9"
															},
															"nativeSrc": "5457:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "5457:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5498:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5498:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5509:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5509:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5494:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5494:3:9"
																		},
																		"nativeSrc": "5494:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5494:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5514:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:9",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5487:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5487:6:9"
																},
																"nativeSrc": "5487:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5487:30:9"
															},
															"nativeSrc": "5487:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5487:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5537:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5537:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5548:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5548:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5533:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:9"
																		},
																		"nativeSrc": "5533:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:18:9"
																	},
																	{
																		"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f",
																		"kind": "string",
																		"nativeSrc": "5553:34:9",
																		"nodeType": "YulLiteral",
																		"src": "5553:34:9",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5526:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:9"
																},
																"nativeSrc": "5526:62:9",
																"nodeType": "YulFunctionCall",
																"src": "5526:62:9"
															},
															"nativeSrc": "5526:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "5526:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5608:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5608:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5619:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5619:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5604:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5604:3:9"
																		},
																		"nativeSrc": "5604:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5604:18:9"
																	},
																	{
																		"hexValue": "20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "5624:24:9",
																		"nodeType": "YulLiteral",
																		"src": "5624:24:9",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5597:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5597:6:9"
																},
																"nativeSrc": "5597:52:9",
																"nodeType": "YulFunctionCall",
																"src": "5597:52:9"
															},
															"nativeSrc": "5597:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "5597:52:9"
														},
														{
															"nativeSrc": "5658:27:9",
															"nodeType": "YulAssignment",
															"src": "5658:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5670:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5670:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5681:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5681:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5666:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5666:3:9"
																},
																"nativeSrc": "5666:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5666:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5658:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5658:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5273:418:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5424:9:9",
														"nodeType": "YulTypedName",
														"src": "5424:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5438:4:9",
														"nodeType": "YulTypedName",
														"src": "5438:4:9",
														"type": ""
													}
												],
												"src": "5273:418:9"
											},
											{
												"body": {
													"nativeSrc": "5774:199:9",
													"nodeType": "YulBlock",
													"src": "5774:199:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5820:16:9",
																"nodeType": "YulBlock",
																"src": "5820:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5829:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5829:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5832:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5832:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5822:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5822:6:9"
																			},
																			"nativeSrc": "5822:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5822:12:9"
																		},
																		"nativeSrc": "5822:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5822:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5795:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5795:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5804:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5804:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5791:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5791:3:9"
																		},
																		"nativeSrc": "5791:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5791:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5816:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5816:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5787:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5787:3:9"
																},
																"nativeSrc": "5787:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5787:32:9"
															},
															"nativeSrc": "5784:52:9",
															"nodeType": "YulIf",
															"src": "5784:52:9"
														},
														{
															"nativeSrc": "5845:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5845:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5864:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5864:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5858:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "5858:5:9"
																},
																"nativeSrc": "5858:16:9",
																"nodeType": "YulFunctionCall",
																"src": "5858:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5849:5:9",
																	"nodeType": "YulTypedName",
																	"src": "5849:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5927:16:9",
																"nodeType": "YulBlock",
																"src": "5927:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5936:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5936:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5939:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5939:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5929:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5929:6:9"
																			},
																			"nativeSrc": "5929:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5929:12:9"
																		},
																		"nativeSrc": "5929:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5929:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5896:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5896:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "5917:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "5917:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "5910:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "5910:6:9"
																						},
																						"nativeSrc": "5910:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "5910:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5903:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "5903:6:9"
																				},
																				"nativeSrc": "5903:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5903:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5893:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5893:2:9"
																		},
																		"nativeSrc": "5893:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5893:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5886:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5886:6:9"
																},
																"nativeSrc": "5886:40:9",
																"nodeType": "YulFunctionCall",
																"src": "5886:40:9"
															},
															"nativeSrc": "5883:60:9",
															"nodeType": "YulIf",
															"src": "5883:60:9"
														},
														{
															"nativeSrc": "5952:15:9",
															"nodeType": "YulAssignment",
															"src": "5952:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "5962:5:9",
																"nodeType": "YulIdentifier",
																"src": "5962:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5952:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5952:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5696:277:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5740:9:9",
														"nodeType": "YulTypedName",
														"src": "5740:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5751:7:9",
														"nodeType": "YulTypedName",
														"src": "5751:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5763:6:9",
														"nodeType": "YulTypedName",
														"src": "5763:6:9",
														"type": ""
													}
												],
												"src": "5696:277:9"
											},
											{
												"body": {
													"nativeSrc": "6152:232:9",
													"nodeType": "YulBlock",
													"src": "6152:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6169:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6169:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6180:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6162:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:9"
																},
																"nativeSrc": "6162:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6162:21:9"
															},
															"nativeSrc": "6162:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6162:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6203:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6203:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6214:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6214:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6199:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6199:3:9"
																		},
																		"nativeSrc": "6199:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6199:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6219:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6219:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6192:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6192:6:9"
																},
																"nativeSrc": "6192:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6192:30:9"
															},
															"nativeSrc": "6192:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6192:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6242:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6242:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6253:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6253:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6238:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6238:3:9"
																		},
																		"nativeSrc": "6238:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6238:18:9"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nativeSrc": "6258:34:9",
																		"nodeType": "YulLiteral",
																		"src": "6258:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6231:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6231:6:9"
																},
																"nativeSrc": "6231:62:9",
																"nodeType": "YulFunctionCall",
																"src": "6231:62:9"
															},
															"nativeSrc": "6231:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "6231:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6313:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6313:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6324:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6324:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6309:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6309:3:9"
																		},
																		"nativeSrc": "6309:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6309:18:9"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nativeSrc": "6329:12:9",
																		"nodeType": "YulLiteral",
																		"src": "6329:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6302:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6302:6:9"
																},
																"nativeSrc": "6302:40:9",
																"nodeType": "YulFunctionCall",
																"src": "6302:40:9"
															},
															"nativeSrc": "6302:40:9",
															"nodeType": "YulExpressionStatement",
															"src": "6302:40:9"
														},
														{
															"nativeSrc": "6351:27:9",
															"nodeType": "YulAssignment",
															"src": "6351:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6363:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6363:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6374:3:9",
																		"nodeType": "YulLiteral",
																		"src": "6374:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6359:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6359:3:9"
																},
																"nativeSrc": "6359:19:9",
																"nodeType": "YulFunctionCall",
																"src": "6359:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6351:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6351:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5978:406:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6129:9:9",
														"nodeType": "YulTypedName",
														"src": "6129:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6143:4:9",
														"nodeType": "YulTypedName",
														"src": "6143:4:9",
														"type": ""
													}
												],
												"src": "5978:406:9"
											},
											{
												"body": {
													"nativeSrc": "6563:228:9",
													"nodeType": "YulBlock",
													"src": "6563:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6580:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6580:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6591:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6591:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6573:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6573:6:9"
																},
																"nativeSrc": "6573:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6573:21:9"
															},
															"nativeSrc": "6573:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6573:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6614:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6614:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6625:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6625:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6610:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6610:3:9"
																		},
																		"nativeSrc": "6610:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6610:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6630:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6630:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6603:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6603:6:9"
																},
																"nativeSrc": "6603:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6603:30:9"
															},
															"nativeSrc": "6603:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "6603:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6653:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6653:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6664:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6664:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6649:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6649:3:9"
																		},
																		"nativeSrc": "6649:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6649:18:9"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nativeSrc": "6669:34:9",
																		"nodeType": "YulLiteral",
																		"src": "6669:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6642:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6642:6:9"
																},
																"nativeSrc": "6642:62:9",
																"nodeType": "YulFunctionCall",
																"src": "6642:62:9"
															},
															"nativeSrc": "6642:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "6642:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6724:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6724:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6735:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6735:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6720:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6720:3:9"
																		},
																		"nativeSrc": "6720:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6720:18:9"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nativeSrc": "6740:8:9",
																		"nodeType": "YulLiteral",
																		"src": "6740:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6713:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6713:6:9"
																},
																"nativeSrc": "6713:36:9",
																"nodeType": "YulFunctionCall",
																"src": "6713:36:9"
															},
															"nativeSrc": "6713:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "6713:36:9"
														},
														{
															"nativeSrc": "6758:27:9",
															"nodeType": "YulAssignment",
															"src": "6758:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6770:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6770:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6781:3:9",
																		"nodeType": "YulLiteral",
																		"src": "6781:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6766:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6766:3:9"
																},
																"nativeSrc": "6766:19:9",
																"nodeType": "YulFunctionCall",
																"src": "6766:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6758:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6758:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6389:402:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6540:9:9",
														"nodeType": "YulTypedName",
														"src": "6540:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6554:4:9",
														"nodeType": "YulTypedName",
														"src": "6554:4:9",
														"type": ""
													}
												],
												"src": "6389:402:9"
											},
											{
												"body": {
													"nativeSrc": "6970:179:9",
													"nodeType": "YulBlock",
													"src": "6970:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6987:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6987:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6998:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6998:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6980:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6980:6:9"
																},
																"nativeSrc": "6980:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6980:21:9"
															},
															"nativeSrc": "6980:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "6980:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7021:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7021:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7032:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7032:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7017:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7017:3:9"
																		},
																		"nativeSrc": "7017:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7017:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7037:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7037:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7010:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7010:6:9"
																},
																"nativeSrc": "7010:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7010:30:9"
															},
															"nativeSrc": "7010:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "7010:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7060:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7060:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7071:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7071:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7056:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7056:3:9"
																		},
																		"nativeSrc": "7056:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7056:18:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "7076:31:9",
																		"nodeType": "YulLiteral",
																		"src": "7076:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7049:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7049:6:9"
																},
																"nativeSrc": "7049:59:9",
																"nodeType": "YulFunctionCall",
																"src": "7049:59:9"
															},
															"nativeSrc": "7049:59:9",
															"nodeType": "YulExpressionStatement",
															"src": "7049:59:9"
														},
														{
															"nativeSrc": "7117:26:9",
															"nodeType": "YulAssignment",
															"src": "7117:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7129:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7129:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7140:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7140:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7125:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7125:3:9"
																},
																"nativeSrc": "7125:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7125:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7117:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7117:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6796:353:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6947:9:9",
														"nodeType": "YulTypedName",
														"src": "6947:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6961:4:9",
														"nodeType": "YulTypedName",
														"src": "6961:4:9",
														"type": ""
													}
												],
												"src": "6796:353:9"
											},
											{
												"body": {
													"nativeSrc": "7291:164:9",
													"nodeType": "YulBlock",
													"src": "7291:164:9",
													"statements": [
														{
															"nativeSrc": "7301:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7301:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7321:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7321:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7315:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7315:5:9"
																},
																"nativeSrc": "7315:13:9",
																"nodeType": "YulFunctionCall",
																"src": "7315:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7305:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7305:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7343:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7343:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7352:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7352:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7360:4:9",
																				"nodeType": "YulLiteral",
																				"src": "7360:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7348:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:9"
																		},
																		"nativeSrc": "7348:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7367:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7367:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7337:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7337:5:9"
																},
																"nativeSrc": "7337:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7337:37:9"
															},
															"nativeSrc": "7337:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "7337:37:9"
														},
														{
															"nativeSrc": "7383:26:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7383:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7397:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7397:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7402:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7402:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7393:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7393:3:9"
																},
																"nativeSrc": "7393:16:9",
																"nodeType": "YulFunctionCall",
																"src": "7393:16:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7387:2:9",
																	"nodeType": "YulTypedName",
																	"src": "7387:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "7425:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "7425:2:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7429:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7429:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7418:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7418:6:9"
																},
																"nativeSrc": "7418:13:9",
																"nodeType": "YulFunctionCall",
																"src": "7418:13:9"
															},
															"nativeSrc": "7418:13:9",
															"nodeType": "YulExpressionStatement",
															"src": "7418:13:9"
														},
														{
															"nativeSrc": "7440:9:9",
															"nodeType": "YulAssignment",
															"src": "7440:9:9",
															"value": {
																"name": "_1",
																"nativeSrc": "7447:2:9",
																"nodeType": "YulIdentifier",
																"src": "7447:2:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7440:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7154:301:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7267:3:9",
														"nodeType": "YulTypedName",
														"src": "7267:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7272:6:9",
														"nodeType": "YulTypedName",
														"src": "7272:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7283:3:9",
														"nodeType": "YulTypedName",
														"src": "7283:3:9",
														"type": ""
													}
												],
												"src": "7154:301:9"
											},
											{
												"body": {
													"nativeSrc": "7581:297:9",
													"nodeType": "YulBlock",
													"src": "7581:297:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7598:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7598:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7609:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7609:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7591:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7591:6:9"
																},
																"nativeSrc": "7591:21:9",
																"nodeType": "YulFunctionCall",
																"src": "7591:21:9"
															},
															"nativeSrc": "7591:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "7591:21:9"
														},
														{
															"nativeSrc": "7621:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7621:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7641:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7641:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7635:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7635:5:9"
																},
																"nativeSrc": "7635:13:9",
																"nodeType": "YulFunctionCall",
																"src": "7635:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7625:6:9",
																	"nodeType": "YulTypedName",
																	"src": "7625:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7668:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7668:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7679:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7679:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7664:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7664:3:9"
																		},
																		"nativeSrc": "7664:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7664:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7684:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7684:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7657:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7657:6:9"
																},
																"nativeSrc": "7657:34:9",
																"nodeType": "YulFunctionCall",
																"src": "7657:34:9"
															},
															"nativeSrc": "7657:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "7657:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7710:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7710:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7721:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7721:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7706:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7706:3:9"
																		},
																		"nativeSrc": "7706:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7706:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7730:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7730:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7738:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7738:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7726:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7726:3:9"
																		},
																		"nativeSrc": "7726:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7726:15:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7743:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7743:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7700:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7700:5:9"
																},
																"nativeSrc": "7700:50:9",
																"nodeType": "YulFunctionCall",
																"src": "7700:50:9"
															},
															"nativeSrc": "7700:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "7700:50:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7774:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7774:9:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "7785:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7785:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7770:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7770:3:9"
																				},
																				"nativeSrc": "7770:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7770:22:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7794:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7794:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7766:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7766:3:9"
																		},
																		"nativeSrc": "7766:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7766:31:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7799:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7799:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7759:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7759:6:9"
																},
																"nativeSrc": "7759:42:9",
																"nodeType": "YulFunctionCall",
																"src": "7759:42:9"
															},
															"nativeSrc": "7759:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "7759:42:9"
														},
														{
															"nativeSrc": "7810:62:9",
															"nodeType": "YulAssignment",
															"src": "7810:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7826:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7826:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "7845:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "7845:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7853:2:9",
																								"nodeType": "YulLiteral",
																								"src": "7853:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "7841:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "7841:3:9"
																						},
																						"nativeSrc": "7841:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "7841:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7862:2:9",
																								"nodeType": "YulLiteral",
																								"src": "7862:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "7858:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "7858:3:9"
																						},
																						"nativeSrc": "7858:7:9",
																						"nodeType": "YulFunctionCall",
																						"src": "7858:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "7837:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7837:3:9"
																				},
																				"nativeSrc": "7837:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7837:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7822:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7822:3:9"
																		},
																		"nativeSrc": "7822:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7822:45:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7869:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7869:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7818:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7818:3:9"
																},
																"nativeSrc": "7818:54:9",
																"nodeType": "YulFunctionCall",
																"src": "7818:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7810:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7810:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7460:418:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7550:9:9",
														"nodeType": "YulTypedName",
														"src": "7550:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7561:6:9",
														"nodeType": "YulTypedName",
														"src": "7561:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7572:4:9",
														"nodeType": "YulTypedName",
														"src": "7572:4:9",
														"type": ""
													}
												],
												"src": "7460:418:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$182__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IPrizePool_$1125__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IComet_$1037__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IVault_$1389__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_5200a6cd50ba177a26e933942f313ade4e78d9c2d95fbafb2307c1675897971d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"Caller is not the PrizePool or V\")\n        mstore(add(headStart, 96), \"ault contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_93e8fb2c8ae53eb4aaeac63b1be674c426bddab336579ae44324a8aa7712a04f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Caller is not the Vault contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"SafeERC20: approve from non-zero\")\n        mstore(add(headStart, 96), \" to non-zero allowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"740": [
									{
										"length": 32,
										"start": 353
									},
									{
										"length": 32,
										"start": 714
									},
									{
										"length": 32,
										"start": 1045
									},
									{
										"length": 32,
										"start": 1434
									},
									{
										"length": 32,
										"start": 1541
									}
								],
								"743": [
									{
										"length": 32,
										"start": 204
									},
									{
										"length": 32,
										"start": 667
									},
									{
										"length": 32,
										"start": 814
									},
									{
										"length": 32,
										"start": 1347
									},
									{
										"length": 32,
										"start": 1400
									},
									{
										"length": 32,
										"start": 1494
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061009b575f3560e01c80638da5cb5b116100635780638da5cb5b14610139578063b6b55f2514610149578063ba3e9c121461015c578063f2fde38b14610183578063fbfa77cf14610196575f5ffd5b80632e1a7d4d1461009f5780633fc8cef3146100c7578063715018a614610106578063719ce73e14610110578063722713f714610123575b5f5ffd5b6100b26100ad366004610bb4565b6101a9565b60405190151581526020015b60405180910390f35b6100ee7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100be565b61010e61039a565b005b6002546100ee906001600160a01b031681565b61012b6103fe565b6040519081526020016100be565b5f546001600160a01b03166100ee565b6100b2610157366004610bb4565b61048b565b6100ee7f000000000000000000000000000000000000000000000000000000000000000081565b61010e610191366004610bcb565b610693565b6001546100ee906001600160a01b031681565b6002545f906001600160a01b03163314806101ce57506001546001600160a01b031633145b6102355760405162461bcd60e51b815260206004820152602d60248201527f43616c6c6572206973206e6f7420746865205072697a65506f6f6c206f72205660448201526c185d5b1d0818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b5f82116102845760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161022c565b60405163f3fef3a360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063f3fef3a3906044015f604051808303815f87803b15801561030b575f5ffd5b505af115801561031d573d5f5f3e3d5ffd5b506103579250506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169050338461075d565b6040805183815242602082015233917f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc691015b60405180910390a2506001919050565b5f546001600160a01b031633146103f35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022c565b6103fc5f6107c5565b565b6040516370a0823160e01b81523060048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610462573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104869190610bf1565b905090565b6001545f906001600160a01b031633146104e75760405162461bcd60e51b815260206004820181905260248201527f43616c6c6572206973206e6f7420746865205661756c7420636f6e7472616374604482015260640161022c565b5f82116105365760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161022c565b61056b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610814565b6105bf6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000084610852565b604051631e573fb760e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063f2b9fdb8906044015f604051808303815f87803b158015610646575f5ffd5b505af1158015610658573d5f5f3e3d5ffd5b5050604080518581524260208201523393507f73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca92500161038a565b5f546001600160a01b031633146106ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022c565b6001600160a01b0381166107515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161022c565b61075a816107c5565b50565b6040516001600160a01b0383166024820152604481018290526107c090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610965565b505050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038085166024830152831660448201526064810182905261084c9085906323b872dd60e01b90608401610789565b50505050565b8015806108ca5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156108a4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108c89190610bf1565b155b6109355760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161022c565b6040516001600160a01b0383166024820152604481018290526107c090849063095ea7b360e01b90606401610789565b5f6109b9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a369092919063ffffffff16565b8051909150156107c057808060200190518101906109d79190610c08565b6107c05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161022c565b6060610a4484845f85610a4e565b90505b9392505050565b606082471015610aaf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161022c565b6001600160a01b0385163b610b065760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161022c565b5f5f866001600160a01b03168587604051610b219190610c27565b5f6040518083038185875af1925050503d805f8114610b5b576040519150601f19603f3d011682016040523d82523d5f602084013e610b60565b606091505b5091509150610b70828286610b7b565b979650505050505050565b60608315610b8a575081610a47565b825115610b9a5782518084602001fd5b8160405162461bcd60e51b815260040161022c9190610c3d565b5f60208284031215610bc4575f5ffd5b5035919050565b5f60208284031215610bdb575f5ffd5b81356001600160a01b0381168114610a47575f5ffd5b5f60208284031215610c01575f5ffd5b5051919050565b5f60208284031215610c18575f5ffd5b81518015158114610a47575f5ffd5b5f82518060208501845e5f920191825250919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f8301168401019150509291505056fea2646970667358221220734905556dc60f0ec2eef996fa6c99c0c6c1d272fc8deaf82632cba51dab9ecd64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xBA3E9C12 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x196 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x719CE73E EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x123 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0x10E PUSH2 0x39A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xEE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEE JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH2 0xEE PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x10E PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xEE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1CE JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x235 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865205072697A65506F6F6C206F722056 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x185D5B1D0818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x284 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF3FEF3A3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF3FEF3A3 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x357 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 POP CALLER DUP5 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST PUSH2 0x3FC PUSH0 PUSH2 0x7C5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x462 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x486 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F7420746865205661756C7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST PUSH2 0x56B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0x814 JUMP JUMPDEST PUSH2 0x5BF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP5 PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E573FB7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF2B9FDB8 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x646 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP4 POP PUSH32 0x73A19DD210F1A7F902193214C0EE91DD35EE5B4D920CBA8D519ECA65A7B488CA SWAP3 POP ADD PUSH2 0x38A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH2 0x75A DUP2 PUSH2 0x7C5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x7C0 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x965 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x84C SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x789 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x8CA JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x20746F206E6F6E2D7A65726F20616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x7C0 SWAP1 DUP5 SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x789 JUMP JUMPDEST PUSH0 PUSH2 0x9B9 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA36 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x7C0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x9D7 SWAP2 SWAP1 PUSH2 0xC08 JUMP JUMPDEST PUSH2 0x7C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA44 DUP5 DUP5 PUSH0 DUP6 PUSH2 0xA4E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22C JUMP JUMPDEST PUSH0 PUSH0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB21 SWAP2 SWAP1 PUSH2 0xC27 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xB70 DUP3 DUP3 DUP7 PUSH2 0xB7B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xB8A JUMPI POP DUP2 PUSH2 0xA47 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xB9A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0xC3D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA47 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC01 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC18 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA47 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x4905556DC60F0EC2EEF996FA6C99C0C6C1D272FC DUP14 0xEA EXTCALL 0x26 ORIGIN 0xCB 0xA5 SAR 0xAB SWAP15 0xCD PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "458:3052:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2837:449;;;;;;:::i;:::-;;:::i;:::-;;;364:14:9;;357:22;339:41;;327:2;312:18;2837:449:5;;;;;;;;569:28;;;;;;;;-1:-1:-1;;;;;569:32:9;;;551:51;;539:2;524:18;569:28:5;391:217:9;1668:101:0;;;:::i;:::-;;628:27:5;;;;;-1:-1:-1;;;;;628:27:5;;;3401:107;;;:::i;:::-;;;986:25:9;;;974:2;959:18;3401:107:5;840:177:9;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;2059:543:5;;;;;;:::i;:::-;;:::i;533:29::-;;;;;1918:198:0;;;;;;:::i;:::-;;:::i;603:19:5:-;;;;;-1:-1:-1;;;;;603:19:5;;;2837:449;1552:9;;2910:4;;-1:-1:-1;;;;;1552:9:5;1530:10;:32;;:64;;-1:-1:-1;1588:5:5;;-1:-1:-1;;;;;1588:5:5;1566:10;:28;1530:64;1509:156;;;;-1:-1:-1;;;1509:156:5;;2169:2:9;1509:156:5;;;2151:21:9;2208:2;2188:18;;;2181:30;2247:34;2227:18;;;2220:62;-1:-1:-1;;;2298:18:9;;;2291:43;2351:19;;1509:156:5;;;;;;;;;2943:1:::1;2934:6;:10;2926:55;;;::::0;-1:-1:-1;;;2926:55:5;;2583:2:9;2926:55:5::1;::::0;::::1;2565:21:9::0;;;2602:18;;;2595:30;2661:34;2641:18;;;2634:62;2713:18;;2926:55:5::1;2381:356:9::0;2926:55:5::1;3043:37;::::0;-1:-1:-1;;;3043:37:5;;-1:-1:-1;;;;;3066:4:5::1;2934:32:9::0;;3043:37:5::1;::::0;::::1;2916:51:9::0;2983:18;;;2976:34;;;3043:5:5::1;:14;::::0;::::1;::::0;2889:18:9;;3043:37:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;3126:37:5::1;::::0;-1:-1:-1;;;;;;;3126:4:5::1;:17;::::0;-1:-1:-1;3144:10:5::1;3156:6:::0;3126:17:::1;:37::i;:::-;3212:46;::::0;;3195:25:9;;;3242:15:5::1;3251:2:9::0;3236:18;;3229:34;3222:10:5::1;::::0;3212:46:::1;::::0;3168:18:9;3212:46:5::1;;;;;;;;-1:-1:-1::0;3275:4:5::1;2837:449:::0;;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;3476:2:9;1240:68:0;;;3458:21:9;;;3495:18;;;3488:30;3554:34;3534:18;;;3527:62;3606:18;;1240:68:0;3274:356:9;1240:68:0;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3401:107:5:-;3471:30;;-1:-1:-1;;;3471:30:5;;3495:4;3471:30;;;551:51:9;3445:7:5;;3471:5;-1:-1:-1;;;;;3471:15:5;;;;524:18:9;;3471:30:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3464:37;;3401:107;:::o;2059:543::-;1750:5;;2120:4;;-1:-1:-1;;;;;1750:5:5;1728:10;:28;1720:73;;;;-1:-1:-1;;;1720:73:5;;4026:2:9;1720:73:5;;;4008:21:9;;;4045:18;;;4038:30;4104:34;4084:18;;;4077:62;4156:18;;1720:73:5;3824:356:9;1720:73:5;2153:1:::1;2144:6;:10;2136:55;;;::::0;-1:-1:-1;;;2136:55:5;;2583:2:9;2136:55:5::1;::::0;::::1;2565:21:9::0;;;2602:18;;;2595:30;2661:34;2641:18;;;2634:62;2713:18;;2136:55:5::1;2381:356:9::0;2136:55:5::1;2255:56;-1:-1:-1::0;;;;;2255:4:5::1;:21;2277:10;2297:4;2304:6:::0;2255:21:::1;:56::i;:::-;2358:40;-1:-1:-1::0;;;;;2358:4:5::1;:16;2383:5;2391:6:::0;2358:16:::1;:40::i;:::-;2447:35;::::0;-1:-1:-1;;;2447:35:5;;-1:-1:-1;;;;;2468:4:5::1;2934:32:9::0;;2447:35:5::1;::::0;::::1;2916:51:9::0;2983:18;;;2976:34;;;2447:5:5::1;:12;::::0;::::1;::::0;2889:18:9;;2447:35:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;2528:46:5::1;::::0;;3195:25:9;;;2558:15:5::1;3251:2:9::0;3236:18;;3229:34;2538:10:5::1;::::0;-1:-1:-1;2528:46:5::1;::::0;-1:-1:-1;3168:18:9;2528:46:5::1;3021:248:9::0;1918:198:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;3476:2:9;1240:68:0;;;3458:21:9;;;3495:18;;;3488:30;3554:34;3534:18;;;3527:62;3606:18;;1240:68:0;3274:356:9;1240:68:0;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4387:2:9;1998:73:0::1;::::0;::::1;4369:21:9::0;4426:2;4406:18;;;4399:30;4465:34;4445:18;;;4438:62;-1:-1:-1;;;4516:18:9;;;4509:36;4562:19;;1998:73:0::1;4185:402:9::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;701:205:2:-;840:58;;-1:-1:-1;;;;;2934:32:9;;840:58:2;;;2916:51:9;2983:18;;;2976:34;;;813:86:2;;833:5;;-1:-1:-1;;;863:23:2;2889:18:9;;840:58:2;;;;-1:-1:-1;;840:58:2;;;;;;;;;;;;;;-1:-1:-1;;;;;840:58:2;-1:-1:-1;;;;;;840:58:2;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;912:241:2:-;1077:68;;-1:-1:-1;;;;;4812:32:9;;;1077:68:2;;;4794:51:9;4881:32;;4861:18;;;4854:60;4930:18;;;4923:34;;;1050:96:2;;1070:5;;-1:-1:-1;;;1100:27:2;4767:18:9;;1077:68:2;4592:371:9;1050:96:2;912:241;;;;:::o;1413:603::-;1768:10;;;1767:62;;-1:-1:-1;1784:39:2;;-1:-1:-1;;;1784:39:2;;1808:4;1784:39;;;5142:51:9;-1:-1:-1;;;;;5229:32:9;;;5209:18;;;5202:60;1784:15:2;;;;;5115:18:9;;1784:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1767:62;1746:163;;;;-1:-1:-1;;;1746:163:2;;5475:2:9;1746:163:2;;;5457:21:9;5514:2;5494:18;;;5487:30;5553:34;5533:18;;;5526:62;-1:-1:-1;;;5604:18:9;;;5597:52;5666:19;;1746:163:2;5273:418:9;1746:163:2;1946:62;;-1:-1:-1;;;;;2934:32:9;;1946:62:2;;;2916:51:9;2983:18;;;2976:34;;;1919:90:2;;1939:5;;-1:-1:-1;;;1969:22:2;2889:18:9;;1946:62:2;2742:274:9;3207:706:2;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:2;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:2;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:2;;6180:2:9;3811:85:2;;;6162:21:9;6219:2;6199:18;;;6192:30;6258:34;6238:18;;;6231:62;-1:-1:-1;;;6309:18:9;;;6302:40;6359:19;;3811:85:2;5978:406:9;3861:223:3;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:3;;6591:2:9;5137:81:3;;;6573:21:9;6630:2;6610:18;;;6603:30;6669:34;6649:18;;;6642:62;-1:-1:-1;;;6720:18:9;;;6713:36;6766:19;;5137:81:3;6389:402:9;5137:81:3;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;6998:2:9;5228:60:3;;;6980:21:9;7037:2;7017:18;;;7010:30;7076:31;7056:18;;;7049:59;7125:18;;5228:60:3;6796:353:9;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:3:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:3;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:3;;;;;;;;:::i;14:180:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:9;;14:180;-1:-1:-1;14:180:9:o;1453:286::-;1512:6;1565:2;1553:9;1544:7;1540:23;1536:32;1533:52;;;1581:1;1578;1571:12;1533:52;1607:23;;-1:-1:-1;;;;;1659:31:9;;1649:42;;1639:70;;1705:1;1702;1695:12;3635:184;3705:6;3758:2;3746:9;3737:7;3733:23;3729:32;3726:52;;;3774:1;3771;3764:12;3726:52;-1:-1:-1;3797:16:9;;3635:184;-1:-1:-1;3635:184:9:o;5696:277::-;5763:6;5816:2;5804:9;5795:7;5791:23;5787:32;5784:52;;;5832:1;5829;5822:12;5784:52;5864:9;5858:16;5917:5;5910:13;5903:21;5896:5;5893:32;5883:60;;5939:1;5936;5929:12;7154:301;7283:3;7321:6;7315:13;7367:6;7360:4;7352:6;7348:17;7343:3;7337:37;7429:1;7393:16;;7418:13;;;-1:-1:-1;7393:16:9;7154:301;-1:-1:-1;7154:301:9:o;7460:418::-;7609:2;7598:9;7591:21;7572:4;7641:6;7635:13;7684:6;7679:2;7668:9;7664:18;7657:34;7743:6;7738:2;7730:6;7726:15;7721:2;7710:9;7706:18;7700:50;7799:1;7794:2;7785:6;7774:9;7770:22;7766:31;7759:42;7869:2;7862;7858:7;7853:2;7845:6;7841:15;7837:29;7826:9;7822:45;7818:54;7810:62;;;7460:418;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "648000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf()": "infinite",
								"comet()": "infinite",
								"deposit(uint256)": "infinite",
								"owner()": "2329",
								"prizePool()": "2403",
								"renounceOwnership()": "28155",
								"transferOwnership(address)": "28336",
								"vault()": "2424",
								"weth()": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 458,
									"end": 3510,
									"name": "PUSH",
									"source": 5,
									"value": "C0"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 880,
									"end": 1303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 880,
									"end": 1303,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 977,
									"end": 996,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 977,
									"end": 996,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 867,
									"end": 869,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 849,
									"end": 870,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 906,
									"end": 908,
									"name": "PUSH",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 886,
									"end": 904,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 879,
									"end": 909,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 945,
									"end": 967,
									"name": "PUSH",
									"source": 9,
									"value": "496E76616C696420574554482061646472657373000000000000000000000000"
								},
								{
									"begin": 925,
									"end": 943,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 925,
									"end": 943,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 925,
									"end": 943,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 918,
									"end": 968,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 985,
									"end": 1003,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 985,
									"end": 1003,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 969,
									"end": 1021,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1039,
									"end": 1059,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1039,
									"end": 1059,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1031,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1031,
									"end": 1085,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1031,
									"end": 1085,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1031,
									"end": 1085,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1031,
									"end": 1085,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1031,
									"end": 1085,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1218,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1031,
									"end": 1085,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1031,
									"end": 1085,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1031,
									"end": 1085,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1219,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 1257,
									"name": "PUSH",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1235,
									"end": 1253,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1235,
									"end": 1253,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1235,
									"end": 1253,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1258,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1294,
									"end": 1317,
									"name": "PUSH",
									"source": 9,
									"value": "496E76616C6964205661756C7420616464726573730000000000000000000000"
								},
								{
									"begin": 1274,
									"end": 1292,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1274,
									"end": 1292,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1274,
									"end": 1292,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1267,
									"end": 1318,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1335,
									"end": 1353,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1335,
									"end": 1353,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1014,
									"end": 1359,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1085,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1031,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1103,
									"end": 1127,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1103,
									"end": 1127,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1095,
									"end": 1157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1157,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1095,
									"end": 1157,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1095,
									"end": 1157,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1157,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1566,
									"end": 1568,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1095,
									"end": 1157,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1095,
									"end": 1157,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1157,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1548,
									"end": 1569,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1585,
									"end": 1603,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1585,
									"end": 1603,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1585,
									"end": 1603,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1578,
									"end": 1608,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1644,
									"end": 1671,
									"name": "PUSH",
									"source": 9,
									"value": "496E76616C6964205072697A65506F6F6C206164647265737300000000000000"
								},
								{
									"begin": 1624,
									"end": 1642,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1624,
									"end": 1642,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1624,
									"end": 1642,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1617,
									"end": 1672,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1689,
									"end": 1707,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1689,
									"end": 1707,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1095,
									"end": 1157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1364,
									"end": 1713,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1095,
									"end": 1157,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1095,
									"end": 1157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1203,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1239,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1264,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1274,
									"end": 1296,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1274,
									"end": 1296,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1274,
									"end": 1296,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 196,
									"end": 660,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 660,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 410,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 400,
									"end": 450,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 512,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 499,
									"end": 517,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 469,
									"end": 518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 469,
									"end": 518,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 469,
									"end": 518,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 459,
									"end": 518,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 537,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 582,
									"end": 584,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 571,
									"end": 580,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 567,
									"end": 585,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 537,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 537,
									"end": 586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 537,
									"end": 586,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 537,
									"end": 586,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 527,
									"end": 586,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 527,
									"end": 586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 605,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 650,
									"end": 652,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 639,
									"end": 648,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 635,
									"end": 653,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 605,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 605,
									"end": 654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 605,
									"end": 654,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 605,
									"end": 654,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 595,
									"end": 654,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 595,
									"end": 654,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 196,
									"end": 660,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 196,
									"end": 660,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 196,
									"end": 660,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1364,
									"end": 1713,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1364,
									"end": 1713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "743"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "740"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 3510,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220734905556dc60f0ec2eef996fa6c99c0c6c1d272fc8deaf82632cba51dab9ecd64736f6c634300081e0033",
									".code": [
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "B6B55F25"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "BA3E9C12"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "FBFA77CF"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "2E1A7D4D"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "3FC8CEF3"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "719CE73E"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "722713F7"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 3510,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2837,
											"end": 3286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2837,
											"end": 3286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 364,
											"end": 378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 364,
											"end": 378,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 357,
											"end": 379,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 339,
											"end": 380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 339,
											"end": 380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 312,
											"end": 330,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 569,
											"end": 597,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 569,
											"end": 597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 569,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 569,
											"end": 597,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "743"
										},
										{
											"begin": 569,
											"end": 597,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 569,
											"end": 597,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 569,
											"end": 597,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 569,
											"end": 597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 569,
											"end": 597,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 569,
											"end": 597,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 569,
											"end": 601,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 569,
											"end": 601,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 569,
											"end": 601,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 551,
											"end": 602,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 602,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 539,
											"end": 541,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 569,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 391,
											"end": 608,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 655,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 628,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 655,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 628,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 628,
											"end": 655,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 628,
											"end": 655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 628,
											"end": 655,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3508,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3401,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 3401,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3401,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3508,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 3401,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3508,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3508,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1011,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1011,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 977,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 840,
											"end": 1017,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2602,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2059,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2059,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2059,
											"end": 2602,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2602,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2059,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2059,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2602,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2059,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 533,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 533,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 533,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 562,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "740"
										},
										{
											"begin": 533,
											"end": 562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 533,
											"end": 562,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 603,
											"end": 622,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 603,
											"end": 622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 603,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 603,
											"end": 622,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 603,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 603,
											"end": 622,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 603,
											"end": 622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 603,
											"end": 622,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1561,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1552,
											"end": 1561,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2914,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1552,
											"end": 1561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1540,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1562,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1530,
											"end": 1594,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1576,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1594,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1594,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1530,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2210,
											"name": "PUSH",
											"source": 9,
											"value": "2D"
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2181,
											"end": 2211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2247,
											"end": 2281,
											"name": "PUSH",
											"source": 9,
											"value": "43616C6C6572206973206E6F7420746865205072697A65506F6F6C206F722056"
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2282,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "185D5B1D0818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2291,
											"end": 2334,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2351,
											"end": 2370,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2351,
											"end": 2370,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1509,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2943,
											"end": 2944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2940,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2934,
											"end": 2944,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2926,
											"end": 2981,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 2981,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2926,
											"end": 2981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2981,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2585,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2926,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2926,
											"end": 2981,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2586,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2620,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2602,
											"end": 2620,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2620,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2625,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 2641,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2641,
											"end": 2659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2641,
											"end": 2659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2696,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2731,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2713,
											"end": 2731,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2381,
											"end": 2737,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2926,
											"end": 2981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3043,
											"end": 3080,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F3FEF3A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3080,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3066,
											"end": 3070,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "743"
										},
										{
											"begin": 2934,
											"end": 2966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 2966,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3043,
											"end": 3080,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2916,
											"end": 2967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3043,
											"end": 3048,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "740"
										},
										{
											"begin": 3043,
											"end": 3057,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "F3FEF3A3"
										},
										{
											"begin": 3043,
											"end": 3057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3043,
											"end": 3080,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3126,
											"end": 3163,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3126,
											"end": 3163,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3126,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "743"
										},
										{
											"begin": 3126,
											"end": 3143,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3144,
											"end": 3154,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3126,
											"end": 3163,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3163,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3126,
											"end": 3163,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3258,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3258,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3220,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3195,
											"end": 3220,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3195,
											"end": 3220,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3257,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3253,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3236,
											"end": 3254,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3263,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3222,
											"end": 3232,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3232,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "92CCF450A286A957AF52509BC1C9939D1A6A481783E142E41E2499F0BB66EBC6"
										},
										{
											"begin": 3212,
											"end": 3258,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3212,
											"end": 3258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3258,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3258,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3258,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3258,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3275,
											"end": 3279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 3286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3478,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3458,
											"end": 3479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3458,
											"end": 3479,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3518,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3589,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3606,
											"end": 3624,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3606,
											"end": 3624,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3274,
											"end": 3630,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1759,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1732,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3508,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3401,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3499,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 551,
											"end": 602,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3452,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3476,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "740"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3486,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3486,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3471,
											"end": 3486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 524,
											"end": 542,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 524,
											"end": 542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3471,
											"end": 3501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3471,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3464,
											"end": 3501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3464,
											"end": 3501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2602,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1755,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1750,
											"end": 1755,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2124,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1750,
											"end": 1755,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1728,
											"end": 1738,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1728,
											"end": 1756,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1720,
											"end": 1793,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1793,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1793,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1720,
											"end": 1793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1793,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4026,
											"end": 4028,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1793,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1793,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4038,
											"end": 4068,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4104,
											"end": 4138,
											"name": "PUSH",
											"source": 9,
											"value": "43616C6C6572206973206E6F7420746865205661756C7420636F6E7472616374"
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4102,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4139,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3824,
											"end": 4180,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1793,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1720,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2150,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2154,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2136,
											"end": 2191,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2191,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2136,
											"end": 2191,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2191,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2585,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2136,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2136,
											"end": 2191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2191,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2586,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2620,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2602,
											"end": 2620,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2620,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2625,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 2641,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2641,
											"end": 2659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2641,
											"end": 2659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2696,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2731,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2713,
											"end": 2731,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2381,
											"end": 2737,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2136,
											"end": 2191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "743"
										},
										{
											"begin": 2255,
											"end": 2276,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2277,
											"end": 2287,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2301,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2310,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2255,
											"end": 2311,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2311,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2255,
											"end": 2311,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2358,
											"end": 2362,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "743"
										},
										{
											"begin": 2358,
											"end": 2374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2383,
											"end": 2388,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "740"
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2358,
											"end": 2398,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2358,
											"end": 2398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2447,
											"end": 2482,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E573FB7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2447,
											"end": 2482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2468,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "743"
										},
										{
											"begin": 2934,
											"end": 2966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 2966,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2447,
											"end": 2482,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2916,
											"end": 2967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "740"
										},
										{
											"begin": 2447,
											"end": 2459,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "F2B9FDB8"
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2447,
											"end": 2482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2528,
											"end": 2574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2574,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2574,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3220,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3195,
											"end": 3220,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3195,
											"end": 3220,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2558,
											"end": 2573,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3253,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3236,
											"end": 3254,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3254,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3263,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2548,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2548,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2528,
											"end": 2574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "73A19DD210F1A7F902193214C0EE91DD35EE5B4D920CBA8D519ECA65A7B488CA"
										},
										{
											"begin": 2528,
											"end": 2574,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3168,
											"end": 3186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2574,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3021,
											"end": 3269,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3478,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3458,
											"end": 3479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3458,
											"end": 3479,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3513,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3518,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3552,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3589,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3606,
											"end": 3624,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3606,
											"end": 3624,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3274,
											"end": 3630,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4387,
											"end": 4389,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4426,
											"end": 4428,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4406,
											"end": 4424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4399,
											"end": 4429,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4465,
											"end": 4499,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4445,
											"end": 4463,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4445,
											"end": 4463,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4445,
											"end": 4463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4500,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4516,
											"end": 4534,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4516,
											"end": 4534,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4534,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4509,
											"end": 4545,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4562,
											"end": 4581,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4562,
											"end": 4581,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4185,
											"end": 4587,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2100,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2081,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 701,
											"end": 906,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 701,
											"end": 906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2934,
											"end": 2966,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 2966,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 813,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 833,
											"end": 838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 863,
											"end": 886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 840,
											"end": 898,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 813,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 813,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 813,
											"end": 899,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 813,
											"end": 899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 701,
											"end": 906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4812,
											"end": 4844,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4812,
											"end": 4844,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4812,
											"end": 4844,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4794,
											"end": 4845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4914,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4930,
											"end": 4948,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4930,
											"end": 4948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4930,
											"end": 4948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4957,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4957,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4785,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4767,
											"end": 4785,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4592,
											"end": 4963,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 912,
											"end": 1153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 2016,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1413,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1778,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1767,
											"end": 1829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5193,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5229,
											"end": 5261,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5229,
											"end": 5261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5229,
											"end": 5261,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5227,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5209,
											"end": 5227,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5202,
											"end": 5262,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1799,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1799,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1784,
											"end": 1799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5133,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5115,
											"end": 5133,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1784,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1784,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1829,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1767,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1746,
											"end": 1909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1746,
											"end": 1909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1909,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1746,
											"end": 1909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5478,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5514,
											"end": 5516,
											"name": "PUSH",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 5494,
											"end": 5512,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5494,
											"end": 5512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5487,
											"end": 5517,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5553,
											"end": 5587,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5588,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5597,
											"end": 5649,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5666,
											"end": 5685,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5666,
											"end": 5685,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5273,
											"end": 5691,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 1909,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1746,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2008,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 2008,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2934,
											"end": 2966,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 2966,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2008,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1946,
											"end": 2008,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 2008,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 3010,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1919,
											"end": 2009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 1944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 1944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1969,
											"end": 1991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2742,
											"end": 3016,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3819,
											"end": 3849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6180,
											"end": 6182,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6162,
											"end": 6183,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6219,
											"end": 6221,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6192,
											"end": 6222,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6258,
											"end": 6292,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6231,
											"end": 6293,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6309,
											"end": 6327,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6309,
											"end": 6327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6302,
											"end": 6342,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6378,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6359,
											"end": 6378,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 5978,
											"end": 6384,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4025,
											"end": 4077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3861,
											"end": 4084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6593,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6573,
											"end": 6594,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6630,
											"end": 6632,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6610,
											"end": 6628,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6610,
											"end": 6628,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6610,
											"end": 6628,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6603,
											"end": 6633,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6703,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6713,
											"end": 6749,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6766,
											"end": 6785,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6766,
											"end": 6785,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 6389,
											"end": 6791,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6998,
											"end": 7000,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6980,
											"end": 7001,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7037,
											"end": 7039,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 7017,
											"end": 7035,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7017,
											"end": 7035,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7017,
											"end": 7035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7010,
											"end": 7040,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7076,
											"end": 7107,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 7056,
											"end": 7074,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7056,
											"end": 7074,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7056,
											"end": 7074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7049,
											"end": 7108,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7125,
											"end": 7143,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7125,
											"end": 7143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 6796,
											"end": 7149,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5341,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5389,
											"end": 5440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 8202,
											"end": 8222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1453,
											"end": 1739,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1453,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1567,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1553,
											"end": 1562,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1563,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1568,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1583,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1607,
											"end": 1630,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1607,
											"end": 1630,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1659,
											"end": 1690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1659,
											"end": 1690,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1649,
											"end": 1691,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1649,
											"end": 1691,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1639,
											"end": 1709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1706,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1707,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3635,
											"end": 3819,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 3635,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3711,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3760,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3746,
											"end": 3755,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3744,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3733,
											"end": 3756,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3729,
											"end": 3761,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3778,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3726,
											"end": 3778,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3775,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3772,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3776,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3778,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3726,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3797,
											"end": 3813,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3797,
											"end": 3813,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3635,
											"end": 3819,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3635,
											"end": 3819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5696,
											"end": 5973,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 5696,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5763,
											"end": 5769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5818,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5804,
											"end": 5813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5795,
											"end": 5802,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5791,
											"end": 5814,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5787,
											"end": 5819,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5784,
											"end": 5836,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5784,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 5784,
											"end": 5836,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5822,
											"end": 5834,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5784,
											"end": 5836,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 5784,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5858,
											"end": 5874,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5917,
											"end": 5922,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5910,
											"end": 5923,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5903,
											"end": 5924,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5896,
											"end": 5901,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5893,
											"end": 5925,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5883,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 5883,
											"end": 5943,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5939,
											"end": 5940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5937,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5929,
											"end": 5941,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7154,
											"end": 7455,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 7154,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7283,
											"end": 7286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7315,
											"end": 7328,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7373,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7360,
											"end": 7364,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7352,
											"end": 7358,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7343,
											"end": 7346,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7337,
											"end": 7374,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 7429,
											"end": 7430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7393,
											"end": 7409,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7393,
											"end": 7409,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7418,
											"end": 7431,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7418,
											"end": 7431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7418,
											"end": 7431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7393,
											"end": 7409,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7154,
											"end": 7455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7154,
											"end": 7455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7460,
											"end": 7878,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 7460,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7609,
											"end": 7611,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7598,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7591,
											"end": 7612,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7572,
											"end": 7576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7641,
											"end": 7647,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7635,
											"end": 7648,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7684,
											"end": 7690,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7668,
											"end": 7677,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7664,
											"end": 7682,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7657,
											"end": 7691,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7740,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7723,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7710,
											"end": 7719,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7706,
											"end": 7724,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7700,
											"end": 7750,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7796,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7785,
											"end": 7791,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7770,
											"end": 7792,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7759,
											"end": 7801,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7869,
											"end": 7871,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7862,
											"end": 7864,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7858,
											"end": 7865,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7853,
											"end": 7855,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7845,
											"end": 7851,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7856,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7837,
											"end": 7866,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7835,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 7867,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7818,
											"end": 7872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7810,
											"end": 7872,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7810,
											"end": 7872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7810,
											"end": 7872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7460,
											"end": 7878,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7460,
											"end": 7878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7460,
											"end": 7878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7460,
											"end": 7878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7460,
											"end": 7878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/YieldAggregator.sol",
								"contracts/interfaces/IComet.sol",
								"contracts/interfaces/IPrizePool.sol",
								"contracts/interfaces/IVault.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf()": "722713f7",
							"comet()": "ba3e9c12",
							"deposit(uint256)": "b6b55f25",
							"owner()": "8da5cb5b",
							"prizePool()": "719ce73e",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"vault()": "fbfa77cf",
							"weth()": "3fc8cef3",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_prizePool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_comet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comet\",\"outputs\":[{\"internalType\":\"contract IComet\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prizePool\",\"outputs\":[{\"internalType\":\"contract IPrizePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements ReentrancyGuard for security\",\"kind\":\"dev\",\"methods\":{\"balanceOf()\":{\"returns\":{\"_0\":\"The current balance in Compound\"}},\"deposit(uint256)\":{\"details\":\"Uses SafeERC20 for transferFrom and requires Vault authorization\",\"params\":{\"amount\":\"Amount of WETH to deposit\"},\"returns\":{\"_0\":\"success True if deposit was successful\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"Can only be called by authorized contracts (PrizePool or Vault)\",\"params\":{\"amount\":\"Amount of WETH to withdraw\"},\"returns\":{\"_0\":\"success True if withdrawal was successful\"}}},\"title\":\"Yield Aggregator Contract\",\"version\":1},\"userdoc\":{\"events\":{\"Deposited(address,uint256,uint256)\":{\"notice\":\"Events for tracking deposits and withdrawals\"}},\"kind\":\"user\",\"methods\":{\"balanceOf()\":{\"notice\":\"Gets the current balance of WETH in Compound\"},\"deposit(uint256)\":{\"notice\":\"Deposits WETH into Compound to earn interest\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws WETH from Compound\"}},\"notice\":\"Manages deposits and withdrawals to Compound protocol for yield generation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YieldAggregator.sol\":\"YieldAggregator\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/YieldAggregator.sol\":{\"keccak256\":\"0xfaa74cef08ebb5af25513d1d94d91094462d9ea55fc6206d1239fe3c26a6cb2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fe9f6a72df340fed88a7e338dcf6851031af0bc75b549c3c0739026e4589af4\",\"dweb:/ipfs/Qme6ezna9SZk4yw41LsiSpmWqFdRvFvALWozCj2zz23mJd\"]},\"contracts/interfaces/IComet.sol\":{\"keccak256\":\"0x8b8bec733af5be89026f2605c43e707c0597b2ccd0bcd4302ddcc2145d8a7d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d5d3aece5c5f7040be81332b85be81caeb3cde6a70708688474a8d30824486\",\"dweb:/ipfs/QmPepU1eRqwpwv34mGe7QDgZYLFtRt77jPt5accB1b8Fte\"]},\"contracts/interfaces/IPrizePool.sol\":{\"keccak256\":\"0xa2d76359374e48cb7076bd703ade1c9a70a29eb83a74b90e065d8291661a1a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f46bfbeb501245955ec359198ff9e2f15102e74ba22861da8eeb26f2caff8bd\",\"dweb:/ipfs/QmaHjdNjh5KDQJ843DSs9y6kH4bwtZSuXLDFmESWvH25pS\"]},\"contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x77dd49e6feaeeebf2338b3cdccc3fa0b895a020f2d938e16b98d2add68401d88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a2a62ce747b201f0374810f250ba310602cb7287c4271f2372149af7dd61821\",\"dweb:/ipfs/QmazRfZXvAHbBmPuMk6dXHVn3PLjxNX2kmoSLpjGtkoq55\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/YieldAggregator.sol:YieldAggregator",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 746,
								"contract": "contracts/YieldAggregator.sol:YieldAggregator",
								"label": "vault",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IVault)1389"
							},
							{
								"astId": 749,
								"contract": "contracts/YieldAggregator.sol:YieldAggregator",
								"label": "prizePool",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IPrizePool)1125"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IPrizePool)1125": {
								"encoding": "inplace",
								"label": "contract IPrizePool",
								"numberOfBytes": "20"
							},
							"t_contract(IVault)1389": {
								"encoding": "inplace",
								"label": "contract IVault",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"events": {
							"Deposited(address,uint256,uint256)": {
								"notice": "Events for tracking deposits and withdrawals"
							}
						},
						"kind": "user",
						"methods": {
							"balanceOf()": {
								"notice": "Gets the current balance of WETH in Compound"
							},
							"deposit(uint256)": {
								"notice": "Deposits WETH into Compound to earn interest"
							},
							"withdraw(uint256)": {
								"notice": "Withdraws WETH from Compound"
							}
						},
						"notice": "Manages deposits and withdrawals to Compound protocol for yield generation",
						"version": 1
					}
				}
			},
			"contracts/interfaces/IComet.sol": {
				"IComet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "supply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "userBasic",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint104",
											"name": "principal",
											"type": "uint104"
										},
										{
											"internalType": "uint64",
											"name": "baseTrackingIndex",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "baseTrackingAccrued",
											"type": "uint64"
										},
										{
											"internalType": "uint16",
											"name": "assetsIn",
											"type": "uint16"
										},
										{
											"internalType": "uint8",
											"name": "_reserved",
											"type": "uint8"
										}
									],
									"internalType": "struct IComet.UserBasic",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supply(address,uint256)": {
								"params": {
									"amount": "The amount to supply",
									"asset": "The address of the asset to supply"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"supply(address,uint256)": "f2b9fdb8",
							"userBasic(address)": "dc4abafd",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"userBasic\",\"outputs\":[{\"components\":[{\"internalType\":\"uint104\",\"name\":\"principal\",\"type\":\"uint104\"},{\"internalType\":\"uint64\",\"name\":\"baseTrackingIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"baseTrackingAccrued\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"assetsIn\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"_reserved\",\"type\":\"uint8\"}],\"internalType\":\"struct IComet.UserBasic\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supply(address,uint256)\":{\"params\":{\"amount\":\"The amount to supply\",\"asset\":\"The address of the asset to supply\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supply(address,uint256)\":{\"notice\":\"Supply an amount of asset to the protocol\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IComet.sol\":\"IComet\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IComet.sol\":{\"keccak256\":\"0x8b8bec733af5be89026f2605c43e707c0597b2ccd0bcd4302ddcc2145d8a7d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d5d3aece5c5f7040be81332b85be81caeb3cde6a70708688474a8d30824486\",\"dweb:/ipfs/QmPepU1eRqwpwv34mGe7QDgZYLFtRt77jPt5accB1b8Fte\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supply(address,uint256)": {
								"notice": "Supply an amount of asset to the protocol"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IPrizePool.sol": {
				"IPrizePool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FeeCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldFeeRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFeeRate",
									"type": "uint256"
								}
							],
							"name": "FeeRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "lotteryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrizeClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "VaultSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldYieldAggregator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newYieldAggregator",
									"type": "address"
								}
							],
							"name": "YieldAggregatorSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "addToPrizePool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "lotteryId",
									"type": "uint256"
								}
							],
							"name": "claimPrize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrizePoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_feeRate",
									"type": "uint256"
								}
							],
							"name": "setFeeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vault",
									"type": "address"
								}
							],
							"name": "setVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_weth",
									"type": "address"
								}
							],
							"name": "setWETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_yieldAggregator",
									"type": "address"
								}
							],
							"name": "setYieldAggregator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"claimPrize(uint256)": {
								"params": {
									"lotteryId": "The ID of the lottery round to claim prize for"
								}
							},
							"feeRate()": {
								"returns": {
									"_0": "The fee rate in basis points"
								}
							},
							"getPrizePoolAmount()": {
								"returns": {
									"_0": "The current amount of ETH in the prize pool (in wei)"
								}
							},
							"setFeeRate(uint256)": {
								"params": {
									"_feeRate": "The new fee rate in basis points (1% = 100)"
								}
							},
							"setVault(address)": {
								"params": {
									"_vault": "The address of the vault"
								}
							},
							"setWETH(address)": {
								"params": {
									"_weth": "The address of the WETH token"
								}
							},
							"setYieldAggregator(address)": {
								"params": {
									"_yieldAggregator": "The address of the yield aggregator"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addToPrizePool()": "b3ede13f",
							"claimPrize(uint256)": "d7098154",
							"feeRate()": "978bbdb9",
							"getPrizePoolAmount()": "f6fe8727",
							"setFeeRate(uint256)": "45596e2e",
							"setVault(address)": "6817031b",
							"setWETH(address)": "5b769f3c",
							"setYieldAggregator(address)": "992b48de"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFeeRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFeeRate\",\"type\":\"uint256\"}],\"name\":\"FeeRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"lotteryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrizeClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"VaultSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldYieldAggregator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newYieldAggregator\",\"type\":\"address\"}],\"name\":\"YieldAggregatorSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addToPrizePool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lotteryId\",\"type\":\"uint256\"}],\"name\":\"claimPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrizePoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeRate\",\"type\":\"uint256\"}],\"name\":\"setFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"setVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"name\":\"setWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_yieldAggregator\",\"type\":\"address\"}],\"name\":\"setYieldAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimPrize(uint256)\":{\"params\":{\"lotteryId\":\"The ID of the lottery round to claim prize for\"}},\"feeRate()\":{\"returns\":{\"_0\":\"The fee rate in basis points\"}},\"getPrizePoolAmount()\":{\"returns\":{\"_0\":\"The current amount of ETH in the prize pool (in wei)\"}},\"setFeeRate(uint256)\":{\"params\":{\"_feeRate\":\"The new fee rate in basis points (1% = 100)\"}},\"setVault(address)\":{\"params\":{\"_vault\":\"The address of the vault\"}},\"setWETH(address)\":{\"params\":{\"_weth\":\"The address of the WETH token\"}},\"setYieldAggregator(address)\":{\"params\":{\"_yieldAggregator\":\"The address of the yield aggregator\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToPrizePool()\":{\"notice\":\"Adds ETH to the prize pool\"},\"claimPrize(uint256)\":{\"notice\":\"Allows a winner to claim their ETH prize\"},\"feeRate()\":{\"notice\":\"Gets the current fee rate\"},\"getPrizePoolAmount()\":{\"notice\":\"Gets the current prize pool amount in ETH\"},\"setFeeRate(uint256)\":{\"notice\":\"Sets the fee rate for prize claims\"},\"setVault(address)\":{\"notice\":\"Sets the vault address\"},\"setWETH(address)\":{\"notice\":\"Sets the WETH token address\"},\"setYieldAggregator(address)\":{\"notice\":\"Sets the yield aggregator address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPrizePool.sol\":\"IPrizePool\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPrizePool.sol\":{\"keccak256\":\"0xa2d76359374e48cb7076bd703ade1c9a70a29eb83a74b90e065d8291661a1a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f46bfbeb501245955ec359198ff9e2f15102e74ba22861da8eeb26f2caff8bd\",\"dweb:/ipfs/QmaHjdNjh5KDQJ843DSs9y6kH4bwtZSuXLDFmESWvH25pS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addToPrizePool()": {
								"notice": "Adds ETH to the prize pool"
							},
							"claimPrize(uint256)": {
								"notice": "Allows a winner to claim their ETH prize"
							},
							"feeRate()": {
								"notice": "Gets the current fee rate"
							},
							"getPrizePoolAmount()": {
								"notice": "Gets the current prize pool amount in ETH"
							},
							"setFeeRate(uint256)": {
								"notice": "Sets the fee rate for prize claims"
							},
							"setVault(address)": {
								"notice": "Sets the vault address"
							},
							"setWETH(address)": {
								"notice": "Sets the WETH token address"
							},
							"setYieldAggregator(address)": {
								"notice": "Sets the yield aggregator address"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IVault.sol": {
				"IVault": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "FeeDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "drawTimestamp",
									"type": "uint256"
								}
							],
							"name": "NewRoundStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ShareTokenBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ShareTokenMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "ShortfallCovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldYieldAggregator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newYieldAggregator",
									"type": "address"
								}
							],
							"name": "YieldAggregatorSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositFeeToYieldAggregator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositFor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllDepositsTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentRoundId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDepositTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getDepositTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getShareToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalWeight",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getTotalWeight",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getUser",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getUser",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUserCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "getUserCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_lottery",
									"type": "address"
								}
							],
							"name": "setLottery",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_prizePool",
									"type": "address"
								}
							],
							"name": "setPrizePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_router",
									"type": "address"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_shareToken",
									"type": "address"
								}
							],
							"name": "setShareToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_weth",
									"type": "address"
								}
							],
							"name": "setWETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_yieldAggregator",
									"type": "address"
								}
							],
							"name": "setYieldAggregator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRoundId",
									"type": "uint256"
								}
							],
							"name": "startNewRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "userDeposits",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint128",
											"name": "amount",
											"type": "uint128"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint96",
											"name": "weight",
											"type": "uint96"
										}
									],
									"internalType": "struct IVault.Deposit",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "userDeposits",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint128",
											"name": "amount",
											"type": "uint128"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint96",
											"name": "weight",
											"type": "uint96"
										}
									],
									"internalType": "struct IVault.Deposit",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weth",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roundId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Deposited(address,uint256,uint256,uint256)": {
								"params": {
									"amount": "The amount deposited",
									"roundId": "The ID of the lottery round",
									"timestamp": "The time of the deposit",
									"user": "The address of the user who made the deposit"
								}
							},
							"FeeDeposited(uint256,uint256)": {
								"params": {
									"amount": "The amount of the fee deposited",
									"timestamp": "The time of the deposit"
								}
							},
							"NewRoundStarted(uint256,uint256,uint256)": {
								"params": {
									"drawTimestamp": "The expected timestamp for the draw",
									"roundId": "The ID of the new round",
									"timestamp": "The timestamp when the round was started"
								}
							},
							"ShareTokenBurned(uint256,uint256)": {
								"params": {
									"amount": "The amount of tokens burned",
									"timestamp": "The timestamp when the tokens were burned"
								}
							},
							"ShareTokenMinted(address,uint256,uint256)": {
								"params": {
									"amount": "The amount of tokens minted",
									"timestamp": "The timestamp when the tokens were minted",
									"user": "The address of the user who received the minted tokens"
								}
							},
							"ShortfallCovered(address,uint256,uint256)": {
								"params": {
									"amount": "The amount of the shortfall that was covered",
									"roundId": "The ID of the lottery round",
									"user": "The address of the user who triggered the shortfall"
								}
							},
							"Withdrawn(address,uint256,uint256,uint256)": {
								"params": {
									"amount": "The amount withdrawn",
									"roundId": "The ID of the lottery round",
									"timestamp": "The time of the withdrawal",
									"user": "The address of the user who made the withdrawal"
								}
							},
							"YieldAggregatorSet(address,address)": {
								"params": {
									"newYieldAggregator": "The address of the new yield aggregator",
									"oldYieldAggregator": "The address of the old yield aggregator"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"deposit(uint256)": {
								"params": {
									"amount": "WETH代币数量"
								}
							},
							"depositFeeToYieldAggregator(uint256)": {
								"details": "只能由奖池合约调用，发送者必须预先批准本合约使用其WETH",
								"params": {
									"amount": "费用金额"
								},
								"returns": {
									"_0": "操作是否成功"
								}
							},
							"depositFor(address,uint256)": {
								"details": "用户需要预先授权调用者使用其WETH代币",
								"params": {
									"amount": "WETH代币数量",
									"user": "实际用户地址"
								}
							},
							"getAllDepositsTotal()": {
								"returns": {
									"_0": "The total amount of ETH in the vault across all rounds"
								}
							},
							"getCurrentRoundId()": {
								"returns": {
									"_0": "The ID of the current active lottery round"
								}
							},
							"getDepositTotal()": {
								"returns": {
									"_0": "The total amount of ETH in the vault for the current round"
								}
							},
							"getDepositTotal(uint256)": {
								"params": {
									"roundId": "The ID of the lottery round"
								},
								"returns": {
									"_0": "The total amount of ETH in the vault for the specified round"
								}
							},
							"getShareToken()": {
								"returns": {
									"_0": "权益代币地址"
								}
							},
							"getTotalWeight()": {
								"returns": {
									"_0": "The sum of all users' weights in the current lottery round"
								}
							},
							"getTotalWeight(uint256)": {
								"params": {
									"roundId": "The ID of the lottery round"
								},
								"returns": {
									"_0": "The sum of all users' weights in the specified lottery round"
								}
							},
							"getUser(uint256)": {
								"params": {
									"index": "The index of the user in the participants array"
								},
								"returns": {
									"_0": "The address of the user"
								}
							},
							"getUser(uint256,uint256)": {
								"params": {
									"index": "The index of the user in the participants array",
									"roundId": "The ID of the lottery round"
								},
								"returns": {
									"_0": "The address of the user"
								}
							},
							"getUserCount()": {
								"returns": {
									"_0": "The number of users in the current lottery round"
								}
							},
							"getUserCount(uint256)": {
								"params": {
									"roundId": "The ID of the lottery round"
								},
								"returns": {
									"_0": "The number of users in the specified lottery round"
								}
							},
							"setLottery(address)": {
								"params": {
									"_lottery": "The address of the lottery contract"
								}
							},
							"setPrizePool(address)": {
								"params": {
									"_prizePool": "The address of the prize pool contract"
								}
							},
							"setRouter(address)": {
								"params": {
									"_router": "The address of the router contract"
								}
							},
							"setShareToken(address)": {
								"params": {
									"_shareToken": "The address of the share token"
								}
							},
							"setWETH(address)": {
								"params": {
									"_weth": "The address of the WETH token"
								}
							},
							"setYieldAggregator(address)": {
								"params": {
									"_yieldAggregator": "The address of the yield aggregator"
								}
							},
							"startNewRound(uint256)": {
								"details": "Can only be called by the lottery contract",
								"params": {
									"newRoundId": "The ID of the new lottery round"
								}
							},
							"userDeposits(address)": {
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The user's deposit information"
								}
							},
							"userDeposits(address,uint256)": {
								"params": {
									"roundId": "The ID of the round",
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The user's deposit information"
								}
							},
							"weth()": {
								"returns": {
									"_0": "The address of the WETH token"
								}
							},
							"withdraw()": {
								"details": "Will withdraw the full amount of user's deposit and reset their weight to zero"
							},
							"withdraw(uint256)": {
								"details": "Will withdraw the full amount of user's deposit and reset their weight to zero",
								"params": {
									"roundId": "The ID of the lottery round"
								}
							}
						},
						"title": "IVault Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(uint256)": "b6b55f25",
							"depositFeeToYieldAggregator(uint256)": "111663e8",
							"depositFor(address,uint256)": "2f4f21e2",
							"getAllDepositsTotal()": "362b5198",
							"getCurrentRoundId()": "5727e25d",
							"getDepositTotal()": "5eefdd2b",
							"getDepositTotal(uint256)": "fbee60a0",
							"getShareToken()": "2bdb0d92",
							"getTotalWeight()": "06aba0e1",
							"getTotalWeight(uint256)": "2434c5bd",
							"getUser(uint256)": "b0467deb",
							"getUser(uint256,uint256)": "c75cd70a",
							"getUserCount()": "b5cb15f7",
							"getUserCount(uint256)": "ef6f156e",
							"initialize()": "8129fc1c",
							"setLottery(address)": "f298083b",
							"setPrizePool(address)": "336c6d39",
							"setRouter(address)": "c0d78655",
							"setShareToken(address)": "40f797bb",
							"setWETH(address)": "5b769f3c",
							"setYieldAggregator(address)": "992b48de",
							"startNewRound(uint256)": "4615102c",
							"userDeposits(address)": "0ba36dcd",
							"userDeposits(address,uint256)": "08f43333",
							"weth()": "3fc8cef3",
							"withdraw()": "3ccfd60b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FeeDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"drawTimestamp\",\"type\":\"uint256\"}],\"name\":\"NewRoundStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ShareTokenBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ShareTokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"ShortfallCovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldYieldAggregator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newYieldAggregator\",\"type\":\"address\"}],\"name\":\"YieldAggregatorSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFeeToYieldAggregator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDepositsTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRoundId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getDepositTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getShareToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getTotalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getUserCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lottery\",\"type\":\"address\"}],\"name\":\"setLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prizePool\",\"type\":\"address\"}],\"name\":\"setPrizePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_shareToken\",\"type\":\"address\"}],\"name\":\"setShareToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"name\":\"setWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_yieldAggregator\",\"type\":\"address\"}],\"name\":\"setYieldAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRoundId\",\"type\":\"uint256\"}],\"name\":\"startNewRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"userDeposits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"weight\",\"type\":\"uint96\"}],\"internalType\":\"struct IVault.Deposit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userDeposits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"weight\",\"type\":\"uint96\"}],\"internalType\":\"struct IVault.Deposit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Deposited(address,uint256,uint256,uint256)\":{\"params\":{\"amount\":\"The amount deposited\",\"roundId\":\"The ID of the lottery round\",\"timestamp\":\"The time of the deposit\",\"user\":\"The address of the user who made the deposit\"}},\"FeeDeposited(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the fee deposited\",\"timestamp\":\"The time of the deposit\"}},\"NewRoundStarted(uint256,uint256,uint256)\":{\"params\":{\"drawTimestamp\":\"The expected timestamp for the draw\",\"roundId\":\"The ID of the new round\",\"timestamp\":\"The timestamp when the round was started\"}},\"ShareTokenBurned(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens burned\",\"timestamp\":\"The timestamp when the tokens were burned\"}},\"ShareTokenMinted(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens minted\",\"timestamp\":\"The timestamp when the tokens were minted\",\"user\":\"The address of the user who received the minted tokens\"}},\"ShortfallCovered(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the shortfall that was covered\",\"roundId\":\"The ID of the lottery round\",\"user\":\"The address of the user who triggered the shortfall\"}},\"Withdrawn(address,uint256,uint256,uint256)\":{\"params\":{\"amount\":\"The amount withdrawn\",\"roundId\":\"The ID of the lottery round\",\"timestamp\":\"The time of the withdrawal\",\"user\":\"The address of the user who made the withdrawal\"}},\"YieldAggregatorSet(address,address)\":{\"params\":{\"newYieldAggregator\":\"The address of the new yield aggregator\",\"oldYieldAggregator\":\"The address of the old yield aggregator\"}}},\"kind\":\"dev\",\"methods\":{\"deposit(uint256)\":{\"params\":{\"amount\":\"WETH\\u4ee3\\u5e01\\u6570\\u91cf\"}},\"depositFeeToYieldAggregator(uint256)\":{\"details\":\"\\u53ea\\u80fd\\u7531\\u5956\\u6c60\\u5408\\u7ea6\\u8c03\\u7528\\uff0c\\u53d1\\u9001\\u8005\\u5fc5\\u987b\\u9884\\u5148\\u6279\\u51c6\\u672c\\u5408\\u7ea6\\u4f7f\\u7528\\u5176WETH\",\"params\":{\"amount\":\"\\u8d39\\u7528\\u91d1\\u989d\"},\"returns\":{\"_0\":\"\\u64cd\\u4f5c\\u662f\\u5426\\u6210\\u529f\"}},\"depositFor(address,uint256)\":{\"details\":\"\\u7528\\u6237\\u9700\\u8981\\u9884\\u5148\\u6388\\u6743\\u8c03\\u7528\\u8005\\u4f7f\\u7528\\u5176WETH\\u4ee3\\u5e01\",\"params\":{\"amount\":\"WETH\\u4ee3\\u5e01\\u6570\\u91cf\",\"user\":\"\\u5b9e\\u9645\\u7528\\u6237\\u5730\\u5740\"}},\"getAllDepositsTotal()\":{\"returns\":{\"_0\":\"The total amount of ETH in the vault across all rounds\"}},\"getCurrentRoundId()\":{\"returns\":{\"_0\":\"The ID of the current active lottery round\"}},\"getDepositTotal()\":{\"returns\":{\"_0\":\"The total amount of ETH in the vault for the current round\"}},\"getDepositTotal(uint256)\":{\"params\":{\"roundId\":\"The ID of the lottery round\"},\"returns\":{\"_0\":\"The total amount of ETH in the vault for the specified round\"}},\"getShareToken()\":{\"returns\":{\"_0\":\"\\u6743\\u76ca\\u4ee3\\u5e01\\u5730\\u5740\"}},\"getTotalWeight()\":{\"returns\":{\"_0\":\"The sum of all users' weights in the current lottery round\"}},\"getTotalWeight(uint256)\":{\"params\":{\"roundId\":\"The ID of the lottery round\"},\"returns\":{\"_0\":\"The sum of all users' weights in the specified lottery round\"}},\"getUser(uint256)\":{\"params\":{\"index\":\"The index of the user in the participants array\"},\"returns\":{\"_0\":\"The address of the user\"}},\"getUser(uint256,uint256)\":{\"params\":{\"index\":\"The index of the user in the participants array\",\"roundId\":\"The ID of the lottery round\"},\"returns\":{\"_0\":\"The address of the user\"}},\"getUserCount()\":{\"returns\":{\"_0\":\"The number of users in the current lottery round\"}},\"getUserCount(uint256)\":{\"params\":{\"roundId\":\"The ID of the lottery round\"},\"returns\":{\"_0\":\"The number of users in the specified lottery round\"}},\"setLottery(address)\":{\"params\":{\"_lottery\":\"The address of the lottery contract\"}},\"setPrizePool(address)\":{\"params\":{\"_prizePool\":\"The address of the prize pool contract\"}},\"setRouter(address)\":{\"params\":{\"_router\":\"The address of the router contract\"}},\"setShareToken(address)\":{\"params\":{\"_shareToken\":\"The address of the share token\"}},\"setWETH(address)\":{\"params\":{\"_weth\":\"The address of the WETH token\"}},\"setYieldAggregator(address)\":{\"params\":{\"_yieldAggregator\":\"The address of the yield aggregator\"}},\"startNewRound(uint256)\":{\"details\":\"Can only be called by the lottery contract\",\"params\":{\"newRoundId\":\"The ID of the new lottery round\"}},\"userDeposits(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user's deposit information\"}},\"userDeposits(address,uint256)\":{\"params\":{\"roundId\":\"The ID of the round\",\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user's deposit information\"}},\"weth()\":{\"returns\":{\"_0\":\"The address of the WETH token\"}},\"withdraw()\":{\"details\":\"Will withdraw the full amount of user's deposit and reset their weight to zero\"},\"withdraw(uint256)\":{\"details\":\"Will withdraw the full amount of user's deposit and reset their weight to zero\",\"params\":{\"roundId\":\"The ID of the lottery round\"}}},\"title\":\"IVault Interface\",\"version\":1},\"userdoc\":{\"events\":{\"Deposited(address,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a user makes a deposit\"},\"FeeDeposited(uint256,uint256)\":{\"notice\":\"Emitted when a fee is deposited to the yield aggregator\"},\"NewRoundStarted(uint256,uint256,uint256)\":{\"notice\":\"Emitted when a new round is started\"},\"ShareTokenBurned(uint256,uint256)\":{\"notice\":\"Emitted when share tokens are burned\"},\"ShareTokenMinted(address,uint256,uint256)\":{\"notice\":\"Emitted when share tokens are minted\"},\"ShortfallCovered(address,uint256,uint256)\":{\"notice\":\"Emitted when a shortfall is covered by withdrawing from yield aggregator\"},\"Withdrawn(address,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a user withdraws their deposit\"},\"YieldAggregatorSet(address,address)\":{\"notice\":\"Emitted when yield aggregator is set\"}},\"kind\":\"user\",\"methods\":{\"deposit(uint256)\":{\"notice\":\"Allows users to deposit WETH tokens into the vault for the current round\"},\"depositFeeToYieldAggregator(uint256)\":{\"notice\":\"\\u5c06WETH\\u4ee3\\u5e01\\u8d39\\u7528\\u5b58\\u5165\\u6536\\u76ca\\u805a\\u5408\\u5668\"},\"depositFor(address,uint256)\":{\"notice\":\"\\u5141\\u8bb8\\u4efb\\u4f55\\u5730\\u5740\\u4ee3\\u8868\\u7528\\u6237\\u8fdb\\u884cWETH\\u4ee3\\u5e01\\u5b58\\u6b3e\"},\"getAllDepositsTotal()\":{\"notice\":\"Returns the total amount of ETH deposited across all rounds\"},\"getCurrentRoundId()\":{\"notice\":\"Returns the current active round ID\"},\"getDepositTotal()\":{\"notice\":\"Returns the total amount of ETH deposited in the current round\"},\"getDepositTotal(uint256)\":{\"notice\":\"Returns the total amount of ETH deposited in a specific round\"},\"getShareToken()\":{\"notice\":\"\\u8fd4\\u56de\\u6743\\u76ca\\u4ee3\\u5e01\\u5730\\u5740\"},\"getTotalWeight()\":{\"notice\":\"Returns the total weight of all participants in the current round\"},\"getTotalWeight(uint256)\":{\"notice\":\"Returns the total weight of all participants in a specific round\"},\"getUser(uint256)\":{\"notice\":\"Returns the user address at the given index in the current round\"},\"getUser(uint256,uint256)\":{\"notice\":\"Returns the user address at the given index in a specific round\"},\"getUserCount()\":{\"notice\":\"Returns the total number of participants in the current round\"},\"getUserCount(uint256)\":{\"notice\":\"Returns the total number of participants in a specific round\"},\"initialize()\":{\"notice\":\"Initialize the contract\"},\"setLottery(address)\":{\"notice\":\"Sets the lottery contract address\"},\"setPrizePool(address)\":{\"notice\":\"Sets the prize pool contract address\"},\"setRouter(address)\":{\"notice\":\"Sets the router contract address\"},\"setShareToken(address)\":{\"notice\":\"Sets the share token address\"},\"setWETH(address)\":{\"notice\":\"Sets the WETH token address\"},\"setYieldAggregator(address)\":{\"notice\":\"Sets the yield aggregator address\"},\"startNewRound(uint256)\":{\"notice\":\"Starts a new lottery round\"},\"userDeposits(address)\":{\"notice\":\"Returns the deposit information for a specific user in the current round\"},\"userDeposits(address,uint256)\":{\"notice\":\"Returns the deposit information for a specific user in a specific round\"},\"weth()\":{\"notice\":\"Returns the WETH token address\"},\"withdraw()\":{\"notice\":\"Allows users to withdraw all their deposited ETH from the current round\"},\"withdraw(uint256)\":{\"notice\":\"Allows users to withdraw all their deposited ETH from a specific round\"}},\"notice\":\"Interface for the Vault contract that manages user deposits and withdrawals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IVault.sol\":\"IVault\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x77dd49e6feaeeebf2338b3cdccc3fa0b895a020f2d938e16b98d2add68401d88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a2a62ce747b201f0374810f250ba310602cb7287c4271f2372149af7dd61821\",\"dweb:/ipfs/QmazRfZXvAHbBmPuMk6dXHVn3PLjxNX2kmoSLpjGtkoq55\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Deposited(address,uint256,uint256,uint256)": {
								"notice": "Emitted when a user makes a deposit"
							},
							"FeeDeposited(uint256,uint256)": {
								"notice": "Emitted when a fee is deposited to the yield aggregator"
							},
							"NewRoundStarted(uint256,uint256,uint256)": {
								"notice": "Emitted when a new round is started"
							},
							"ShareTokenBurned(uint256,uint256)": {
								"notice": "Emitted when share tokens are burned"
							},
							"ShareTokenMinted(address,uint256,uint256)": {
								"notice": "Emitted when share tokens are minted"
							},
							"ShortfallCovered(address,uint256,uint256)": {
								"notice": "Emitted when a shortfall is covered by withdrawing from yield aggregator"
							},
							"Withdrawn(address,uint256,uint256,uint256)": {
								"notice": "Emitted when a user withdraws their deposit"
							},
							"YieldAggregatorSet(address,address)": {
								"notice": "Emitted when yield aggregator is set"
							}
						},
						"kind": "user",
						"methods": {
							"deposit(uint256)": {
								"notice": "Allows users to deposit WETH tokens into the vault for the current round"
							},
							"depositFeeToYieldAggregator(uint256)": {
								"notice": "将WETH代币费用存入收益聚合器"
							},
							"depositFor(address,uint256)": {
								"notice": "允许任何地址代表用户进行WETH代币存款"
							},
							"getAllDepositsTotal()": {
								"notice": "Returns the total amount of ETH deposited across all rounds"
							},
							"getCurrentRoundId()": {
								"notice": "Returns the current active round ID"
							},
							"getDepositTotal()": {
								"notice": "Returns the total amount of ETH deposited in the current round"
							},
							"getDepositTotal(uint256)": {
								"notice": "Returns the total amount of ETH deposited in a specific round"
							},
							"getShareToken()": {
								"notice": "返回权益代币地址"
							},
							"getTotalWeight()": {
								"notice": "Returns the total weight of all participants in the current round"
							},
							"getTotalWeight(uint256)": {
								"notice": "Returns the total weight of all participants in a specific round"
							},
							"getUser(uint256)": {
								"notice": "Returns the user address at the given index in the current round"
							},
							"getUser(uint256,uint256)": {
								"notice": "Returns the user address at the given index in a specific round"
							},
							"getUserCount()": {
								"notice": "Returns the total number of participants in the current round"
							},
							"getUserCount(uint256)": {
								"notice": "Returns the total number of participants in a specific round"
							},
							"initialize()": {
								"notice": "Initialize the contract"
							},
							"setLottery(address)": {
								"notice": "Sets the lottery contract address"
							},
							"setPrizePool(address)": {
								"notice": "Sets the prize pool contract address"
							},
							"setRouter(address)": {
								"notice": "Sets the router contract address"
							},
							"setShareToken(address)": {
								"notice": "Sets the share token address"
							},
							"setWETH(address)": {
								"notice": "Sets the WETH token address"
							},
							"setYieldAggregator(address)": {
								"notice": "Sets the yield aggregator address"
							},
							"startNewRound(uint256)": {
								"notice": "Starts a new lottery round"
							},
							"userDeposits(address)": {
								"notice": "Returns the deposit information for a specific user in the current round"
							},
							"userDeposits(address,uint256)": {
								"notice": "Returns the deposit information for a specific user in a specific round"
							},
							"weth()": {
								"notice": "Returns the WETH token address"
							},
							"withdraw()": {
								"notice": "Allows users to withdraw all their deposited ETH from the current round"
							},
							"withdraw(uint256)": {
								"notice": "Allows users to withdraw all their deposited ETH from a specific round"
							}
						},
						"notice": "Interface for the Vault contract that manages user deposits and withdrawals",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							723
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 724,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"668:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 723,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								723
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nameLocations": [
													"1712:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nameLocations": [
													"1978:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:1"
									},
									"scope": 182,
									"src": "296:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "453:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 182,
									"src": "434:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 182,
									"src": "715:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 182,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 182,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2241:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:1"
									},
									"scope": 182,
									"src": "2168:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 172,
									"name": "Transfer",
									"nameLocation": "2461:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2492:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:1"
									},
									"src": "2455:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 181,
									"name": "Approval",
									"nameLocation": "2692:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2724:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:1"
									},
									"src": "2686:78:1"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": [],
							"usedEvents": [
								172,
								181
							]
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							701
						],
						"IERC20": [
							182
						],
						"SafeERC20": [
							406
						]
					},
					"id": 407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 183,
							"src": "125:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 407,
							"sourceUnit": 702,
							"src": "149:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 187,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 406,
							"linearizedBaseContracts": [
								406
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 190,
									"libraryName": {
										"id": 188,
										"name": "Address",
										"nameLocations": [
											"675:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 701,
										"src": "675:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:2",
									"typeName": {
										"id": 189,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "803:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 201,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "833:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 204,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "863:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$182",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "869:8:2",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 131,
																		"src": "863:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "878:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 207,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "888:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 208,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "892:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 202,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "844:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 200,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "813:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "813:86:2"
											}
										]
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "732:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 192,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 191,
														"name": "IERC20",
														"nameLocations": [
															"732:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "732:6:2"
													},
													"referencedDeclaration": 182,
													"src": "732:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "754:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "774:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:2"
									},
									"scope": 406,
									"src": "701:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1040:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1070:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 229,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 216,
																			"src": "1100:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$182",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1106:12:2",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 163,
																		"src": "1100:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1119:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 232,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1129:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 233,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "1135:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 234,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "1139:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1081:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1050:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:2"
											}
										]
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "947:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "IERC20",
														"nameLocations": [
															"947:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "947:6:2"
													},
													"referencedDeclaration": 182,
													"src": "947:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "969:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "991:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1011:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:2"
									},
									"scope": 406,
									"src": "912:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "1519:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 251,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "1768:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 254,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 259,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$406",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$406",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 258,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 257,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 260,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 261,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 245,
																					"src": "1815:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 255,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 243,
																					"src": "1784:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$182",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1790:9:2",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 141,
																				"src": "1784:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 265,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "1939:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 274,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "1969:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$182",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1975:7:2",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 151,
																		"src": "1969:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1983:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 277,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 245,
																	"src": "1993:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 278,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "2002:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 272,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1950:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 270,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "1919:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:2"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1443:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 241,
														"name": "IERC20",
														"nameLocations": [
															"1443:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "1443:6:2"
													},
													"referencedDeclaration": 182,
													"src": "1443:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1465:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:2"
									},
									"scope": 406,
									"src": "1413:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2138:194:2",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "2148:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 299,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$406",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$406",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 297,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 301,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "2202:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 295,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "2171:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$182",
																	"typeString": "contract IERC20"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2177:9:2",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 141,
															"src": "2171:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 303,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2213:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "2248:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 310,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "2278:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$182",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2284:7:2",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 151,
																		"src": "2278:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2292:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 313,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "2302:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 314,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2311:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 308,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2259:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 306,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "2228:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:2"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2062:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 285,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 284,
														"name": "IERC20",
														"nameLocations": [
															"2062:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "2062:6:2"
													},
													"referencedDeclaration": 182,
													"src": "2062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2084:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2109:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:2"
									},
									"scope": 406,
									"src": "2022:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "2454:370:2",
										"statements": [
											{
												"id": 365,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:2",
												"statements": [
													{
														"assignments": [
															330
														],
														"declarations": [
															{
																"constant": false,
																"id": 330,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 365,
																"src": "2488:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 329,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 339,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 335,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$406",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$406",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 333,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 337,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "2542:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 331,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "2511:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2517:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 141,
																"src": "2511:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 341,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "2572:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 342,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "2588:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 340,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 346,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:2"
													},
													{
														"assignments": [
															348
														],
														"declarations": [
															{
																"constant": false,
																"id": 348,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 365,
																"src": "2653:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 347,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 352,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 349,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "2676:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 350,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "2691:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 354,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "2730:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 357,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 322,
																					"src": "2760:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$182",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2766:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 151,
																				"src": "2760:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2774:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 360,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 324,
																			"src": "2784:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 361,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 348,
																			"src": "2793:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 355,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2741:18:2",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 353,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "2710:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 364,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:2"
													}
												]
											}
										]
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2378:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 321,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 320,
														"name": "IERC20",
														"nameLocations": [
															"2378:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "2378:6:2"
													},
													"referencedDeclaration": 182,
													"src": "2378:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2400:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2425:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:2"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:2"
									},
									"scope": 406,
									"src": "2338:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "3277:636:2",
										"statements": [
											{
												"assignments": [
													377
												],
												"declarations": [
													{
														"constant": false,
														"id": 377,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 404,
														"src": "3626:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 376,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "3680:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 380,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "3660:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 378,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3667:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 495,
														"src": "3652:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3735:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3746:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 403,
												"nodeType": "IfStatement",
												"src": "3731:176:2",
												"trueBody": {
													"id": 402,
													"nodeType": "Block",
													"src": "3758:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 394,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "3830:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 396,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 395,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 397,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 392,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3823:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 391,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 401,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "3236:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$182",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 369,
														"name": "IERC20",
														"nameLocations": [
															"3236:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 182,
														"src": "3236:6:2"
													},
													"referencedDeclaration": 182,
													"src": "3236:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "3250:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:2"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:2"
									},
									"scope": 406,
									"src": "3207:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 407,
							"src": "645:3270:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:3816:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							701
						]
					},
					"id": 702,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 408,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 409,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 701,
							"linearizedBaseContracts": [
								701
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 417,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 416,
												"id": 422,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 701,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 435,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 433,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 438,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 457,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 701,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "3555:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 469,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3585:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "3593:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 468,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															475,
															495
														],
														"referencedDeclaration": 495,
														"src": "3572:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 467,
												"id": 473,
												"nodeType": "Return",
												"src": "3565:67:3"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 701,
									"src": "3466:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "4008:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4047:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "4055:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 491,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4064:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 487,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															515,
															565
														],
														"referencedDeclaration": 565,
														"src": "4025:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 486,
												"id": 493,
												"nodeType": "Return",
												"src": "4018:59:3"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:3"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:3"
									},
									"scope": 701,
									"src": "3861:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4589:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 508,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "4628:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "4636:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 510,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4642:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 507,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															515,
															565
														],
														"referencedDeclaration": 565,
														"src": "4606:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 506,
												"id": 513,
												"nodeType": "Return",
												"src": "4599:94:3"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4486:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4510:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4537:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:3"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4575:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:3"
									},
									"scope": 701,
									"src": "4446:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "5127:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 532,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$701",
																				"typeString": "library Address"
																			}
																		],
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 530,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5159:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 535,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "5170:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 542,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "5247:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 541,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "5236:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:3"
											},
											{
												"assignments": [
													548,
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "5300:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 547,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "5314:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 549,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [
														{
															"id": 555,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 551,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "5341:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5348:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 553,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "5360:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "5406:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 560,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 561,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "5427:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 558,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5389:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 528,
												"id": 563,
												"nodeType": "Return",
												"src": "5382:58:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "4988:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5012:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5062:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:3"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5113:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:3"
									},
									"scope": 701,
									"src": "4948:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "5724:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "5760:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "5768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 575,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															582,
															617
														],
														"referencedDeclaration": 617,
														"src": "5741:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 574,
												"id": 580,
												"nodeType": "Return",
												"src": "5734:80:3"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "5652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "5668:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "5710:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:3"
									},
									"scope": 701,
									"src": "5624:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "6163:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 596,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "6192:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 595,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "6181:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:3"
											},
											{
												"assignments": [
													602,
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 602,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 616,
														"src": "6252:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 601,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 616,
														"src": "6266:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 603,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 609,
												"initialValue": {
													"arguments": [
														{
															"id": 607,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "6311:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 605,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "6293:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6300:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 611,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "6350:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 612,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "6359:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 613,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "6371:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 610,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6333:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 593,
												"id": 615,
												"nodeType": "Return",
												"src": "6326:58:3"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6042:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6066:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6093:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 588,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:3"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6149:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:3"
									},
									"scope": 701,
									"src": "6005:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "6667:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 628,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "6705:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "6713:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 627,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															634,
															669
														],
														"referencedDeclaration": 669,
														"src": "6684:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 626,
												"id": 632,
												"nodeType": "Return",
												"src": "6677:84:3"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "6600:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "6616:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:3"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "6653:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:3"
									},
									"scope": 701,
									"src": "6570:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "7109:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 648,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "7138:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 647,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "7127:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 646,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:3"
											},
											{
												"assignments": [
													654,
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "7200:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 653,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "7214:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 655,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 661,
												"initialValue": {
													"arguments": [
														{
															"id": 659,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "7261:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 657,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "7241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7248:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "7300:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 664,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "7309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 665,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "7321:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 662,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "7283:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 645,
												"id": 667,
												"nodeType": "Return",
												"src": "7276:58:3"
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "6993:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "7017:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 638,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "7044:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 640,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:3"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "7095:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:3"
									},
									"scope": 701,
									"src": "6954:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "7721:532:3",
										"statements": [
											{
												"condition": {
													"id": 681,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 672,
													"src": "7735:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "7792:455:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 685,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "7876:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7887:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 695,
																"nodeType": "Block",
																"src": "8184:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 692,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 676,
																					"src": "8209:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 691,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 694,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:3"
																	}
																]
															},
															"id": 696,
															"nodeType": "IfStatement",
															"src": "7872:365:3",
															"trueBody": {
																"id": 690,
																"nodeType": "Block",
																"src": "7899:279:3",
																"statements": [
																	{
																		"AST": {
																			"nativeSrc": "8019:145:3",
																			"nodeType": "YulBlock",
																			"src": "8019:145:3",
																			"statements": [
																				{
																					"nativeSrc": "8041:40:3",
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nativeSrc": "8070:10:3",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "8064:5:3",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:3"
																						},
																						"nativeSrc": "8064:17:3",
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nativeSrc": "8045:15:3",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "8113:2:3",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nativeSrc": "8117:10:3",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8109:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:3"
																								},
																								"nativeSrc": "8109:19:3",
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nativeSrc": "8130:15:3",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "8102:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:3"
																						},
																						"nativeSrc": "8102:44:3",
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:3"
																					},
																					"nativeSrc": "8102:44:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:3"
																				}
																			]
																		},
																		"evmVersion": "prague",
																		"externalReferences": [
																			{
																				"declaration": 674,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 674,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 689,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 698,
												"nodeType": "IfStatement",
												"src": "7731:516:3",
												"trueBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "7744:42:3",
													"statements": [
														{
															"expression": {
																"id": 682,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "7765:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 680,
															"id": 683,
															"nodeType": "Return",
															"src": "7758:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7596:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7618:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7651:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:3"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7707:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:3"
									},
									"scope": 701,
									"src": "7561:692:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 702,
							"src": "194:8061:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:8155:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							723
						]
					},
					"id": 724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 703,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 704,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 723,
							"linearizedBaseContracts": [
								723
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 709,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 708,
												"id": 711,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 723,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 718,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 717,
												"id": 720,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 723,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 724,
							"src": "608:235:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"contracts/YieldAggregator.sol": {
				"ast": {
					"absolutePath": "contracts/YieldAggregator.sol",
					"exportedSymbols": {
						"Address": [
							701
						],
						"Context": [
							723
						],
						"IComet": [
							1037
						],
						"IERC20": [
							182
						],
						"IPrizePool": [
							1125
						],
						"IVault": [
							1389
						],
						"Ownable": [
							104
						],
						"SafeERC20": [
							406
						],
						"YieldAggregator": [
							993
						]
					},
					"id": 994,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 725,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 994,
							"sourceUnit": 407,
							"src": "58:65:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 994,
							"sourceUnit": 105,
							"src": "124:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IComet.sol",
							"file": "./interfaces/IComet.sol",
							"id": 728,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 994,
							"sourceUnit": 1038,
							"src": "178:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IVault.sol",
							"file": "./interfaces/IVault.sol",
							"id": 729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 994,
							"sourceUnit": 1390,
							"src": "212:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IPrizePool.sol",
							"file": "./interfaces/IPrizePool.sol",
							"id": 730,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 994,
							"sourceUnit": 1126,
							"src": "246:37:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 732,
										"name": "Ownable",
										"nameLocations": [
											"486:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "486:7:5"
									},
									"id": 733,
									"nodeType": "InheritanceSpecifier",
									"src": "486:7:5"
								}
							],
							"canonicalName": "YieldAggregator",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 731,
								"nodeType": "StructuredDocumentation",
								"src": "285:173:5",
								"text": "@title Yield Aggregator Contract\n @notice Manages deposits and withdrawals to Compound protocol for yield generation\n @dev Implements ReentrancyGuard for security"
							},
							"fullyImplemented": true,
							"id": 993,
							"linearizedBaseContracts": [
								993,
								104,
								723
							],
							"name": "YieldAggregator",
							"nameLocation": "467:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 737,
									"libraryName": {
										"id": 734,
										"name": "SafeERC20",
										"nameLocations": [
											"506:9:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 406,
										"src": "506:9:5"
									},
									"nodeType": "UsingForDirective",
									"src": "500:27:5",
									"typeName": {
										"id": 736,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 735,
											"name": "IERC20",
											"nameLocations": [
												"520:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 182,
											"src": "520:6:5"
										},
										"referencedDeclaration": 182,
										"src": "520:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$182",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "ba3e9c12",
									"id": 740,
									"mutability": "immutable",
									"name": "comet",
									"nameLocation": "557:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 993,
									"src": "533:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IComet_$1037",
										"typeString": "contract IComet"
									},
									"typeName": {
										"id": 739,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 738,
											"name": "IComet",
											"nameLocations": [
												"533:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1037,
											"src": "533:6:5"
										},
										"referencedDeclaration": 1037,
										"src": "533:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IComet_$1037",
											"typeString": "contract IComet"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fc8cef3",
									"id": 743,
									"mutability": "immutable",
									"name": "weth",
									"nameLocation": "593:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 993,
									"src": "569:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$182",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 742,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 741,
											"name": "IERC20",
											"nameLocations": [
												"569:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 182,
											"src": "569:6:5"
										},
										"referencedDeclaration": 182,
										"src": "569:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$182",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fbfa77cf",
									"id": 746,
									"mutability": "mutable",
									"name": "vault",
									"nameLocation": "617:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 993,
									"src": "603:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IVault_$1389",
										"typeString": "contract IVault"
									},
									"typeName": {
										"id": 745,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 744,
											"name": "IVault",
											"nameLocations": [
												"603:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1389,
											"src": "603:6:5"
										},
										"referencedDeclaration": 1389,
										"src": "603:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IVault_$1389",
											"typeString": "contract IVault"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "719ce73e",
									"id": 749,
									"mutability": "mutable",
									"name": "prizePool",
									"nameLocation": "646:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 993,
									"src": "628:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPrizePool_$1125",
										"typeString": "contract IPrizePool"
									},
									"typeName": {
										"id": 748,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 747,
											"name": "IPrizePool",
											"nameLocations": [
												"628:10:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1125,
											"src": "628:10:5"
										},
										"referencedDeclaration": 1125,
										"src": "628:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPrizePool_$1125",
											"typeString": "contract IPrizePool"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "662:56:5",
										"text": "@notice Events for tracking deposits and withdrawals"
									},
									"eventSelector": "73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca",
									"id": 758,
									"name": "Deposited",
									"nameLocation": "729:9:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "755:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "739:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "769:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "761:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "785:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "777:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:57:5"
									},
									"src": "723:73:5"
								},
								{
									"anonymous": false,
									"eventSelector": "92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6",
									"id": 766,
									"name": "Withdrawn",
									"nameLocation": "807:9:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "833:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "817:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "847:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "839:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "863:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "855:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:57:5"
									},
									"src": "801:73:5"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "959:344:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "_weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "977:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "994:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "986:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "986:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "986:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "977:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420574554482061646472657373",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "998:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ee4a6a82d9278f95be513daf11d69bad25e4ed692a006dbaab59533918f05b7",
																"typeString": "literal_string \"Invalid WETH address\""
															},
															"value": "Invalid WETH address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ee4a6a82d9278f95be513daf11d69bad25e4ed692a006dbaab59533918f05b7",
																"typeString": "literal_string \"Invalid WETH address\""
															}
														],
														"id": 777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "969:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "969:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "969:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 788,
																"name": "_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "1039:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1057:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1049:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 789,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1049:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1049:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1039:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964205661756c742061646472657373",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1061:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0f7af5ec39e4ba0915c75caea49a4fa955be0c55f1159b344ecc614aa809565",
																"typeString": "literal_string \"Invalid Vault address\""
															},
															"value": "Invalid Vault address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0f7af5ec39e4ba0915c75caea49a4fa955be0c55f1159b344ecc614aa809565",
																"typeString": "literal_string \"Invalid Vault address\""
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1031:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "1031:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 798,
																"name": "_prizePool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "1103:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1125:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1117:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1117:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1117:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1103:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964205072697a65506f6f6c2061646472657373",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1129:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_684835832018501d879b02b23ad999bd10db49254839d17ce4d507d3fcb380fb",
																"typeString": "literal_string \"Invalid PrizePool address\""
															},
															"value": "Invalid PrizePool address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_684835832018501d879b02b23ad999bd10db49254839d17ce4d507d3fcb380fb",
																"typeString": "literal_string \"Invalid PrizePool address\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1095:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1095:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "1095:62:5"
											},
											{
												"expression": {
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 807,
														"name": "weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "1168:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$182",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 809,
																"name": "_weth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "1182:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 808,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "1175:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$182_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1175:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$182",
															"typeString": "contract IERC20"
														}
													},
													"src": "1168:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$182",
														"typeString": "contract IERC20"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "1168:20:5"
											},
											{
												"expression": {
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 813,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "1198:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVault_$1389",
															"typeString": "contract IVault"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 815,
																"name": "_vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "1213:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 814,
															"name": "IVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "1206:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IVault_$1389_$",
																"typeString": "type(contract IVault)"
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1206:14:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVault_$1389",
															"typeString": "contract IVault"
														}
													},
													"src": "1198:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVault_$1389",
														"typeString": "contract IVault"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "1198:22:5"
											},
											{
												"expression": {
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 819,
														"name": "prizePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1230:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPrizePool_$1125",
															"typeString": "contract IPrizePool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 821,
																"name": "_prizePool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "1253:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 820,
															"name": "IPrizePool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "1242:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPrizePool_$1125_$",
																"typeString": "type(contract IPrizePool)"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1242:22:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPrizePool_$1125",
															"typeString": "contract IPrizePool"
														}
													},
													"src": "1230:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPrizePool_$1125",
														"typeString": "contract IPrizePool"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "1230:34:5"
											},
											{
												"expression": {
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 825,
														"name": "comet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "1274:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IComet_$1037",
															"typeString": "contract IComet"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 827,
																"name": "_comet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "1289:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 826,
															"name": "IComet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "1282:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IComet_$1037_$",
																"typeString": "type(contract IComet)"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1282:14:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IComet_$1037",
															"typeString": "contract IComet"
														}
													},
													"src": "1274:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IComet_$1037",
														"typeString": "contract IComet"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "1274:22:5"
											}
										]
									},
									"id": 832,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "_weth",
												"nameLocation": "900:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "892:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "_vault",
												"nameLocation": "915:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "907:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "_prizePool",
												"nameLocation": "931:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "923:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "_comet",
												"nameLocation": "951:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "943:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:67:5"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:0:5"
									},
									"scope": 993,
									"src": "880:423:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "1499:184:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 836,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1530:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1534:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1530:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 840,
																			"name": "prizePool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "1552:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IPrizePool_$1125",
																				"typeString": "contract IPrizePool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IPrizePool_$1125",
																				"typeString": "contract IPrizePool"
																			}
																		],
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1544:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 838,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1544:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1544:18:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1530:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 843,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1566:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1570:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1566:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 847,
																			"name": "vault",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 746,
																			"src": "1588:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IVault_$1389",
																				"typeString": "contract IVault"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IVault_$1389",
																				"typeString": "contract IVault"
																			}
																		],
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1580:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 845,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1580:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1580:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1566:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1530:64:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420746865205072697a65506f6f6c206f72205661756c7420636f6e7472616374",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1608:47:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5200a6cd50ba177a26e933942f313ade4e78d9c2d95fbafb2307c1675897971d",
																"typeString": "literal_string \"Caller is not the PrizePool or Vault contract\""
															},
															"value": "Caller is not the PrizePool or Vault contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5200a6cd50ba177a26e933942f313ade4e78d9c2d95fbafb2307c1675897971d",
																"typeString": "literal_string \"Caller is not the PrizePool or Vault contract\""
															}
														],
														"id": 835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1509:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1509:156:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "1509:156:5"
											},
											{
												"id": 854,
												"nodeType": "PlaceholderStatement",
												"src": "1675:1:5"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "1309:153:5",
										"text": "@notice Restricts function access to Vault or PrizePool contract only\n @dev Modifier to ensure only Vault contract can call certain functions"
									},
									"id": 856,
									"name": "onlyPrizePoolOrVault",
									"nameLocation": "1476:20:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1496:2:5"
									},
									"src": "1467:216:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "1710:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 859,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1728:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1732:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1728:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 863,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 746,
																		"src": "1750:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVault_$1389",
																			"typeString": "contract IVault"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IVault_$1389",
																			"typeString": "contract IVault"
																		}
																	],
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1742:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 861,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1742:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1742:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1728:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420746865205661756c7420636f6e7472616374",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1758:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93e8fb2c8ae53eb4aaeac63b1be674c426bddab336579ae44324a8aa7712a04f",
																"typeString": "literal_string \"Caller is not the Vault contract\""
															},
															"value": "Caller is not the Vault contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93e8fb2c8ae53eb4aaeac63b1be674c426bddab336579ae44324a8aa7712a04f",
																"typeString": "literal_string \"Caller is not the Vault contract\""
															}
														],
														"id": 858,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1720:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1720:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "1720:73:5"
											},
											{
												"id": 869,
												"nodeType": "PlaceholderStatement",
												"src": "1803:1:5"
											}
										]
									},
									"id": 871,
									"name": "onlyVault",
									"nameLocation": "1698:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:2:5"
									},
									"src": "1689:122:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "2126:476:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 882,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "2144:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2153:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2144:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2156:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2136:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2136:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "2136:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 891,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2277:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2277:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 895,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2297:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_YieldAggregator_$993",
																		"typeString": "contract YieldAggregator"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_YieldAggregator_$993",
																		"typeString": "contract YieldAggregator"
																	}
																],
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2289:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 893,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2289:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2289:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2304:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 888,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "2255:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2260:16:5",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "2255:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$182_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2255:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "2255:56:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 905,
																	"name": "comet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "2383:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IComet_$1037",
																		"typeString": "contract IComet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IComet_$1037",
																		"typeString": "contract IComet"
																	}
																],
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2375:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 903,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2375:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2375:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2391:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 900,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "2358:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2363:11:5",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 283,
														"src": "2358:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$182_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2358:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "2358:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 915,
																	"name": "weth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "2468:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2460:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 913,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2460:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2460:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2475:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 910,
															"name": "comet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "2447:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IComet_$1037",
																"typeString": "contract IComet"
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2453:6:5",
														"memberName": "supply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1036,
														"src": "2447:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2447:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "2447:35:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 921,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2538:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2542:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2538:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2550:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 924,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2558:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2564:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2558:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 920,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "2528:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2528:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "EmitStatement",
												"src": "2523:51:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2591:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 880,
												"id": 929,
												"nodeType": "Return",
												"src": "2584:11:5"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1817:237:5",
										"text": "@notice Deposits WETH into Compound to earn interest\n @dev Uses SafeERC20 for transferFrom and requires Vault authorization\n @param amount Amount of WETH to deposit\n @return success True if deposit was successful"
									},
									"functionSelector": "b6b55f25",
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 877,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 876,
												"name": "onlyVault",
												"nameLocations": [
													"2101:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 871,
												"src": "2101:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2101:9:5"
										}
									],
									"name": "deposit",
									"nameLocation": "2068:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2084:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "2076:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2076:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2075:16:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "2120:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2120:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2119:6:5"
									},
									"scope": 993,
									"src": "2059:543:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "2916:370:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 942,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "2934:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2943:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2934:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2946:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 941,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2926:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "2926:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 953,
																	"name": "weth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "3066:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$182",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3058:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 951,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3058:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3058:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "3073:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 948,
															"name": "comet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "3043:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IComet_$1037",
																"typeString": "contract IComet"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3049:8:5",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1028,
														"src": "3043:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3043:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "3043:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 961,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3144:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3148:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3144:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 963,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "3156:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 958,
															"name": "weth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "3126:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$182",
																"typeString": "contract IERC20"
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3131:12:5",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 213,
														"src": "3126:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$182_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3126:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "3126:37:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 967,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3222:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3226:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3222:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "3234:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 970,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3242:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3248:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3242:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 966,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "3212:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3212:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "EmitStatement",
												"src": "3207:51:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3275:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 940,
												"id": 975,
												"nodeType": "Return",
												"src": "3268:11:5"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "2608:224:5",
										"text": "@notice Withdraws WETH from Compound\n @dev Can only be called by authorized contracts (PrizePool or Vault)\n @param amount Amount of WETH to withdraw\n @return success True if withdrawal was successful"
									},
									"functionSelector": "2e1a7d4d",
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 937,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 936,
												"name": "onlyPrizePoolOrVault",
												"nameLocations": [
													"2880:20:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 856,
												"src": "2880:20:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2880:20:5"
										}
									],
									"name": "withdraw",
									"nameLocation": "2846:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2863:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "2855:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:16:5"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "2910:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2910:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2909:6:5"
									},
									"scope": 993,
									"src": "2837:449:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "3454:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 987,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3495:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_YieldAggregator_$993",
																		"typeString": "contract YieldAggregator"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_YieldAggregator_$993",
																		"typeString": "contract YieldAggregator"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3487:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 985,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3487:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 983,
															"name": "comet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "3471:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IComet_$1037",
																"typeString": "contract IComet"
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3477:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1013,
														"src": "3471:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3471:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 982,
												"id": 990,
												"nodeType": "Return",
												"src": "3464:37:5"
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "3292:104:5",
										"text": "@notice Gets the current balance of WETH in Compound\n @return The current balance in Compound"
									},
									"functionSelector": "722713f7",
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3410:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3419:2:5"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "3445:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3444:9:5"
									},
									"scope": 993,
									"src": "3401:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 994,
							"src": "458:3052:5",
							"usedErrors": [],
							"usedEvents": [
								13,
								758,
								766
							]
						}
					],
					"src": "32:3479:5"
				},
				"id": 5
			},
			"contracts/interfaces/IComet.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IComet.sol",
					"exportedSymbols": {
						"IComet": [
							1037
						]
					},
					"id": 1038,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 995,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IComet",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1037,
							"linearizedBaseContracts": [
								1037
							],
							"name": "IComet",
							"nameLocation": "68:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IComet.UserBasic",
									"id": 1006,
									"members": [
										{
											"constant": false,
											"id": 997,
											"mutability": "mutable",
											"name": "principal",
											"nameLocation": "116:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1006,
											"src": "108:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint104",
												"typeString": "uint104"
											},
											"typeName": {
												"id": 996,
												"name": "uint104",
												"nodeType": "ElementaryTypeName",
												"src": "108:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 999,
											"mutability": "mutable",
											"name": "baseTrackingIndex",
											"nameLocation": "142:17:6",
											"nodeType": "VariableDeclaration",
											"scope": 1006,
											"src": "135:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 998,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "135:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1001,
											"mutability": "mutable",
											"name": "baseTrackingAccrued",
											"nameLocation": "176:19:6",
											"nodeType": "VariableDeclaration",
											"scope": 1006,
											"src": "169:26:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1000,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "169:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1003,
											"mutability": "mutable",
											"name": "assetsIn",
											"nameLocation": "212:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1006,
											"src": "205:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1002,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "205:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1005,
											"mutability": "mutable",
											"name": "_reserved",
											"nameLocation": "236:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1006,
											"src": "230:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1004,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "230:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserBasic",
									"nameLocation": "88:9:6",
									"nodeType": "StructDefinition",
									"scope": 1037,
									"src": "81:171:6",
									"visibility": "public"
								},
								{
									"functionSelector": "70a08231",
									"id": 1013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "272:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "290:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "282:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:17:6"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "322:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:9:6"
									},
									"scope": 1037,
									"src": "263:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dc4abafd",
									"id": 1021,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userBasic",
									"nameLocation": "350:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "368:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "360:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "359:17:6"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "400:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserBasic_$1006_memory_ptr",
													"typeString": "struct IComet.UserBasic"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "UserBasic",
														"nameLocations": [
															"400:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1006,
														"src": "400:9:6"
													},
													"referencedDeclaration": 1006,
													"src": "400:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserBasic_$1006_storage_ptr",
														"typeString": "struct IComet.UserBasic"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:18:6"
									},
									"scope": 1037,
									"src": "341:77:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f3fef3a3",
									"id": 1028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "491:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "508:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "500:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "523:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "515:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:31:6"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "539:0:6"
									},
									"scope": 1037,
									"src": "482:58:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "546:152:6",
										"text": "@notice Supply an amount of asset to the protocol\n @param asset The address of the asset to supply\n @param amount The amount to supply"
									},
									"functionSelector": "f2b9fdb8",
									"id": 1036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supply",
									"nameLocation": "712:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "727:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "719:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "742:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "734:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "718:31:6"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:0:6"
									},
									"scope": 1037,
									"src": "703:56:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1038,
							"src": "58:709:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:735:6"
				},
				"id": 6
			},
			"contracts/interfaces/IPrizePool.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPrizePool.sol",
					"exportedSymbols": {
						"IPrizePool": [
							1125
						]
					},
					"id": 1126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1039,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPrizePool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1125,
							"linearizedBaseContracts": [
								1125
							],
							"name": "IPrizePool",
							"nameLocation": "68:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IPrizePool.LotteryInfo",
									"id": 1050,
									"members": [
										{
											"constant": false,
											"id": 1041,
											"mutability": "mutable",
											"name": "winner",
											"nameLocation": "122:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "114:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1040,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "114:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1043,
											"mutability": "mutable",
											"name": "prizeValue",
											"nameLocation": "146:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "138:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1042,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "138:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1045,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "174:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "166:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1044,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "166:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1047,
											"mutability": "mutable",
											"name": "randomNumber",
											"nameLocation": "201:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "193:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1046,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "193:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1049,
											"mutability": "mutable",
											"name": "isClaimed",
											"nameLocation": "228:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1050,
											"src": "223:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1048,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "223:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LotteryInfo",
									"nameLocation": "92:11:7",
									"nodeType": "StructDefinition",
									"scope": 1125,
									"src": "85:159:7",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "256642a903d86ec186d0ad895b74bdbe7f9e5a72db568f4c4d58c2fa38b39e1c",
									"id": 1058,
									"name": "PrizeClaimed",
									"nameLocation": "256:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "285:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "269:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"indexed": true,
												"mutability": "mutable",
												"name": "lotteryId",
												"nameLocation": "309:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "293:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "293:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "328:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "320:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:67:7"
									},
									"src": "250:86:7"
								},
								{
									"anonymous": false,
									"eventSelector": "14914da2bf76024616fbe1859783fcd4dbddcb179b1f3a854949fbf920dcb957",
									"id": 1064,
									"name": "FeeRateUpdated",
									"nameLocation": "347:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldFeeRate",
												"nameLocation": "370:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "362:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFeeRate",
												"nameLocation": "390:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "382:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "361:40:7"
									},
									"src": "341:61:7"
								},
								{
									"anonymous": false,
									"eventSelector": "c472cb3a7a659a876494d66b3063145f279701771d6150b9329c31611ed6405c",
									"id": 1068,
									"name": "FeeCollected",
									"nameLocation": "413:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "434:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "426:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:16:7"
									},
									"src": "407:35:7"
								},
								{
									"anonymous": false,
									"eventSelector": "c50d8ef9b57c270b939cf88365a0e6c8dcf9b867c2b1fe31ec181897e3d6a4db",
									"id": 1074,
									"name": "YieldAggregatorSet",
									"nameLocation": "453:18:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldYieldAggregator",
												"nameLocation": "497:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "481:34:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"indexed": true,
												"mutability": "mutable",
												"name": "newYieldAggregator",
												"nameLocation": "541:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "525:34:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:94:7"
									},
									"src": "447:119:7"
								},
								{
									"anonymous": false,
									"eventSelector": "e7ae49f883c825b05681b3e00e8be6fdea9ed2a8a45e4c6ecb9390fc44cce615",
									"id": 1078,
									"name": "VaultSet",
									"nameLocation": "577:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "602:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "586:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:23:7"
									},
									"src": "571:38:7"
								},
								{
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "615:124:7",
										"text": "@notice Allows a winner to claim their ETH prize\n @param lotteryId The ID of the lottery round to claim prize for"
									},
									"functionSelector": "d7098154",
									"id": 1084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimPrize",
									"nameLocation": "753:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "lotteryId",
												"nameLocation": "772:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "764:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:19:7"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:0:7"
									},
									"scope": 1125,
									"src": "744:48:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "798:122:7",
										"text": "@notice Gets the current prize pool amount in ETH\n @return The current amount of ETH in the prize pool (in wei)"
									},
									"functionSelector": "f6fe8727",
									"id": 1090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrizePoolAmount",
									"nameLocation": "934:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:2:7"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "978:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:9:7"
									},
									"scope": 1125,
									"src": "925:62:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "993:38:7",
										"text": "@notice Adds ETH to the prize pool"
									},
									"functionSelector": "b3ede13f",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addToPrizePool",
									"nameLocation": "1045:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1059:2:7"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1078:0:7"
									},
									"scope": 1125,
									"src": "1036:43:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "1085:114:7",
										"text": "@notice Sets the fee rate for prize claims\n @param _feeRate The new fee rate in basis points (1% = 100)"
									},
									"functionSelector": "45596e2e",
									"id": 1100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeRate",
									"nameLocation": "1213:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "_feeRate",
												"nameLocation": "1232:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1224:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1223:18:7"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:7"
									},
									"scope": 1125,
									"src": "1204:47:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "1257:82:7",
										"text": "@notice Gets the current fee rate\n @return The fee rate in basis points"
									},
									"functionSelector": "978bbdb9",
									"id": 1106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeRate",
									"nameLocation": "1353:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:7"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "1386:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1386:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:9:7"
									},
									"scope": 1125,
									"src": "1344:51:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "1401:113:7",
										"text": "@notice Sets the yield aggregator address\n @param _yieldAggregator The address of the yield aggregator"
									},
									"functionSelector": "992b48de",
									"id": 1112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setYieldAggregator",
									"nameLocation": "1528:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "_yieldAggregator",
												"nameLocation": "1555:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1547:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1546:26:7"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:7"
									},
									"scope": 1125,
									"src": "1519:63:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "1588:81:7",
										"text": "@notice Sets the vault address\n @param _vault The address of the vault"
									},
									"functionSelector": "6817031b",
									"id": 1118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setVault",
									"nameLocation": "1683:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "_vault",
												"nameLocation": "1700:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "1692:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1691:16:7"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1716:0:7"
									},
									"scope": 1125,
									"src": "1674:43:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1119,
										"nodeType": "StructuredDocumentation",
										"src": "1723:90:7",
										"text": "@notice Sets the WETH token address\n @param _weth The address of the WETH token"
									},
									"functionSelector": "5b769f3c",
									"id": 1124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setWETH",
									"nameLocation": "1827:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "_weth",
												"nameLocation": "1843:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1835:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:15:7"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1858:0:7"
									},
									"scope": 1125,
									"src": "1818:41:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1126,
							"src": "58:1803:7",
							"usedErrors": [],
							"usedEvents": [
								1058,
								1064,
								1068,
								1074,
								1078
							]
						}
					],
					"src": "32:1830:7"
				},
				"id": 7
			},
			"contracts/interfaces/IVault.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IVault.sol",
					"exportedSymbols": {
						"IVault": [
							1389
						]
					},
					"id": 1390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1127,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1128,
								"nodeType": "StructuredDocumentation",
								"src": "58:116:8",
								"text": "@title IVault Interface\n @notice Interface for the Vault contract that manages user deposits and withdrawals"
							},
							"fullyImplemented": false,
							"id": 1389,
							"linearizedBaseContracts": [
								1389
							],
							"name": "IVault",
							"nameLocation": "184:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IVault.Deposit",
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "197:52:8",
										"text": "@notice Struct to store user deposit information"
									},
									"id": 1136,
									"members": [
										{
											"constant": false,
											"id": 1131,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "287:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "279:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1130,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "279:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1133,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "310:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "303:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1132,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "303:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1135,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "336:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "329:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1134,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "329:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nameLocation": "261:7:8",
									"nodeType": "StructDefinition",
									"scope": 1389,
									"src": "254:95:8",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "355:255:8",
										"text": "@notice Emitted when a user makes a deposit\n @param user The address of the user who made the deposit\n @param amount The amount deposited\n @param timestamp The time of the deposit\n @param roundId The ID of the lottery round"
									},
									"eventSelector": "91ede45f04a37a7c170f5c1207df3b6bc748dc1e04ad5e917a241d0f52feada3",
									"id": 1147,
									"name": "Deposited",
									"nameLocation": "621:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "647:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "631:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "661:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "653:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "677:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "669:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "696:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "688:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:74:8"
									},
									"src": "615:90:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "711:269:8",
										"text": "@notice Emitted when a user withdraws their deposit\n @param user The address of the user who made the withdrawal\n @param amount The amount withdrawn\n @param timestamp The time of the withdrawal\n @param roundId The ID of the lottery round"
									},
									"eventSelector": "75e161b3e824b114fc1a33274bd7091918dd4e639cede50b78b15a4eea956a21",
									"id": 1158,
									"name": "Withdrawn",
									"nameLocation": "991:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1017:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "1001:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1031:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "1023:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1047:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "1039:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "1066:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "1058:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1000:74:8"
									},
									"src": "985:90:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "1081:274:8",
										"text": "@notice Emitted when a shortfall is covered by withdrawing from yield aggregator\n @param user The address of the user who triggered the shortfall\n @param amount The amount of the shortfall that was covered\n @param roundId The ID of the lottery round"
									},
									"eventSelector": "5aa0d8ff88bde1cea94e7113e36813ebbacf59d3d340f322b70f2fe8db236065",
									"id": 1167,
									"name": "ShortfallCovered",
									"nameLocation": "1366:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1399:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1383:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1413:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1405:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"indexed": false,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "1429:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1421:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:55:8"
									},
									"src": "1360:78:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "1444:170:8",
										"text": "@notice Emitted when a fee is deposited to the yield aggregator\n @param amount The amount of the fee deposited\n @param timestamp The time of the deposit"
									},
									"eventSelector": "438640be9558058e47957699bdabaefce31bf0b8662a30791d4fb0e8c76df723",
									"id": 1174,
									"name": "FeeDeposited",
									"nameLocation": "1625:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1646:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1638:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1638:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1662:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1654:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1637:35:8"
									},
									"src": "1619:54:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "1679:225:8",
										"text": "@notice Emitted when a new round is started\n @param roundId The ID of the new round\n @param timestamp The timestamp when the round was started\n @param drawTimestamp The expected timestamp for the draw"
									},
									"eventSelector": "b0b0c60f0267584d50a65485b5eff6babad43c5727703515fde33bb545b19114",
									"id": 1183,
									"name": "NewRoundStarted",
									"nameLocation": "1915:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"indexed": true,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "1947:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1931:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1931:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1964:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1956:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"indexed": false,
												"mutability": "mutable",
												"name": "drawTimestamp",
												"nameLocation": "1983:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "1975:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:67:8"
									},
									"src": "1909:89:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "2004:240:8",
										"text": "@notice Emitted when share tokens are minted\n @param user The address of the user who received the minted tokens\n @param amount The amount of tokens minted\n @param timestamp The timestamp when the tokens were minted"
									},
									"eventSelector": "54cd8e1de57960308b5925f1da718aab59a6f6a6b5162f568d15678ffd323dda",
									"id": 1192,
									"name": "ShareTokenMinted",
									"nameLocation": "2255:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2288:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "2272:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2302:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "2294:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2294:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2318:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "2310:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2271:57:8"
									},
									"src": "2249:80:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "2335:165:8",
										"text": "@notice Emitted when share tokens are burned\n @param amount The amount of tokens burned\n @param timestamp The timestamp when the tokens were burned"
									},
									"eventSelector": "df8087f44f1f81d8269ba11060b035cb41da0a16c24252a0eb34592a0dba9e53",
									"id": 1199,
									"name": "ShareTokenBurned",
									"nameLocation": "2511:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2536:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "2528:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2528:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2552:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "2544:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2527:35:8"
									},
									"src": "2505:58:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "2569:196:8",
										"text": "@notice Emitted when yield aggregator is set\n @param oldYieldAggregator The address of the old yield aggregator\n @param newYieldAggregator The address of the new yield aggregator"
									},
									"eventSelector": "c50d8ef9b57c270b939cf88365a0e6c8dcf9b867c2b1fe31ec181897e3d6a4db",
									"id": 1206,
									"name": "YieldAggregatorSet",
									"nameLocation": "2776:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldYieldAggregator",
												"nameLocation": "2820:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2804:34:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2804:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"indexed": true,
												"mutability": "mutable",
												"name": "newYieldAggregator",
												"nameLocation": "2864:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "2848:34:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2848:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2794:94:8"
									},
									"src": "2770:119:8"
								},
								{
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "2895:105:8",
										"text": "@notice Sets the lottery contract address\n @param _lottery The address of the lottery contract"
									},
									"functionSelector": "f298083b",
									"id": 1212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLottery",
									"nameLocation": "3014:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "_lottery",
												"nameLocation": "3033:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "3025:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3024:18:8"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3051:0:8"
									},
									"scope": 1389,
									"src": "3005:47:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "3058:102:8",
										"text": "@notice Sets the router contract address\n @param _router The address of the router contract"
									},
									"functionSelector": "c0d78655",
									"id": 1218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setRouter",
									"nameLocation": "3174:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "_router",
												"nameLocation": "3192:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "3184:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3184:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3183:17:8"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:8"
									},
									"scope": 1389,
									"src": "3165:45:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "3216:113:8",
										"text": "@notice Sets the prize pool contract address\n @param _prizePool The address of the prize pool contract"
									},
									"functionSelector": "336c6d39",
									"id": 1224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPrizePool",
									"nameLocation": "3343:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "_prizePool",
												"nameLocation": "3364:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "3356:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3356:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3355:20:8"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:8"
									},
									"scope": 1389,
									"src": "3334:51:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "3391:90:8",
										"text": "@notice Sets the WETH token address\n @param _weth The address of the WETH token"
									},
									"functionSelector": "5b769f3c",
									"id": 1230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setWETH",
									"nameLocation": "3495:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "_weth",
												"nameLocation": "3511:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "3503:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3502:15:8"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3526:0:8"
									},
									"scope": 1389,
									"src": "3486:41:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "3533:98:8",
										"text": "@notice Sets the share token address\n @param _shareToken The address of the share token"
									},
									"functionSelector": "40f797bb",
									"id": 1236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setShareToken",
									"nameLocation": "3645:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "_shareToken",
												"nameLocation": "3667:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "3659:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3658:21:8"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3688:0:8"
									},
									"scope": 1389,
									"src": "3636:53:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "3695:113:8",
										"text": "@notice Sets the yield aggregator address\n @param _yieldAggregator The address of the yield aggregator"
									},
									"functionSelector": "992b48de",
									"id": 1242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setYieldAggregator",
									"nameLocation": "3822:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "_yieldAggregator",
												"nameLocation": "3849:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "3841:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3840:26:8"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:8"
									},
									"scope": 1389,
									"src": "3813:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "3882:35:8",
										"text": "@notice Initialize the contract"
									},
									"functionSelector": "8129fc1c",
									"id": 1246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "3931:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3941:2:8"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3952:0:8"
									},
									"scope": 1389,
									"src": "3922:31:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "3959:175:8",
										"text": "@notice Returns the deposit information for a specific user in the current round\n @param user The address of the user\n @return The user's deposit information"
									},
									"functionSelector": "0ba36dcd",
									"id": 1255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userDeposits",
									"nameLocation": "4148:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4169:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "4161:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4161:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4160:14:8"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "4198:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Deposit_$1136_memory_ptr",
													"typeString": "struct IVault.Deposit"
												},
												"typeName": {
													"id": 1252,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1251,
														"name": "Deposit",
														"nameLocations": [
															"4198:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1136,
														"src": "4198:7:8"
													},
													"referencedDeclaration": 1136,
													"src": "4198:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$1136_storage_ptr",
														"typeString": "struct IVault.Deposit"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4197:16:8"
									},
									"scope": 1389,
									"src": "4139:75:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "4220:217:8",
										"text": "@notice Returns the deposit information for a specific user in a specific round\n @param user The address of the user\n @param roundId The ID of the round\n @return The user's deposit information"
									},
									"functionSelector": "08f43333",
									"id": 1266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userDeposits",
									"nameLocation": "4451:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4472:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4464:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "4486:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4478:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:31:8"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4518:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Deposit_$1136_memory_ptr",
													"typeString": "struct IVault.Deposit"
												},
												"typeName": {
													"id": 1263,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1262,
														"name": "Deposit",
														"nameLocations": [
															"4518:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1136,
														"src": "4518:7:8"
													},
													"referencedDeclaration": 1136,
													"src": "4518:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$1136_storage_ptr",
														"typeString": "struct IVault.Deposit"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4517:16:8"
									},
									"scope": 1389,
									"src": "4442:92:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "4540:152:8",
										"text": "@notice Starts a new lottery round\n @dev Can only be called by the lottery contract\n @param newRoundId The ID of the new lottery round"
									},
									"functionSelector": "4615102c",
									"id": 1272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startNewRound",
									"nameLocation": "4706:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "newRoundId",
												"nameLocation": "4728:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "4720:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4720:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4719:20:8"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4748:0:8"
									},
									"scope": 1389,
									"src": "4697:52:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "4755:123:8",
										"text": "@notice Allows users to deposit WETH tokens into the vault for the current round\n @param amount WETH代币数量"
									},
									"functionSelector": "b6b55f25",
									"id": 1278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "4892:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4908:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "4900:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4900:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4899:16:8"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4924:0:8"
									},
									"scope": 1389,
									"src": "4883:42:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "4931:208:8",
										"text": "@notice 允许任何地址代表用户进行WETH代币存款\n @dev 用户需要预先授权调用者使用其WETH代币\n @param user 实际用户地址\n @param amount WETH代币数量"
									},
									"functionSelector": "2f4f21e2",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositFor",
									"nameLocation": "5153:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5172:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "5164:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5164:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5186:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "5178:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5178:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5163:30:8"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5202:0:8"
									},
									"scope": 1389,
									"src": "5144:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "5209:215:8",
										"text": "@notice 将WETH代币费用存入收益聚合器\n @dev 只能由奖池合约调用，发送者必须预先批准本合约使用其WETH\n @param amount 费用金额\n @return 操作是否成功"
									},
									"functionSelector": "111663e8",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositFeeToYieldAggregator",
									"nameLocation": "5438:27:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5474:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "5466:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5466:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5465:16:8"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "5500:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5500:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5499:6:8"
									},
									"scope": 1389,
									"src": "5429:77:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "5512:175:8",
										"text": "@notice Allows users to withdraw all their deposited ETH from the current round\n @dev Will withdraw the full amount of user's deposit and reset their weight to zero"
									},
									"functionSelector": "3ccfd60b",
									"id": 1298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "5701:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5709:2:8"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5720:0:8"
									},
									"scope": 1389,
									"src": "5692:29:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "5727:225:8",
										"text": "@notice Allows users to withdraw all their deposited ETH from a specific round\n @param roundId The ID of the lottery round\n @dev Will withdraw the full amount of user's deposit and reset their weight to zero"
									},
									"functionSelector": "2e1a7d4d",
									"id": 1304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "5966:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "5983:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "5975:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5974:17:8"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6000:0:8"
									},
									"scope": 1389,
									"src": "5957:44:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "6007:138:8",
										"text": "@notice Returns the total number of participants in the current round\n @return The number of users in the current lottery round"
									},
									"functionSelector": "b5cb15f7",
									"id": 1310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCount",
									"nameLocation": "6159:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6171:2:8"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "6197:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6197:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:9:8"
									},
									"scope": 1389,
									"src": "6150:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "6212:190:8",
										"text": "@notice Returns the total number of participants in a specific round\n @param roundId The ID of the lottery round\n @return The number of users in the specified lottery round"
									},
									"functionSelector": "ef6f156e",
									"id": 1318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCount",
									"nameLocation": "6416:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "6437:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "6429:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6429:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6428:17:8"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "6469:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6468:9:8"
									},
									"scope": 1389,
									"src": "6407:71:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "6484:185:8",
										"text": "@notice Returns the user address at the given index in the current round\n @param index The index of the user in the participants array\n @return The address of the user"
									},
									"functionSelector": "b0467deb",
									"id": 1326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUser",
									"nameLocation": "6683:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6699:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "6691:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6691:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6690:15:8"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "6729:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:9:8"
									},
									"scope": 1389,
									"src": "6674:64:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "6744:235:8",
										"text": "@notice Returns the user address at the given index in a specific round\n @param index The index of the user in the participants array\n @param roundId The ID of the lottery round\n @return The address of the user"
									},
									"functionSelector": "c75cd70a",
									"id": 1336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUser",
									"nameLocation": "6993:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7009:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "7001:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7001:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "7024:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "7016:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7000:32:8"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "7056:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7056:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7055:9:8"
									},
									"scope": 1389,
									"src": "6984:81:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "7071:149:8",
										"text": "@notice Returns the total amount of ETH deposited in the current round\n @return The total amount of ETH in the vault for the current round"
									},
									"functionSelector": "5eefdd2b",
									"id": 1342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositTotal",
									"nameLocation": "7234:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7249:2:8"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "7275:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7275:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7274:9:8"
									},
									"scope": 1389,
									"src": "7225:59:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "7290:201:8",
										"text": "@notice Returns the total amount of ETH deposited in a specific round\n @param roundId The ID of the lottery round\n @return The total amount of ETH in the vault for the specified round"
									},
									"functionSelector": "fbee60a0",
									"id": 1350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositTotal",
									"nameLocation": "7505:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "7529:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "7521:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7521:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7520:17:8"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "7561:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7561:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7560:9:8"
									},
									"scope": 1389,
									"src": "7496:74:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "7576:142:8",
										"text": "@notice Returns the total amount of ETH deposited across all rounds\n @return The total amount of ETH in the vault across all rounds"
									},
									"functionSelector": "362b5198",
									"id": 1356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllDepositsTotal",
									"nameLocation": "7732:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7751:2:8"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "7777:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7777:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7776:9:8"
									},
									"scope": 1389,
									"src": "7723:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "7792:152:8",
										"text": "@notice Returns the total weight of all participants in the current round\n @return The sum of all users' weights in the current lottery round"
									},
									"functionSelector": "06aba0e1",
									"id": 1362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalWeight",
									"nameLocation": "7958:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7972:2:8"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "7998:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7998:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7997:9:8"
									},
									"scope": 1389,
									"src": "7949:58:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "8013:204:8",
										"text": "@notice Returns the total weight of all participants in a specific round\n @param roundId The ID of the lottery round\n @return The sum of all users' weights in the specified lottery round"
									},
									"functionSelector": "2434c5bd",
									"id": 1370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalWeight",
									"nameLocation": "8231:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "8254:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "8246:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8245:17:8"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "8286:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:9:8"
									},
									"scope": 1389,
									"src": "8222:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "8301:106:8",
										"text": "@notice Returns the current active round ID\n @return The ID of the current active lottery round"
									},
									"functionSelector": "5727e25d",
									"id": 1376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentRoundId",
									"nameLocation": "8421:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8438:2:8"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "8464:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8464:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8463:9:8"
									},
									"scope": 1389,
									"src": "8412:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "8479:88:8",
										"text": "@notice Returns the WETH token address\n @return The address of the WETH token"
									},
									"functionSelector": "3fc8cef3",
									"id": 1382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "weth",
									"nameLocation": "8581:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:2:8"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "8611:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8611:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8610:9:8"
									},
									"scope": 1389,
									"src": "8572:48:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "8626:71:8",
										"text": "@notice 返回权益代币地址\n @return 权益代币地址"
									},
									"functionSelector": "2bdb0d92",
									"id": 1388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getShareToken",
									"nameLocation": "8711:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8724:2:8"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "8750:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8750:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8749:9:8"
									},
									"scope": 1389,
									"src": "8702:57:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1390,
							"src": "174:8587:8",
							"usedErrors": [],
							"usedEvents": [
								1147,
								1158,
								1167,
								1174,
								1183,
								1192,
								1199,
								1206
							]
						}
					],
					"src": "32:8730:8"
				},
				"id": 8
			}
		}
	}
}