{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_weth",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_vault",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_prizePool",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_comet",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "Deposited",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "Withdrawn",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "comet",
				"outputs": [
					{
						"internalType": "contract IComet",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "deposit",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "prizePool",
				"outputs": [
					{
						"internalType": "contract IPrizePool",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "vault",
				"outputs": [
					{
						"internalType": "contract IVault",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "weth",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Implements ReentrancyGuard for security",
			"kind": "dev",
			"methods": {
				"balanceOf()": {
					"returns": {
						"_0": "The current balance in Compound"
					}
				},
				"deposit(uint256)": {
					"details": "Uses SafeERC20 for transferFrom and requires Vault authorization",
					"params": {
						"amount": "Amount of WETH to deposit"
					},
					"returns": {
						"_0": "success True if deposit was successful"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"withdraw(uint256)": {
					"details": "Can only be called by authorized contracts (PrizePool or Vault)",
					"params": {
						"amount": "Amount of WETH to withdraw"
					},
					"returns": {
						"_0": "success True if withdrawal was successful"
					}
				}
			},
			"title": "Yield Aggregator Contract",
			"version": 1
		},
		"userdoc": {
			"events": {
				"Deposited(address,uint256,uint256)": {
					"notice": "Events for tracking deposits and withdrawals"
				}
			},
			"kind": "user",
			"methods": {
				"balanceOf()": {
					"notice": "Gets the current balance of WETH in Compound"
				},
				"deposit(uint256)": {
					"notice": "Deposits WETH into Compound to earn interest"
				},
				"withdraw(uint256)": {
					"notice": "Withdraws WETH from Compound"
				}
			},
			"notice": "Manages deposits and withdrawals to Compound protocol for yield generation",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/YieldAggregator.sol": "YieldAggregator"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
				"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
			"license": "MIT",
			"urls": [
				"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
				"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
			"license": "MIT",
			"urls": [
				"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
				"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
				"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"contracts/YieldAggregator.sol": {
			"keccak256": "0xfaa74cef08ebb5af25513d1d94d91094462d9ea55fc6206d1239fe3c26a6cb2a",
			"license": "MIT",
			"urls": [
				"bzz-raw://5fe9f6a72df340fed88a7e338dcf6851031af0bc75b549c3c0739026e4589af4",
				"dweb:/ipfs/Qme6ezna9SZk4yw41LsiSpmWqFdRvFvALWozCj2zz23mJd"
			]
		},
		"contracts/interfaces/IComet.sol": {
			"keccak256": "0x8b8bec733af5be89026f2605c43e707c0597b2ccd0bcd4302ddcc2145d8a7d9a",
			"license": "MIT",
			"urls": [
				"bzz-raw://43d5d3aece5c5f7040be81332b85be81caeb3cde6a70708688474a8d30824486",
				"dweb:/ipfs/QmPepU1eRqwpwv34mGe7QDgZYLFtRt77jPt5accB1b8Fte"
			]
		},
		"contracts/interfaces/IPrizePool.sol": {
			"keccak256": "0xa2d76359374e48cb7076bd703ade1c9a70a29eb83a74b90e065d8291661a1a55",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f46bfbeb501245955ec359198ff9e2f15102e74ba22861da8eeb26f2caff8bd",
				"dweb:/ipfs/QmaHjdNjh5KDQJ843DSs9y6kH4bwtZSuXLDFmESWvH25pS"
			]
		},
		"contracts/interfaces/IVault.sol": {
			"keccak256": "0x77dd49e6feaeeebf2338b3cdccc3fa0b895a020f2d938e16b98d2add68401d88",
			"license": "MIT",
			"urls": [
				"bzz-raw://8a2a62ce747b201f0374810f250ba310602cb7287c4271f2372149af7dd61821",
				"dweb:/ipfs/QmazRfZXvAHbBmPuMk6dXHVn3PLjxNX2kmoSLpjGtkoq55"
			]
		}
	},
	"version": 1
}