{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "componentName",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newAddress",
						"type": "address"
					}
				],
				"name": "ComponentUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "DepositRouted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					}
				],
				"name": "PrizeClaimRouted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "WithdrawalInstructionIssued",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					}
				],
				"name": "claimPrize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSystemStatus",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "currentRoundId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "participantCount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalDeposits",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalWeight",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "nextDrawTimestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lastDrawTimestamp",
								"type": "uint256"
							}
						],
						"internalType": "struct ILotteryRouter.SystemStatus",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getUserInfo",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "depositAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "weight",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "depositTimestamp",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "hasDeposit",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "shareTokenBalance",
								"type": "uint256"
							}
						],
						"internalType": "struct ILotteryRouter.UserInfo",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lottery",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "prizePool",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_lottery",
						"type": "address"
					}
				],
				"name": "setLottery",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_prizePool",
						"type": "address"
					}
				],
				"name": "setPrizePool",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_shareToken",
						"type": "address"
					}
				],
				"name": "setShareToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_vault",
						"type": "address"
					}
				],
				"name": "setVault",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "shareToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "triggerDraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "vault",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					}
				],
				"name": "withdrawFromRound",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"claimPrize(uint256)": {
					"params": {
						"roundId": "要领取奖金的轮次ID"
					}
				},
				"deposit(uint256)": {
					"details": "用户需要预先授权Router合约使用其WETH代币",
					"params": {
						"amount": "要存入的WETH代币数量"
					}
				},
				"getSystemStatus()": {
					"returns": {
						"_0": "包含系统当前状态的结构体"
					}
				},
				"getUserInfo(address)": {
					"params": {
						"user": "要查询的用户地址"
					},
					"returns": {
						"_0": "包含用户当前状态的结构体"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"setLottery(address)": {
					"params": {
						"_lottery": "新的彩票合约地址"
					}
				},
				"setPrizePool(address)": {
					"params": {
						"_prizePool": "新的奖池合约地址"
					}
				},
				"setShareToken(address)": {
					"params": {
						"_shareToken": "新的shareToken地址"
					}
				},
				"setVault(address)": {
					"params": {
						"_vault": "新的保险库合约地址"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"triggerDraw()": {
					"details": "通常抽奖由Chainlink Automation自动触发，此函数仅用于测试或紧急情况"
				},
				"withdraw()": {
					"details": "路由层只负责业务调度，校验由业务层处理"
				},
				"withdrawFromRound(uint256)": {
					"details": "路由层只负责业务调度，校验由业务层处理",
					"params": {
						"roundId": "要取款的轮次ID"
					}
				}
			},
			"title": "LotteryRouter",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"claimPrize(uint256)": {
					"notice": "用户领取奖金入口"
				},
				"deposit(uint256)": {
					"notice": "WETH代币存款入口"
				},
				"getSystemStatus()": {
					"notice": "获取当前系统状态"
				},
				"getUserInfo(address)": {
					"notice": "获取用户信息"
				},
				"setLottery(address)": {
					"notice": "设置彩票合约地址"
				},
				"setPrizePool(address)": {
					"notice": "设置奖池合约地址"
				},
				"setShareToken(address)": {
					"notice": "手动设置shareToken地址（仅在无法通过Vault自动获取时使用）"
				},
				"setVault(address)": {
					"notice": "设置保险库合约地址"
				},
				"triggerDraw()": {
					"notice": "手动触发彩票抽奖（仅限所有者使用）"
				},
				"withdraw()": {
					"notice": "用户取款功能，直接调用Vault合约的withdraw方法"
				},
				"withdrawFromRound(uint256)": {
					"notice": "从特定轮次取款，直接调用Vault合约的withdraw(uint256)方法"
				}
			},
			"notice": "彩票系统的中央路由合约，处理用户交互和跨合约协调",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/LotteryRouter.sol": "LotteryRouter"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
				"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
			"license": "MIT",
			"urls": [
				"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
				"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2",
			"license": "MIT",
			"urls": [
				"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824",
				"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5",
			"license": "MIT",
			"urls": [
				"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e",
				"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58",
				"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"contracts/LotteryRouter.sol": {
			"keccak256": "0x7da9a0b06071fd0327053e200d26e8f8084d8da04b1138ae193846a1ff26b5da",
			"license": "MIT",
			"urls": [
				"bzz-raw://5cd4d4cba24e3d098c5277d269c5ffc4a9309c8d717593772aee2249bd3d829b",
				"dweb:/ipfs/QmdriG5LHCPxu5rFFjzAy9ApkVTvobr9krqsP26Nwzo97Q"
			]
		},
		"contracts/interfaces/ILottery.sol": {
			"keccak256": "0x472536440a9121d6ea03132361c787e021e6eb4bebda6bc0b051534821a99dcf",
			"license": "MIT",
			"urls": [
				"bzz-raw://2f8287719f077c760957ff8b5bc90ed2eee0a9adbcafc440f5f8eedb172caf40",
				"dweb:/ipfs/QmZ5qFPeQFEMZJ7gabcBzDqpiZrufE5fTPGeaCH9wCouGH"
			]
		},
		"contracts/interfaces/ILotteryRouter.sol": {
			"keccak256": "0xf1334e60d24976f09204f3d252b1463ed1d085ed37bbaf4a813436e12af42c79",
			"license": "MIT",
			"urls": [
				"bzz-raw://ee2e9ccf0971b5b60406da5072f022f7f2db41f4c2754c43e7cd8e96a86e62e4",
				"dweb:/ipfs/QmfFq5bGYAzDMcd74Xug9JMS17bPWUP43UD2oPEhiuAYMa"
			]
		},
		"contracts/interfaces/IPrizePool.sol": {
			"keccak256": "0xa2d76359374e48cb7076bd703ade1c9a70a29eb83a74b90e065d8291661a1a55",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f46bfbeb501245955ec359198ff9e2f15102e74ba22861da8eeb26f2caff8bd",
				"dweb:/ipfs/QmaHjdNjh5KDQJ843DSs9y6kH4bwtZSuXLDFmESWvH25pS"
			]
		},
		"contracts/interfaces/IVault.sol": {
			"keccak256": "0x4f529f144c5be29d409ec6de748f5df74b7c298511c987301c81268f8275ffe0",
			"license": "MIT",
			"urls": [
				"bzz-raw://102d405aac1364192e039f1c82fc056e9c8ac21cbced24c6cf9be238151ce627",
				"dweb:/ipfs/QmY2MjsWEmaRmSvYATyGBQ7USVzhN25FRa4pqm4VBpHTaU"
			]
		},
		"contracts/interfaces/IVaultShareToken.sol": {
			"keccak256": "0xd15d68b83574ee7cdcd595ca5a44486b50e2b09abb496bbf155eba14218101e9",
			"license": "MIT",
			"urls": [
				"bzz-raw://48e43cf7b53d6d37e46e40f431ad356c080e4263205e7bb01feb6324e47b3e70",
				"dweb:/ipfs/QmcKvQiBM8oCmTXekaxfmBfKtFEcRvenpDFnMVSTpGZiLr"
			]
		}
	},
	"version": 1
}